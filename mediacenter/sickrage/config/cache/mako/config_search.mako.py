# -*- coding:ascii -*-
from mako import runtime, filters, cache
UNDEFINED = runtime.UNDEFINED
STOP_RENDERING = runtime.STOP_RENDERING
__M_dict_builtin = dict
__M_locals_builtin = locals
_magic_number = 10
_modified_time = 1517450126.263334
_enable_loop = True
_template_filename = u'/app/sickrage/gui/slick/views/config_search.mako'
_template_uri = u'config_search.mako'
_source_encoding = 'ascii'
_exports = [u'tabs', u'pages']



import six
import sickbeard


def _mako_get_namespace(context, name):
    try:
        return context.namespaces[(__name__, name)]
    except KeyError:
        _mako_generate_namespaces(context)
        return context.namespaces[(__name__, name)]
def _mako_generate_namespaces(context):
    pass
def _mako_inherit(template, context):
    _mako_generate_namespaces(context)
    return runtime._inherit_from(context, u'/layouts/config.mako', _template_uri)
def render_body(context,**pageargs):
    __M_caller = context.caller_stack._push_frame()
    try:
        __M_locals = __M_dict_builtin(pageargs=pageargs)
        def tabs():
            return render_tabs(context._locals(__M_locals))
        bool = context.get('bool', UNDEFINED)
        def pages():
            return render_pages(context._locals(__M_locals))
        _ = context.get('_', UNDEFINED)
        srRoot = context.get('srRoot', UNDEFINED)
        __M_writer = context.writer()
        __M_writer(u'\n')
        __M_writer(u'\n\n')
        if 'parent' not in context._data or not hasattr(context._data['parent'], 'tabs'):
            context['self'].tabs(**pageargs)
        

        __M_writer(u'\n\n')
        if 'parent' not in context._data or not hasattr(context._data['parent'], 'pages'):
            context['self'].pages(**pageargs)
        

        __M_writer(u'\n')
        return ''
    finally:
        context.caller_stack._pop_frame()


def render_tabs(context,**pageargs):
    __M_caller = context.caller_stack._push_frame()
    try:
        def tabs():
            return render_tabs(context)
        _ = context.get('_', UNDEFINED)
        __M_writer = context.writer()
        __M_writer(u'\n    <li><a href="#episode-search">')
        __M_writer(unicode(_('Episode Search')))
        __M_writer(u'</a></li>\n    <li><a href="#nzb-search">')
        __M_writer(unicode(_('NZB Search')))
        __M_writer(u'</a></li>\n    <li><a href="#torrent-search">')
        __M_writer(unicode(_('Torrent Search')))
        __M_writer(u'</a></li>\n')
        return ''
    finally:
        context.caller_stack._pop_frame()


def render_pages(context,**pageargs):
    __M_caller = context.caller_stack._push_frame()
    try:
        bool = context.get('bool', UNDEFINED)
        def pages():
            return render_pages(context)
        _ = context.get('_', UNDEFINED)
        srRoot = context.get('srRoot', UNDEFINED)
        __M_writer = context.writer()
        __M_writer(u'\n    <form id="configForm" action="saveSearch" method="post">\n\n        <div id="config-components">\n\n            <!-- Episode search -->\n            <div id="episode-search" class="component-group">\n\n                <div class="row">\n                    <div class="col-lg-3 col-md-4 col-sm-4 col-xs-12">\n                        <div class="component-group-desc">\n                            <h3>')
        __M_writer(unicode(_('Episode Search')))
        __M_writer(u'</h3>\n                            <p>')
        __M_writer(unicode(_('How to manage searching with')))
        __M_writer(u' <a href="')
        __M_writer(unicode(srRoot))
        __M_writer(u'/config/providers">providers</a>.</p>\n                        </div>\n                    </div>\n                    <div class="col-lg-9 col-md-8 col-sm-8 col-xs-12">\n\n                        <fieldset class="component-group-list">\n\n                            <div class="field-pair row">\n                                <div class="col-lg-3 col-md-4 col-sm-5 col-xs-12">\n                                    <label class="component-title">')
        __M_writer(unicode(_('Randomize Providers')))
        __M_writer(u'</label>\n                                </div>\n                                <div class="col-lg-9 col-md-8 col-sm-7 col-xs-12 component-desc">\n                                    <input type="checkbox" name="randomize_providers" id="randomize_providers"\n                                           class="enabler" ')
        __M_writer(unicode(('', 'checked="checked"')[bool(sickbeard.RANDOMIZE_PROVIDERS)]))
        __M_writer(u'/>\n                                    <label for="randomize_providers">')
        __M_writer(unicode(_('randomize the provider search order instead of going in order of placement')))
        __M_writer(u'</label>\n                                </div>\n                            </div>\n\n                            <div class="field-pair row">\n                                <div class="col-lg-3 col-md-4 col-sm-5 col-xs-12">\n                                    <label class="component-title">')
        __M_writer(unicode(_('Download propers')))
        __M_writer(u'</label>\n                                </div>\n                                <div class="col-lg-9 col-md-8 col-sm-7 col-xs-12 component-desc">\n                                    <input type="checkbox" name="download_propers" id="download_propers"\n                                           class="enabler" ')
        __M_writer(unicode(('', 'checked="checked"')[bool(sickbeard.DOWNLOAD_PROPERS)]))
        __M_writer(u'/>\n                                    <label for="download_propers">')
        __M_writer(unicode(_('replace original download with "Proper" or "Repack" if nuked')))
        __M_writer(u'</label>\n                                </div>\n                            </div>\n\n                            <div id="content_download_propers">\n\n                                <div class="field-pair row">\n                                    <div class="col-lg-3 col-md-4 col-sm-5 col-xs-12">\n                                        <label class="component-title">')
        __M_writer(unicode(_('Check propers every')))
        __M_writer(u'</label>\n                                    </div>\n                                    <div class="col-lg-9 col-md-8 col-sm-7 col-xs-12 component-desc">\n                                        <select id="check_propers_interval" name="check_propers_interval" class="form-control input-sm input150">\n                                            ')
        check_propers_interval_text = {'daily': _('24 hours'), '4h': _('4 hours'), '90m': _('90 mins'), '45m': _('45 mins'), '15m': _('15 mins')} 
        
        __M_writer(u'\n')
        for curInterval in check_propers_interval_text:
            __M_writer(u'                                                <option value="')
            __M_writer(unicode(curInterval))
            __M_writer(u'" ')
            __M_writer(unicode(('', 'selected="selected"')[sickbeard.CHECK_PROPERS_INTERVAL == curInterval]))
            __M_writer(u'>')
            __M_writer(unicode(check_propers_interval_text[curInterval]))
            __M_writer(u'</option>\n')
        __M_writer(u'                                        </select>\n                                    </div>\n                                </div>\n                            </div>\n\n                            <div class="field-pair row">\n                                <div class="col-lg-3 col-md-4 col-sm-5 col-xs-12">\n                                    <label class="component-title">')
        __M_writer(unicode(_('Backlog search day(s)')))
        __M_writer(u'</label>\n                                </div>\n                                <div class="col-lg-9 col-md-8 col-sm-7 col-xs-12 component-desc">\n                                    <div class="row">\n                                        <div class="col-md-12">\n                                            <input type="number" min="1" step="1" name="backlog_days"\n                                                   value="')
        __M_writer(unicode(sickbeard.BACKLOG_DAYS))
        __M_writer(u'" class="form-control input-sm input75"\n                                                   autocapitalize="off" id="backlog_days"/>\n                                        </div>\n                                    </div>\n                                    <div class="row">\n                                        <div class="col-md-12">\n                                            <label for="backlog_days">')
        __M_writer(unicode(_('number of day(s) that the "Forced Backlog Search" will cover (e.g. 7 Days)')))
        __M_writer(u'</label>\n                                        </div>\n                                    </div>\n                                </div>\n                            </div>\n\n                            <div class="field-pair row">\n                                <div class="col-lg-3 col-md-4 col-sm-5 col-xs-12">\n                                    <label class="component-title">')
        __M_writer(unicode(_('Backlog search frequency')))
        __M_writer(u'</label>\n                                </div>\n                                <div class="col-lg-9 col-md-8 col-sm-7 col-xs-12 component-desc">\n                                    <div class="row">\n                                        <div class="col-md-12">\n                                            <input type="number" min="720" step="60" name="backlog_frequency"\n                                                   value="')
        __M_writer(unicode(sickbeard.BACKLOG_FREQUENCY))
        __M_writer(u'" class="form-control input-sm input75"\n                                                   id="backlog_frequency" autocapitalize="off"/>\n                                        </div>\n                                    </div>\n                                    <div class="row">\n                                        <div class="col-md-12">\n                                            <label for="backlog_frequency">')
        __M_writer(unicode(_('time in minutes between searches (min.')))
        __M_writer(u' ')
        __M_writer(unicode(sickbeard.MIN_BACKLOG_FREQUENCY))
        __M_writer(u')</label>\n                                        </div>\n                                    </div>\n                                </div>\n                            </div>\n\n                            <div class="field-pair row">\n                                <div class="col-lg-3 col-md-4 col-sm-5 col-xs-12">\n                                    <label class="component-title">')
        __M_writer(unicode(_('Daily search frequency')))
        __M_writer(u'</label>\n                                </div>\n                                <div class="col-lg-9 col-md-8 col-sm-7 col-xs-12 component-desc">\n                                    <div class="row">\n                                        <div class="col-md-12">\n                                            <input type="number" min="10" step="1" name="dailysearch_frequency"\n                                                   id="dailysearch_frequency" value="')
        __M_writer(unicode(sickbeard.DAILYSEARCH_FREQUENCY))
        __M_writer(u'"\n                                                   class="form-control input-sm input75" autocapitalize="off"/>\n                                        </div>\n                                    </div>\n                                    <div class="row">\n                                        <div class="col-md-12">\n                                            <label for="dailysearch_frequency">')
        __M_writer(unicode(_('time in minutes between searches (min.')))
        __M_writer(u' ')
        __M_writer(unicode(sickbeard.MIN_DAILYSEARCH_FREQUENCY))
        __M_writer(u')</label>\n                                        </div>\n                                    </div>\n                                </div>\n                            </div>\n\n                            <div class="field-pair row">\n                                <div class="col-lg-3 col-md-4 col-sm-5 col-xs-12">\n                                    <label class="component-title">')
        __M_writer(unicode(_('Usenet retention')))
        __M_writer(u'</label>\n                                </div>\n                                <div class="col-lg-9 col-md-8 col-sm-7 col-xs-12 component-desc">\n                                    <div class="row">\n                                        <div class="col-md-12">\n                                            <input type="number" min="1" step="1" name="usenet_retention"\n                                                   value="')
        __M_writer(unicode(sickbeard.USENET_RETENTION))
        __M_writer(u'" class="form-control input-sm input75"\n                                                   id="usenet_retention" autocapitalize="off"/>\n                                        </div>\n                                    </div>\n                                    <div class="row">\n                                        <div class="col-md-12">\n                                            <label for="usenet_retention">')
        __M_writer(unicode(_('age limit in days for usenet articles to be used (e.g. 500)')))
        __M_writer(u'</label>\n                                        </div>\n                                    </div>\n                                </div>\n                            </div>\n\n                            <div class="field-pair row">\n                                <div class="col-lg-3 col-md-4 col-sm-5 col-xs-12">\n                                    <label class="component-title">')
        __M_writer(unicode(_('Ignore words')))
        __M_writer(u'</label>\n                                </div>\n                                <div class="col-lg-9 col-md-8 col-sm-7 col-xs-12 component-desc">\n                                    <div class="row">\n                                        <div class="col-md-12">\n                                            <input type="text" name="ignore_words" value="')
        __M_writer(unicode(sickbeard.IGNORE_WORDS))
        __M_writer(u'"\n                                                   id="ignore_words" class="form-control input-sm input350" autocapitalize="off"/>\n                                        </div>\n                                    </div>\n                                    <div class="row">\n                                        <div class="col-md-12">\n                                            <label for="ignore_words">')
        __M_writer(unicode(_('''results with one or more word from this list will be ignored<br>separate words with a comma, e.g. "word1,word2,word3"''')))
        __M_writer(u'</label>\n                                        </div>\n                                    </div>\n                                </div>\n                            </div>\n\n                            <div class="field-pair row">\n                                <div class="col-lg-3 col-md-4 col-sm-5 col-xs-12">\n                                    <label class="component-title">')
        __M_writer(unicode(_('Require words')))
        __M_writer(u'</label>\n                                </div>\n                                <div class="col-lg-9 col-md-8 col-sm-7 col-xs-12 component-desc">\n                                    <div class="row">\n                                        <div class="col-md-12">\n                                            <input type="text" name="require_words" value="')
        __M_writer(unicode(sickbeard.REQUIRE_WORDS))
        __M_writer(u'"\n                                                   id="require_words" class="form-control input-sm input350" autocapitalize="off"/>\n                                        </div>\n                                    </div>\n                                    <div class="row">\n                                        <div class="col-md-12">\n                                            <label for="require_words">')
        __M_writer(unicode(_('''results with no word from this list will be ignored<br>separate words with a comma, e.g. "word1,word2,word3"''')))
        __M_writer(u'</label>\n                                        </div>\n                                    </div>\n                                </div>\n                            </div>\n\n                            <div class="field-pair row">\n                                <div class="col-lg-3 col-md-4 col-sm-5 col-xs-12">\n                                    <label class="component-title">')
        __M_writer(unicode(_('Trackers list')))
        __M_writer(u'</label>\n                                </div>\n                                <div class="col-lg-9 col-md-8 col-sm-7 col-xs-12 component-desc">\n                                    <div class="row">\n                                        <div class="col-md-12">\n                                            <input type="text" name="trackers_list" value="')
        __M_writer(unicode(sickbeard.TRACKERS_LIST))
        __M_writer(u'"\n                                                   class="form-control input-sm input350" autocapitalize="off"/>\n                                        </div>\n                                    </div>\n                                    <div class="row">\n                                        <div class="col-md-12">\n                                            <label for="usenet_retention">')
        __M_writer(unicode(_('''trackers that will be added to magnets without trackers<br>separate trackers with a comma, e.g. "tracker1,tracker2,tracker3"''')))
        __M_writer(u'</label>\n                                        </div>\n                                    </div>\n                                </div>\n                            </div>\n\n                            <div class="field-pair row">\n                                <div class="col-lg-3 col-md-4 col-sm-5 col-xs-12">\n                                    <label class="component-title">')
        __M_writer(unicode(_('Ignore language names in subbed results')))
        __M_writer(u'</label>\n                                </div>\n                                <div class="col-lg-9 col-md-8 col-sm-7 col-xs-12 component-desc">\n                                    <div class="row">\n                                        <div class="col-md-12">\n                                            <input type="text" name="ignored_subs_list" value="')
        __M_writer(unicode(sickbeard.IGNORED_SUBS_LIST))
        __M_writer(u'"\n                                                   class="form-control input-sm input350" autocapitalize="off"/>\n                                        </div>\n                                    </div>\n                                    <div class="row">\n                                        <div class="col-md-12">\n                                            <label for="usenet_retention">')
        __M_writer(unicode(_('''ignore subbed releases based on language names <br>
                            Example: "dk" will ignore words: dksub, dksubs, dksubbed, dksubed <br>
                            separate languages with a comma, e.g. "lang1,lang2,lang3''')))
        __M_writer(u'</label>\n                                        </div>\n                                    </div>\n                                </div>\n                            </div>\n\n                            <div class="field-pair row">\n                                <div class="col-lg-3 col-md-4 col-sm-5 col-xs-12">\n                                    <label class="component-title">')
        __M_writer(unicode(_('Allow high priority')))
        __M_writer(u'</label>\n                                </div>\n                                <div class="col-lg-9 col-md-8 col-sm-7 col-xs-12 component-desc">\n                                    <input type="checkbox" name="allow_high_priority"\n                                           id="allow_high_priority" ')
        __M_writer(unicode(('', 'checked="checked"')[bool(sickbeard.ALLOW_HIGH_PRIORITY)]))
        __M_writer(u'/>\n                                    <label for="allow_high_priority">')
        __M_writer(unicode(_('set downloads of recently aired episodes to high priority')))
        __M_writer(u'</label>\n                                </div>\n                            </div>\n\n                            <div class="field-pair row">\n                                <div class="col-lg-3 col-md-4 col-sm-5 col-xs-12">\n                                    <label class="component-title">')
        __M_writer(unicode(_('Use Failed Downloads')))
        __M_writer(u'</label>\n                                </div>\n                                <div class="col-lg-9 col-md-8 col-sm-7 col-xs-12 component-desc">\n                                    <div class="row">\n                                        <div class="col-md-12">\n                                            <input id="use_failed_downloads" type="checkbox" class="enabler"\n                                                   name="use_failed_downloads" ')
        __M_writer(unicode(('', 'checked="checked"')[bool(sickbeard.USE_FAILED_DOWNLOADS)]))
        __M_writer(u' />\n                                            <label for="use_failed_downloads">')
        __M_writer(unicode(_('use Failed Download Handling?')))
        __M_writer(u'</label>\n                                        </div>\n                                    </div>\n                                    <div class="row">\n                                        <div class="col-md-12">\n                                            <label>')
        __M_writer(unicode(_('will only work with snatched/downloaded episodes after enabling this')))
        __M_writer(u'</label>\n                                        </div>\n                                    </div>\n                                </div>\n                            </div>\n\n                            <div id="content_use_failed_downloads">\n\n                                <div class="field-pair row">\n                                    <div class="col-lg-3 col-md-4 col-sm-5 col-xs-12">\n                                        <label class="component-title">')
        __M_writer(unicode(_('Delete Failed')))
        __M_writer(u'</label>\n                                    </div>\n                                    <div class="col-lg-9 col-md-8 col-sm-7 col-xs-12 component-desc">\n                                        <div class="row">\n                                            <div class="col-md-12">\n                                                <input id="delete_failed" type="checkbox"\n                                                       name="delete_failed" ')
        __M_writer(unicode(('', 'checked="checked"')[bool(sickbeard.DELETE_FAILED)]))
        __M_writer(u'/>\n                                                <label for="delete_failed">')
        __M_writer(unicode(_('delete files left over from a failed download?')))
        __M_writer(u'</label>\n                                            </div>\n                                        </div>\n                                        <div class="row">\n                                            <div class="col-md-12">\n                                                <label><b>')
        __M_writer(unicode(_('note')))
        __M_writer(u':</b> ')
        __M_writer(unicode(_('this only works if Use Failed Downloads is enabled.')))
        __M_writer(u'</label>\n                                            </div>\n                                        </div>\n                                    </div>\n                                </div>\n\n                            </div>\n\n                        </fieldset>\n                    </div>\n                </div>\n            </div>\n\n            <!-- Nzb search -->\n            <div id="nzb-search" class="component-group">\n                <div class="row">\n                    <div class="col-lg-3 col-md-4 col-sm-4 col-xs-12">\n                        <div class="component-group-desc">\n                            <h3>')
        __M_writer(unicode(_('NZB Search')))
        __M_writer(u'</h3>\n                            <p>')
        __M_writer(unicode(_('How to handle NZB search results.')))
        __M_writer(u'</p>\n                            <div id="nzb_method_icon" class="add-client-icon-')
        __M_writer(unicode(sickbeard.NZB_METHOD))
        __M_writer(u'"></div>\n                        </div>\n                    </div>\n                    <div class="col-lg-9 col-md-8 col-sm-8 col-xs-12">\n\n                        <fieldset class="component-group-list">\n\n                            <div class="field-pair row">\n                                <div class="col-lg-3 col-md-4 col-sm-5 col-xs-12">\n                                    <label class="component-title">')
        __M_writer(unicode(_('Search NZBs')))
        __M_writer(u'</label>\n                                </div>\n                                <div class="col-lg-9 col-md-8 col-sm-7 col-xs-12 component-desc">\n                                    <input type="checkbox" name="use_nzbs" class="enabler"\n                                           id="use_nzbs" ')
        __M_writer(unicode(('', 'checked="checked"')[bool(sickbeard.USE_NZBS)]))
        __M_writer(u'/>\n                                    <label for="use_nzbs">')
        __M_writer(unicode(_('enable NZB search providers')))
        __M_writer(u'</label>\n                                </div>\n                            </div>\n\n                            <div id="content_use_nzbs">\n\n                                <div class="field-pair row">\n                                    <div class="col-lg-3 col-md-4 col-sm-5 col-xs-12">\n                                        <label class="component-title">')
        __M_writer(unicode(_('Send .nzb files to')))
        __M_writer(u'</label>\n                                    </div>\n                                    <div class="col-lg-9 col-md-8 col-sm-7 col-xs-12 component-desc">\n                                        <select name="nzb_method" id="nzb_method" class="form-control input-sm input150" title="nzb_method">\n                                            ')
        nzb_method_text = {'blackhole': "Black hole", 'sabnzbd': "SABnzbd", 'nzbget': "NZBget", 'download_station': "Synology DS"} 
        
        __M_writer(u'\n')
        for curAction in ('blackhole', 'sabnzbd', 'nzbget', 'download_station'):
            __M_writer(u'                                                <option value="')
            __M_writer(unicode(curAction))
            __M_writer(u'" ')
            __M_writer(unicode(('', 'selected="selected"')[sickbeard.NZB_METHOD == curAction]))
            __M_writer(u'>')
            __M_writer(unicode(nzb_method_text[curAction]))
            __M_writer(u'</option>\n')
        __M_writer(u'                                        </select>\n                                    </div>\n                                </div>\n\n                                <div id="sabnzbd_settings">\n\n                                    <div class="field-pair row">\n                                        <div class="col-lg-3 col-md-4 col-sm-5 col-xs-12">\n                                            <label class="component-title">')
        __M_writer(unicode(_('SABnzbd server URL')))
        __M_writer(u'</label>\n                                        </div>\n                                        <div class="col-lg-9 col-md-8 col-sm-7 col-xs-12 component-desc">\n                                            <div class="row">\n                                                <div class="col-md-12">\n                                                    <input type="text" id="sab_host" name="sab_host" value="')
        __M_writer(unicode(sickbeard.SAB_HOST))
        __M_writer(u'"\n                                                           class="form-control input-sm input350" autocapitalize="off"/>\n                                                </div>\n                                            </div>\n                                            <div class="row">\n                                                <div class="col-md-12">\n                                                    <label for="sab_host">')
        __M_writer(unicode(_('URL to your SABnzbd server (e.g. http://localhost:8080/)')))
        __M_writer(u'</label>\n                                                </div>\n                                            </div>\n                                        </div>\n                                    </div>\n\n                                    <div class="field-pair row">\n                                        <div class="col-lg-3 col-md-4 col-sm-5 col-xs-12">\n                                            <label class="component-title">')
        __M_writer(unicode(_('SABnzbd username')))
        __M_writer(u'</label>\n                                        </div>\n                                        <div class="col-lg-9 col-md-8 col-sm-7 col-xs-12 component-desc">\n                                            <div class="row">\n                                                <div class="col-md-12">\n                                                    <input type="text" name="sab_username" id="sab_username"\n                                                           value="')
        __M_writer(unicode(sickbeard.SAB_USERNAME))
        __M_writer(u'" class="form-control input-sm input200"\n                                                           autocapitalize="off" autocomplete="no"/>\n                                                </div>\n                                            </div>\n                                            <div class="row">\n                                                <div class="col-md-12">\n                                                    <label for="sab_username">')
        __M_writer(unicode(_('(blank for none)')))
        __M_writer(u'</label>\n                                                </div>\n                                            </div>\n                                        </div>\n                                    </div>\n\n                                    <div class="field-pair row">\n                                        <div class="col-lg-3 col-md-4 col-sm-5 col-xs-12">\n                                            <label class="component-title">')
        __M_writer(unicode(_('SABnzbd password')))
        __M_writer(u'</label>\n                                        </div>\n                                        <div class="col-lg-9 col-md-8 col-sm-7 col-xs-12 component-desc">\n                                            <div class="row">\n                                                <div class="col-md-12">\n                                                    <input type="password" name="sab_password" id="sab_password"\n                                                           value="')
        __M_writer(unicode(sickbeard.SAB_PASSWORD))
        __M_writer(u'" class="form-control input-sm input200"\n                                                           autocomplete="no" autocapitalize="off"/>\n                                                </div>\n                                            </div>\n                                            <div class="row">\n                                                <div class="col-md-12">\n                                                    <label for="sab_password">')
        __M_writer(unicode(_('(blank for none)')))
        __M_writer(u'</label>\n                                                </div>\n                                            </div>\n                                        </div>\n                                    </div>\n\n                                    <div class="field-pair row">\n                                        <div class="col-lg-3 col-md-4 col-sm-5 col-xs-12">\n                                            <label class="component-title">')
        __M_writer(unicode(_('SABnzbd API key')))
        __M_writer(u'</label>\n                                        </div>\n                                        <div class="col-lg-9 col-md-8 col-sm-7 col-xs-12 component-desc">\n                                            <div class="row">\n                                                <div class="col-md-12">\n                                                    <input type="text" name="sab_apikey" id="sab_apikey"\n                                                           value="')
        __M_writer(unicode(sickbeard.SAB_APIKEY))
        __M_writer(u'" class="form-control input-sm input350"\n                                                           autocapitalize="off"/>\n                                                </div>\n                                            </div>\n                                            <div class="row">\n                                                <div class="col-md-12">\n                                                    <label for="sab_apikey">')
        __M_writer(unicode(_('locate at... SABnzbd Config -> General -> API Key')))
        __M_writer(u'</label>\n                                                </div>\n                                            </div>\n                                        </div>\n                                    </div>\n\n                                    <div class="field-pair row">\n                                        <div class="col-lg-3 col-md-4 col-sm-5 col-xs-12">\n                                            <label class="component-title">')
        __M_writer(unicode(_('Use SABnzbd category')))
        __M_writer(u'</label>\n                                        </div>\n                                        <div class="col-lg-9 col-md-8 col-sm-7 col-xs-12 component-desc">\n                                            <div class="row">\n                                                <div class="col-md-12">\n                                                    <input type="text" name="sab_category" id="sab_category"\n                                                           value="')
        __M_writer(unicode(sickbeard.SAB_CATEGORY))
        __M_writer(u'" class="form-control input-sm input200"\n                                                           autocapitalize="off"/>\n                                                </div>\n                                            </div>\n                                            <div class="row">\n                                                <div class="col-md-12">\n                                                    <label for="sab_category">')
        __M_writer(unicode(_('add downloads to this category (e.g. TV)')))
        __M_writer(u'</label>\n                                                </div>\n                                            </div>\n                                        </div>\n                                    </div>\n\n                                    <div class="field-pair row">\n                                        <div class="col-lg-3 col-md-4 col-sm-5 col-xs-12">\n                                            <label class="component-title">')
        __M_writer(unicode(_('Use SABnzbd category (backlog episodes)')))
        __M_writer(u'</label>\n                                        </div>\n                                        <div class="col-lg-9 col-md-8 col-sm-7 col-xs-12 component-desc">\n                                            <div class="row">\n                                                <div class="col-md-12">\n                                                    <input type="text" name="sab_category_backlog" id="sab_category_backlog"\n                                                           value="')
        __M_writer(unicode(sickbeard.SAB_CATEGORY_BACKLOG))
        __M_writer(u'"\n                                                           class="form-control input-sm input200" autocapitalize="off"/>\n                                                </div>\n                                            </div>\n                                            <div class="row">\n                                                <div class="col-md-12">\n                                                    <label for="sab_category_backlog">')
        __M_writer(unicode(_('add downloads of old episodes to this category (e.g. TV)')))
        __M_writer(u'</label>\n                                                </div>\n                                            </div>\n                                        </div>\n                                    </div>\n\n                                    <div class="field-pair row">\n                                        <div class="col-lg-3 col-md-4 col-sm-5 col-xs-12">\n                                            <label class="component-title">')
        __M_writer(unicode(_('Use SABnzbd category for anime')))
        __M_writer(u'</label>\n                                        </div>\n                                        <div class="col-lg-9 col-md-8 col-sm-7 col-xs-12 component-desc">\n                                            <div class="row">\n                                                <div class="col-md-12">\n                                                    <input type="text" name="sab_category_anime" id="sab_category_anime"\n                                                           value="')
        __M_writer(unicode(sickbeard.SAB_CATEGORY_ANIME))
        __M_writer(u'"\n                                                           class="form-control input-sm input200" autocapitalize="off"/>\n                                                </div>\n                                            </div>\n                                            <div class="row">\n                                                <div class="col-md-12">\n                                                    <label for="sab_category_anime">')
        __M_writer(unicode(_('add anime downloads to this category (e.g. anime)')))
        __M_writer(u'</label>\n                                                </div>\n                                            </div>\n                                        </div>\n                                    </div>\n\n\n                                    <div class="field-pair row">\n                                        <div class="col-lg-3 col-md-4 col-sm-5 col-xs-12">\n                                            <label class="component-title">')
        __M_writer(unicode(_('Use SABnzbd category for anime (backlog episodes)')))
        __M_writer(u'</label>\n                                        </div>\n                                        <div class="col-lg-9 col-md-8 col-sm-7 col-xs-12 component-desc">\n                                            <div class="row">\n                                                <div class="col-md-12">\n                                                    <input type="text" name="sab_category_anime_backlog"\n                                                           id="sab_category_anime_backlog"\n                                                           value="')
        __M_writer(unicode(sickbeard.SAB_CATEGORY_ANIME_BACKLOG))
        __M_writer(u'"\n                                                           class="form-control input-sm input200" autocapitalize="off"/>\n                                                </div>\n                                            </div>\n                                            <div class="row">\n                                                <div class="col-md-12">\n                                                    <label for="sab_category_anime_backlog">')
        __M_writer(unicode(_('add anime downloads of old episodes to this category (e.g. anime)')))
        __M_writer(u'</label>\n                                                </div>\n                                            </div>\n                                        </div>\n                                    </div>\n\n')
        if sickbeard.ALLOW_HIGH_PRIORITY is True:
            __M_writer(u'                                        <div class="field-pair row">\n                                            <div class="col-lg-3 col-md-4 col-sm-5 col-xs-12">\n                                                <label class="component-title">')
            __M_writer(unicode(_('Use forced priority')))
            __M_writer(u'</label>\n                                            </div>\n                                            <div class="col-lg-9 col-md-8 col-sm-7 col-xs-12 component-desc">\n                                                <input type="checkbox" name="sab_forced" class="enabler"\n                                                       id="sab_forced" ')
            __M_writer(unicode(('', 'checked="checked"')[bool(sickbeard.SAB_FORCED)]))
            __M_writer(u'/>\n                                                <label for="sab_forced">')
            __M_writer(unicode(_('enable to change priority from HIGH to FORCED')))
            __M_writer(u'</label>\n                                            </div>\n                                        </div>\n')
        __M_writer(u'                                </div>\n\n                                <div id="blackhole_settings">\n                                    <div class="field-pair row">\n                                        <div class="col-lg-3 col-md-4 col-sm-5 col-xs-12">\n                                            <label class="component-title">')
        __M_writer(unicode(_('Black hole folder location')))
        __M_writer(u'</label>\n                                        </div>\n                                        <div class="col-lg-9 col-md-8 col-sm-7 col-xs-12 component-desc">\n                                            <div class="row">\n                                                <div class="col-md-12">\n                                                    <input type="text" name="nzb_dir" id="nzb_dir" value="')
        __M_writer(unicode(sickbeard.NZB_DIR))
        __M_writer(u'"\n                                                           class="form-control input-sm input350" autocapitalize="off"/>\n                                                </div>\n                                            </div>\n                                            <div class="row">\n                                                <div class="col-md-12">\n                                                    <label for="nzb_dir">')
        __M_writer(unicode(_('<b>.nzb</b> files are stored at this location for external software to find and use')))
        __M_writer(u'</label>\n                                                </div>\n                                            </div>\n                                        </div>\n                                    </div>\n                                </div>\n\n                                <div id="nzbget_settings">\n\n                                    <div class="field-pair row">\n                                        <div class="col-lg-3 col-md-4 col-sm-5 col-xs-12">\n                                            <label class="component-title">')
        __M_writer(unicode(_('Connect using HTTPS')))
        __M_writer(u'</label>\n                                        </div>\n                                        <div class="col-lg-9 col-md-8 col-sm-7 col-xs-12 component-desc">\n                                            <div class="row">\n                                                <div class="col-md-12">\n                                                    <input id="nzbget_use_https" type="checkbox" class="enabler"\n                                                           name="nzbget_use_https" ')
        __M_writer(unicode(('', 'checked="checked"')[bool(sickbeard.NZBGET_USE_HTTPS)]))
        __M_writer(u'/>\n                                                </div>\n                                            </div>\n                                            <div class="row">\n                                                <div class="col-md-12">\n                                                    <label for="nzbget_use_https"><b>')
        __M_writer(unicode(_('note')))
        __M_writer(u':</b> ')
        __M_writer(unicode(_('enable Secure control in NZBGet and set the correct Secure Port here')))
        __M_writer(u'</label>\n                                                </div>\n                                            </div>\n                                        </div>\n                                    </div>\n\n                                    <div class="field-pair row">\n                                        <div class="col-lg-3 col-md-4 col-sm-5 col-xs-12">\n                                            <label class="component-title">')
        __M_writer(unicode(_('NZBget host:port')))
        __M_writer(u'</label>\n                                        </div>\n                                        <div class="col-lg-9 col-md-8 col-sm-7 col-xs-12 component-desc">\n                                            <div class="row">\n                                                <div class="col-md-12">\n                                                    <input type="text" name="nzbget_host" id="nzbget_host"\n                                                           value="')
        __M_writer(unicode(sickbeard.NZBGET_HOST))
        __M_writer(u'" class="form-control input-sm input350"\n                                                           autocapitalize="off"/>\n                                                </div>\n                                            </div>\n                                            <div class="row">\n                                                <div class="col-md-12">\n                                                    <label for="nzbget_host">')
        __M_writer(unicode(_('(e.g. localhost:6789)')))
        __M_writer(u'</label>\n                                                </div>\n                                            </div>\n                                            <div class="row">\n                                                <div class="col-md-12">\n                                                    <label>')
        __M_writer(unicode(_('NZBget RPC host name and port number (not NZBgetweb!)')))
        __M_writer(u'</label>\n                                                </div>\n                                            </div>\n                                        </div>\n                                    </div>\n\n                                    <div class="field-pair row">\n                                        <div class="col-lg-3 col-md-4 col-sm-5 col-xs-12">\n                                            <label class="component-title">')
        __M_writer(unicode(_('NZBget username')))
        __M_writer(u'</label>\n                                        </div>\n                                        <div class="col-lg-9 col-md-8 col-sm-7 col-xs-12 component-desc">\n                                            <div class="row">\n                                                <div class="col-md-12">\n                                                    <input type="text" name="nzbget_username" value="')
        __M_writer(unicode(sickbeard.NZBGET_USERNAME))
        __M_writer(u'"\n                                                           class="form-control input-sm input200" autocapitalize="off"\n                                                           id="nzbget_username" autocomplete="no"/>\n                                                </div>\n                                            </div>\n                                            <div class="row">\n                                                <div class="col-md-12">\n                                                    <label for="nzbget_username">')
        __M_writer(unicode(_('locate in nzbget.conf (default:nzbget)')))
        __M_writer(u'</label>\n                                                </div>\n                                            </div>\n                                        </div>\n                                    </div>\n\n                                    <div class="field-pair row">\n                                        <div class="col-lg-3 col-md-4 col-sm-5 col-xs-12">\n                                            <label class="component-title">')
        __M_writer(unicode(_('NZBget password')))
        __M_writer(u'</label>\n                                        </div>\n                                        <div class="col-lg-9 col-md-8 col-sm-7 col-xs-12 component-desc">\n                                            <div class="row">\n                                                <div class="col-md-12">\n                                                    <input type="password" name="nzbget_password" id="nzbget_password"\n                                                           value="')
        __M_writer(unicode(sickbeard.NZBGET_PASSWORD))
        __M_writer(u'"\n                                                           class="form-control input-sm input200" autocomplete="no"\n                                                           autocapitalize="off"/>\n                                                </div>\n                                            </div>\n                                            <div class="row">\n                                                <div class="col-md-12">\n                                                    <label for="nzbget_password">')
        __M_writer(unicode(_('locate in nzbget.conf (default:tegbzn6789)')))
        __M_writer(u'</label>\n                                                </div>\n                                            </div>\n                                        </div>\n                                    </div>\n\n                                    <div class="field-pair row">\n                                        <div class="col-lg-3 col-md-4 col-sm-5 col-xs-12">\n                                            <label class="component-title">')
        __M_writer(unicode(_('Use NZBget category')))
        __M_writer(u'</label>\n                                        </div>\n                                        <div class="col-lg-9 col-md-8 col-sm-7 col-xs-12 component-desc">\n                                            <div class="row">\n                                                <div class="col-md-12">\n                                                    <input type="text" name="nzbget_category" id="nzbget_category"\n                                                           value="')
        __M_writer(unicode(sickbeard.NZBGET_CATEGORY))
        __M_writer(u'"\n                                                           class="form-control input-sm input200" autocapitalize="off"/>\n                                                </div>\n                                            </div>\n                                            <div class="row">\n                                                <div class="col-md-12">\n                                                    <label for="nzbget_category">')
        __M_writer(unicode(_('send downloads marked this category (e.g. TV)')))
        __M_writer(u'</label>\n                                                </div>\n                                            </div>\n                                        </div>\n                                    </div>\n\n                                    <div class="field-pair row">\n                                        <div class="col-lg-3 col-md-4 col-sm-5 col-xs-12">\n                                            <label class="component-title">')
        __M_writer(unicode(_('Use NZBget category (backlog episodes)')))
        __M_writer(u'</label>\n                                        </div>\n                                        <div class="col-lg-9 col-md-8 col-sm-7 col-xs-12 component-desc">\n                                            <div class="row">\n                                                <div class="col-md-12">\n                                                    <input type="text" name="nzbget_category_backlog" id="nzbget_category_backlog"\n                                                           value="')
        __M_writer(unicode(sickbeard.NZBGET_CATEGORY_BACKLOG))
        __M_writer(u'"\n                                                           class="form-control input-sm input200" autocapitalize="off"/>\n                                                </div>\n                                            </div>\n                                            <div class="row">\n                                                <div class="col-md-12">\n                                                    <label for="nzbget_category_backlog">')
        __M_writer(unicode(_('send downloads of old episodes marked this category (e.g. TV)')))
        __M_writer(u'</label>\n                                                </div>\n                                            </div>\n                                        </div>\n                                    </div>\n\n                                    <div class="field-pair row">\n                                        <div class="col-lg-3 col-md-4 col-sm-5 col-xs-12">\n                                            <label class="component-title">')
        __M_writer(unicode(_('Use NZBget category for anime')))
        __M_writer(u'</label>\n                                        </div>\n                                        <div class="col-lg-9 col-md-8 col-sm-7 col-xs-12 component-desc">\n                                            <div class="row">\n                                                <div class="col-md-12">\n                                                    <input type="text" name="nzbget_category_anime" id="nzbget_category_anime"\n                                                           value="')
        __M_writer(unicode(sickbeard.NZBGET_CATEGORY_ANIME))
        __M_writer(u'"\n                                                           class="form-control input-sm input200" autocapitalize="off"/>\n                                                </div>\n                                            </div>\n                                            <div class="row">\n                                                <div class="col-md-12">\n                                                    <label for="nzbget_category_anime">')
        __M_writer(unicode(_('send anime downloads marked this category (e.g. anime)')))
        __M_writer(u'</label>\n                                                </div>\n                                            </div>\n                                        </div>\n                                    </div>\n\n                                    <div class="field-pair row">\n                                        <div class="col-lg-3 col-md-4 col-sm-5 col-xs-12">\n                                            <label class="component-title">')
        __M_writer(unicode(_('Use NZBget category for anime (backlog episodes)')))
        __M_writer(u'</label>\n                                        </div>\n                                        <div class="col-lg-9 col-md-8 col-sm-7 col-xs-12 component-desc">\n                                            <div class="row">\n                                                <div class="col-md-12">\n                                                    <input type="text" name="nzbget_category_anime_backlog"\n                                                           id="nzbget_category_anime_backlog"\n                                                           value="')
        __M_writer(unicode(sickbeard.NZBGET_CATEGORY_ANIME_BACKLOG))
        __M_writer(u'"\n                                                           class="form-control input-sm input200" autocapitalize="off"/>\n                                                </div>\n                                            </div>\n                                            <div class="row">\n                                                <div class="col-md-12">\n                                                    <label for="nzbget_category_anime_backlog">')
        __M_writer(unicode(_('send anime downloads of old episodes marked this category (e.g. anime)')))
        __M_writer(u'</label>\n                                                </div>\n                                            </div>\n                                        </div>\n                                    </div>\n\n                                    <div class="field-pair row">\n                                        <div class="col-lg-3 col-md-4 col-sm-5 col-xs-12">\n                                            <label class="component-title">')
        __M_writer(unicode(_('NZBget priority')))
        __M_writer(u'</label>\n                                        </div>\n                                        <div class="col-lg-9 col-md-8 col-sm-7 col-xs-12 component-desc">\n                                            <div class="row">\n                                                <div class="col-md-12">\n                                                    <select name="nzbget_priority" id="nzbget_priority" class="form-control input-sm input200">\n                                                        <option value="-100" ')
        __M_writer(unicode(('', 'selected="selected"')[sickbeard.NZBGET_PRIORITY == -100]))
        __M_writer(u'>')
        __M_writer(unicode(_('Very low')))
        __M_writer(u'</option>\n                                                        <option value="-50" ')
        __M_writer(unicode(('', 'selected="selected"')[sickbeard.NZBGET_PRIORITY == -50]))
        __M_writer(u'>')
        __M_writer(unicode(_('Low')))
        __M_writer(u'</option>\n                                                        <option value="0" ')
        __M_writer(unicode(('', 'selected="selected"')[sickbeard.NZBGET_PRIORITY == 0]))
        __M_writer(u'>')
        __M_writer(unicode(_('Normal')))
        __M_writer(u'</option>\n                                                        <option value="50" ')
        __M_writer(unicode(('', 'selected="selected"')[sickbeard.NZBGET_PRIORITY == 50]))
        __M_writer(u'>')
        __M_writer(unicode(_('High')))
        __M_writer(u'</option>\n                                                        <option value="100" ')
        __M_writer(unicode(('', 'selected="selected"')[sickbeard.NZBGET_PRIORITY == 100]))
        __M_writer(u'>')
        __M_writer(unicode(_('Very high')))
        __M_writer(u'</option>\n                                                        <option value="900" ')
        __M_writer(unicode(('', 'selected="selected"')[sickbeard.NZBGET_PRIORITY == 900]))
        __M_writer(u'>')
        __M_writer(unicode(_('Force')))
        __M_writer(u'</option>\n                                                    </select>\n                                                </div>\n                                            </div>\n                                            <div class="row">\n                                                <div class="col-md-12">\n                                                    <label for="nzbget_priority">')
        __M_writer(unicode(_('priority for daily snatches (no backlog)')))
        __M_writer(u'</label>\n                                                </div>\n                                            </div>\n                                        </div>\n                                    </div>\n                                </div>\n\n                                <div id="download_station_settings">\n\n                                    <div class="field-pair row">\n                                        <div class="col-lg-3 col-md-4 col-sm-5 col-xs-12">\n                                            <label class="component-title" id="host_title">')
        __M_writer(unicode(_('Torrent host:port')))
        __M_writer(u'</label>\n                                        </div>\n                                        <div class="col-lg-9 col-md-8 col-sm-7 col-xs-12 component-desc">\n                                            <div class="row">\n                                                <div class="col-md-12">\n                                                    <input type="text" name="syno_dsm_host" id="syno_dsm_host"\n                                                           value="')
        __M_writer(unicode(sickbeard.SYNOLOGY_DSM_HOST))
        __M_writer(u'"\n                                                           class="form-control input-sm input350" autocapitalize="off"/>\n                                                </div>\n                                            </div>\n                                            <div class="row">\n                                                <div class="col-md-12">\n                                                    <label for="syno_dsm_host">')
        __M_writer(unicode(_('URL to your Synology DSM (e.g. http://localhost:5000/)')))
        __M_writer(u'</label>\n                                                </div>\n                                            </div>\n                                        </div>\n                                    </div>\n\n                                    <div class="field-pair row">\n                                        <div class="col-lg-3 col-md-4 col-sm-5 col-xs-12">\n                                            <label class="component-title" id="username_title">')
        __M_writer(unicode(_('Client username')))
        __M_writer(u'</label>\n                                        </div>\n                                        <div class="col-lg-9 col-md-8 col-sm-7 col-xs-12 component-desc">\n                                            <div class="row">\n                                                <div class="col-md-12">\n                                                    <input type="text" name="syno_dsm_user" id="syno_dsm_user"\n                                                           value="')
        __M_writer(unicode(sickbeard.SYNOLOGY_DSM_USERNAME))
        __M_writer(u'"\n                                                           class="form-control input-sm input200" autocapitalize="off"\n                                                           autocomplete="no"/>\n                                                </div>\n                                            </div>\n                                            <div class="row">\n                                                <div class="col-md-12">\n                                                    <label for="syno_dsm_user">')
        __M_writer(unicode(_('(blank for none)')))
        __M_writer(u'</label>\n                                                </div>\n                                            </div>\n                                        </div>\n                                    </div>\n\n                                    <div class="field-pair row">\n                                        <div class="col-lg-3 col-md-4 col-sm-5 col-xs-12">\n                                            <label class="component-title" id="password_title">')
        __M_writer(unicode(_('Client password')))
        __M_writer(u'</label>\n                                        </div>\n                                        <div class="col-lg-9 col-md-8 col-sm-7 col-xs-12 component-desc">\n                                            <div class="row">\n                                                <div class="col-md-12">\n                                                    <input type="password" name="syno_dsm_pass" id="syno_dsm_pass"\n                                                           value="')
        __M_writer(unicode(sickbeard.SYNOLOGY_DSM_PASSWORD))
        __M_writer(u'"\n                                                           class="form-control input-sm input200" autocomplete="no"\n                                                           autocapitalize="off"/>\n                                                </div>\n                                            </div>\n                                            <div class="row">\n                                                <div class="col-md-12">\n                                                    <label for="syno_dsm_pass">')
        __M_writer(unicode(_('(blank for none)')))
        __M_writer(u'</label>\n                                                </div>\n                                            </div>\n                                        </div>\n                                    </div>\n\n                                    <div class="field-pair row">\n                                        <div class="col-lg-3 col-md-4 col-sm-5 col-xs-12">\n                                            <label class="component-title" id="directory_title">')
        __M_writer(unicode(_('Downloaded files location')))
        __M_writer(u'</label>\n                                        </div>\n                                        <div class="col-lg-9 col-md-8 col-sm-7 col-xs-12 component-desc">\n                                            <div class="row">\n                                                <div class="col-md-12">\n                                                    <input type="text" name="syno_dsm_path" id="syno_dsm_path"\n                                                           value="')
        __M_writer(unicode(sickbeard.SYNOLOGY_DSM_PATH))
        __M_writer(u'"\n                                                           class="form-control input-sm input350" autocapitalize="off"/>\n                                                </div>\n                                            </div>\n                                            <div class="row">\n                                                <div class="col-md-12">\n                                                    <label for="syno_dsm_path">')
        __M_writer(unicode(_('where Synology Download Station will save downloaded files (blank for client default)')))
        __M_writer(u'</label>\n                                                </div>\n                                            </div>\n                                            <div class="row">\n                                                <div class="col-md-12">\n                                                    <span id="path_synology"> <b>')
        __M_writer(unicode(_('note')))
        __M_writer(u':</b> ')
        __M_writer(unicode(_('the destination has to be a shared folder for Synology DS')))
        __M_writer(u'</span>\n                                                </div>\n                                            </div>\n                                        </div>\n                                    </div>\n                                </div>\n\n                                <div class="row">\n                                    <div class="col-md-12">\n                                        <div class="testNotification" id="testSABnzbd_result">')
        __M_writer(unicode(_('Click below to test')))
        __M_writer(u'</div>\n                                        <div class="testNotification" id="testDSM_result">')
        __M_writer(unicode(_('Click below to test')))
        __M_writer(u'</div>\n                                    </div>\n                                </div>\n                                <div class="row">\n                                    <div class="col-md-12">\n                                        <input class="btn test-button" type="button" value="Test SABnzbd" id="testSABnzbd"/>\n                                        <input type="button" value="Test DSM" id="testDSM" class="btn test-button"/>\n                                        <input type="submit" class="btn config_submitter" value="')
        __M_writer(unicode(_('Save Changes')))
        __M_writer(u'"/>\n                                    </div>\n                                </div>\n\n\n                            </div><!-- /content_use_nzbs //-->\n\n                        </fieldset>\n                    </div>\n                </div>\n            </div>\n\n            <!-- Torrent search -->\n            <div id="torrent-search" class="component-group">\n                <div class="row">\n                    <div class="col-lg-3 col-md-4 col-sm-4 col-xs-12">\n                        <div class="component-group-desc">\n                            <h3>')
        __M_writer(unicode(_('Torrent Search')))
        __M_writer(u'</h3>\n                            <p>')
        __M_writer(unicode(_('How to handle Torrent search results.')))
        __M_writer(u'</p>\n                            <div id="torrent_method_icon" class="add-client-icon-')
        __M_writer(unicode(sickbeard.TORRENT_METHOD))
        __M_writer(u'"></div>\n                        </div>\n                    </div>\n                    <div class="col-lg-9 col-md-8 col-sm-8 col-xs-12">\n\n                        <fieldset class="component-group-list">\n\n                            <div class="field-pair row">\n                                <div class="col-lg-3 col-md-4 col-sm-5 col-xs-12">\n                                    <label class="component-title">')
        __M_writer(unicode(_('Search torrents')))
        __M_writer(u'</label>\n                                </div>\n                                <div class="col-lg-9 col-md-8 col-sm-7 col-xs-12 component-desc">\n                                    <input type="checkbox" name="use_torrents" class="enabler"\n                                           id="use_torrents" ')
        __M_writer(unicode(('', 'checked="checked"')[bool(sickbeard.USE_TORRENTS)]))
        __M_writer(u'/>\n                                    <label for="use_torrents">')
        __M_writer(unicode(_('enable torrent search providers')))
        __M_writer(u'</label>\n                                </div>\n                            </div>\n\n                            <div id="content_use_torrents">\n\n                                <div class="field-pair row">\n                                    <div class="col-lg-3 col-md-4 col-sm-5 col-xs-12">\n                                        <label class="component-title">')
        __M_writer(unicode(_('Send .torrent files to')))
        __M_writer(u'</label>\n                                    </div>\n                                    <div class="col-lg-9 col-md-8 col-sm-7 col-xs-12 component-desc">\n                                        <select name="torrent_method" id="torrent_method" class="form-control input-sm input200" title="torrent_method">\n                                            ')
        torrent_method_text = {'blackhole': "Black hole", 'utorrent': "uTorrent", 'transmission': "Transmission", 'deluge': "Deluge (via WebUI)", 'deluged': "Deluge (via Daemon)", 'download_station': "Synology DS", 'rtorrent': "rTorrent", 'qbittorrent': "qbittorrent", 'mlnet': "MLDonkey", 'putio' : "Putio"} 
        
        __M_writer(u'\n')
        for curAction in ('blackhole', 'utorrent', 'transmission', 'deluge', 'deluged', 'download_station', 'rtorrent', 'qbittorrent', 'mlnet', 'putio'):
            __M_writer(u'                                                <option value="')
            __M_writer(unicode(curAction))
            __M_writer(u'" ')
            __M_writer(unicode(('', 'selected="selected"')[sickbeard.TORRENT_METHOD == curAction]))
            __M_writer(u'>')
            __M_writer(unicode(torrent_method_text[curAction]))
            __M_writer(u'</option>\n')
        __M_writer(u'                                        </select>\n                                    </div>\n                                </div>\n\n                                <div id="options_torrent_blackhole">\n\n                                    <div class="field-pair row">\n                                        <div class="col-lg-3 col-md-4 col-sm-5 col-xs-12">\n                                            <label class="component-title">')
        __M_writer(unicode(_('Black hole folder location')))
        __M_writer(u'</label>\n                                        </div>\n                                        <div class="col-lg-9 col-md-8 col-sm-7 col-xs-12 component-desc">\n                                            <div class="row">\n                                                <div class="col-md-12">\n                                                    <input type="text" name="torrent_dir" id="torrent_dir"\n                                                           value="')
        __M_writer(unicode(sickbeard.TORRENT_DIR))
        __M_writer(u'"\n                                                           class="form-control input-sm input350" autocapitalize="off"/>\n                                                </div>\n                                            </div>\n                                            <div class="row">\n                                                <div class="col-md-12">\n                                                    <label for="torrent_dir">')
        __M_writer(unicode(_('<b>.torrent</b> files are stored at this location for external software to find and use')))
        __M_writer(u'</label>\n                                                </div>\n                                            </div>\n                                        </div>\n                                    </div>\n\n                                    <div class="row">\n                                        <div class="col-md-12">\n                                            <input type="submit" class="btn config_submitter" value="')
        __M_writer(unicode(_('Save Changes')))
        __M_writer(u'"/>\n                                        </div>\n                                    </div>\n\n                                </div>\n\n                                <div id="options_torrent_clients">\n\n                                    <div class="field-pair row" id="torrent_host_option">\n                                        <div class="col-lg-3 col-md-4 col-sm-5 col-xs-12">\n                                            <label class="component-title" id="host_title">')
        __M_writer(unicode(_('Torrent host:port')))
        __M_writer(u'</label>\n                                        </div>\n                                        <div class="col-lg-9 col-md-8 col-sm-7 col-xs-12 component-desc">\n                                            <div class="row">\n                                                <div class="col-md-12">\n                                                    <input type="text" name="torrent_host" id="torrent_host"\n                                                           value="')
        __M_writer(unicode(sickbeard.TORRENT_HOST))
        __M_writer(u'"\n                                                           class="form-control input-sm input350" autocapitalize="off"/>\n                                                </div>\n                                            </div>\n                                            <div class="row">\n                                                <div class="col-md-12">\n                                                    <label for="torrent_host" id="host_desc_torrent">')
        __M_writer(unicode(_('URL to your torrent client (e.g. http://localhost:8000/)')))
        __M_writer(u'</label>\n                                                </div>\n                                            </div>\n                                        </div>\n                                    </div>\n\n                                    <div class="field-pair row" id="torrent_rpcurl_option">\n                                        <div class="col-lg-3 col-md-4 col-sm-5 col-xs-12">\n                                            <label class="component-title" id="rpcurl_title">')
        __M_writer(unicode(_('Torrent RPC URL')))
        __M_writer(u'</label>\n                                        </div>\n                                        <div class="col-lg-9 col-md-8 col-sm-7 col-xs-12 component-desc">\n                                            <div class="row">\n                                                <div class="col-md-12">\n                                                    <input type="text" name="torrent_rpcurl" id="torrent_rpcurl"\n                                                           value="')
        __M_writer(unicode(sickbeard.TORRENT_RPCURL))
        __M_writer(u'"\n                                                           class="form-control input-sm input350" autocapitalize="off"/>\n                                                </div>\n                                            </div>\n                                            <div class="row">\n                                                <div class="col-md-12">\n                                                    <label for="torrent_rpcurl" id="rpcurl_desc_">')
        __M_writer(unicode(_('the path without leading and trailing slashes (e.g. transmission)')))
        __M_writer(u'</label>\n                                                </div>\n                                            </div>\n                                        </div>\n                                    </div>\n\n                                    <div class="field-pair row" id="torrent_auth_type_option">\n                                        <div class="col-lg-3 col-md-4 col-sm-5 col-xs-12">\n                                            <label class="component-title">')
        __M_writer(unicode(_('Http Authentication')))
        __M_writer(u'</label>\n                                        </div>\n                                        <div class="col-lg-9 col-md-8 col-sm-7 col-xs-12 component-desc">\n                                            <select name="torrent_auth_type" id="torrent_auth_type" class="form-control input-sm input150" title="torrent_auth_type">\n                                                ')
        http_authtype = {'none': "None", 'basic': "Basic", 'digest': "Digest"} 
        
        __M_writer(u'\n')
        for authvalue, authname in six.iteritems(http_authtype):
            __M_writer(u'                                                    <option id="torrent_auth_type_value"\n                                                            value="')
            __M_writer(unicode(authvalue))
            __M_writer(u'" ')
            __M_writer(unicode(('', 'selected="selected"')[sickbeard.TORRENT_AUTH_TYPE == authvalue]))
            __M_writer(u'>')
            __M_writer(unicode(authname))
            __M_writer(u'</option>\n')
        __M_writer(u'                                            </select>\n                                        </div>\n                                    </div>\n\n                                    <div class="field-pair row" id="torrent_verify_cert_option">\n                                        <div class="col-lg-3 col-md-4 col-sm-5 col-xs-12">\n                                            <label class="component-title">')
        __M_writer(unicode(_('Verify certificate')))
        __M_writer(u'</label>\n                                        </div>\n                                        <div class="col-lg-9 col-md-8 col-sm-7 col-xs-12 component-desc">\n                                            <input type="checkbox" name="torrent_verify_cert" class="enabler"\n                                                   id="torrent_verify_cert" ')
        __M_writer(unicode(('', 'checked="checked"')[bool(sickbeard.TORRENT_VERIFY_CERT)]))
        __M_writer(u'/>\n                                            <label for="torrent_verify_cert" id="torrent_verify_deluge">')
        __M_writer(unicode(_('disable if you get "Deluge: Authentication Error" in your log')))
        __M_writer(u'</label>\n                                            <label for="torrent_verify_cert" id="torrent_verify_rtorrent">')
        __M_writer(unicode(_('verify SSL certificates for HTTPS requests')))
        __M_writer(u'</label>\n                                        </div>\n                                    </div>\n\n                                    <div class="field-pair row" id="torrent_username_option">\n                                        <div class="col-lg-3 col-md-4 col-sm-5 col-xs-12">\n                                            <label class="component-title" id="username_title">')
        __M_writer(unicode(_('Client username')))
        __M_writer(u'</label>\n                                        </div>\n                                        <div class="col-lg-9 col-md-8 col-sm-7 col-xs-12 component-desc">\n                                            <div class="row">\n                                                <div class="col-md-12">\n                                                    <input type="text" name="torrent_username" id="torrent_username"\n                                                           value="')
        __M_writer(unicode(sickbeard.TORRENT_USERNAME))
        __M_writer(u'"\n                                                           class="form-control input-sm input200" autocapitalize="off"\n                                                           autocomplete="no"/>\n                                                </div>\n                                            </div>\n                                            <div class="row">\n                                                <div class="col-md-12">\n                                                    <label for="torrent_username">')
        __M_writer(unicode(_('(blank for none)')))
        __M_writer(u'</label>\n                                                </div>\n                                            </div>\n                                        </div>\n                                    </div>\n\n                                    <div class="field-pair row" id="torrent_password_option">\n                                        <div class="col-lg-3 col-md-4 col-sm-5 col-xs-12">\n                                            <label class="component-title" id="password_title">')
        __M_writer(unicode(_('Client password')))
        __M_writer(u'</label>\n                                        </div>\n                                        <div class="col-lg-9 col-md-8 col-sm-7 col-xs-12 component-desc">\n                                            <div class="row">\n                                                <div class="col-md-12">\n                                                    <input type="password" name="torrent_password" id="torrent_password"\n                                                           value="')
        __M_writer(unicode(sickbeard.TORRENT_PASSWORD))
        __M_writer(u'"\n                                                           class="form-control input-sm input200" autocomplete="no"\n                                                           autocapitalize="off"/>\n                                                </div>\n                                            </div>\n                                            <div class="row">\n                                                <div class="col-md-12">\n                                                    <label for="torrent_password">')
        __M_writer(unicode(_('(blank for none)')))
        __M_writer(u'</label>\n                                                </div>\n                                            </div>\n                                        </div>\n                                    </div>\n\n                                    <div class="field-pair row" id="torrent_label_option">\n                                        <div class="col-lg-3 col-md-4 col-sm-5 col-xs-12">\n                                            <label class="component-title">')
        __M_writer(unicode(_('Add label to torrent')))
        __M_writer(u'</label>\n                                        </div>\n                                        <div class="col-lg-9 col-md-8 col-sm-7 col-xs-12 component-desc">\n                                            <div class="row">\n                                                <div class="col-md-12">\n                                                    <input type="text" name="torrent_label" id="torrent_label"\n                                                           value="')
        __M_writer(unicode(sickbeard.TORRENT_LABEL))
        __M_writer(u'"\n                                                           class="form-control input-sm input200" autocapitalize="off"/>\n                                                </div>\n                                            </div>\n                                            <div class="row">\n                                                <div class="col-md-12">\n                                                    <span id="label_warning_deluge" style="display:none">\n                                                        <label for="torrent_label">')
        __M_writer(unicode(_('(blank spaces are not allowed)')))
        __M_writer(u'</label>\n                                                        <label><b>')
        __M_writer(unicode(_('note')))
        __M_writer(u':</b> ')
        __M_writer(unicode(_('label plugin must be enabled in Deluge clients')))
        __M_writer(u'</label>\n                                                    </span>\n                                                    <span id="label_warning_qbittorrent" style="display:none">\n                                                        <label for="torrent_label">')
        __M_writer(unicode(_('(blank spaces are not allowed)')))
        __M_writer(u'</label>\n                                                        <label><b>')
        __M_writer(unicode(_('note')))
        __M_writer(u':</b> ')
        __M_writer(unicode(_('for QBitTorrent 3.3.1 and up')))
        __M_writer(u'</>\n                                                    </span>\n                                                </div>\n                                            </div>\n                                        </div>\n                                    </div>\n\n                                    <div class="field-pair row" id="torrent_label_anime_option">\n                                        <div class="col-lg-3 col-md-4 col-sm-5 col-xs-12">\n                                            <label class="component-title">')
        __M_writer(unicode(_('Add label to torrent for anime')))
        __M_writer(u'</label>\n                                        </div>\n                                        <div class="col-lg-9 col-md-8 col-sm-7 col-xs-12 component-desc">\n                                            <div class="row">\n                                                <div class="col-md-12">\n                                                    <input type="text" name="torrent_label_anime" id="torrent_label_anime"\n                                                           value="')
        __M_writer(unicode(sickbeard.TORRENT_LABEL_ANIME))
        __M_writer(u'"\n                                                           class="form-control input-sm input200" autocapitalize="off"/>\n                                                </div>\n                                            </div>\n                                            <div class="row">\n                                                <div class="col-md-12">\n                                                    <span id="label_anime_warning_deluge" style="display:none">\n                                                        <label for="torrent_label_anime">')
        __M_writer(unicode(_('(blank spaces are not allowed)')))
        __M_writer(u'</label>\n                                                        <label><b>')
        __M_writer(unicode(_('note')))
        __M_writer(u':</b> ')
        __M_writer(unicode(_('label plugin must be enabled in Deluge clients')))
        __M_writer(u'</label>\n                                                    </span>\n                                                    <span id="label_anime_warning_qbittorrent" style="display:none">\n                                                        <label for="torrent_label_anime">')
        __M_writer(unicode(_('(blank spaces are not allowed)')))
        __M_writer(u'</label>\n                                                        <label><b>')
        __M_writer(unicode(_('note')))
        __M_writer(u':</b> ')
        __M_writer(unicode(_('for QBitTorrent 3.3.1 and up ')))
        __M_writer(u'</label>\n                                                    </span>\n                                                </div>\n                                            </div>\n                                        </div>\n                                    </div>\n\n                                    <div class="field-pair row" id="torrent_path_option">\n                                        <div class="col-lg-3 col-md-4 col-sm-5 col-xs-12">\n                                            <label class="component-title" id="directory_title">')
        __M_writer(unicode(_('Downloaded files location')))
        __M_writer(u'</label>\n                                        </div>\n                                        <div class="col-lg-9 col-md-8 col-sm-7 col-xs-12 component-desc">\n                                            <div class="row">\n                                                <div class="col-md-12">\n                                                    <input type="text" name="torrent_path" id="torrent_path"\n                                                           value="')
        __M_writer(unicode(sickbeard.TORRENT_PATH))
        __M_writer(u'"\n                                                           class="form-control input-sm input350" autocapitalize="off"/>\n                                                </div>\n                                            </div>\n                                            <div class="row">\n                                                <div class="col-md-12">\n                                                    <label for="torrent_path">')
        __M_writer(unicode(_('where <span id="torrent_client">the torrent client</span> will save downloaded files (blank for client default)')))
        __M_writer(u'</label>\n                                                </div>\n                                            </div>\n                                            <div class="row">\n                                                <div class="col-md-12">\n                                                    <label id="path_synology"><b>')
        __M_writer(unicode(_('note')))
        __M_writer(u':</b> ')
        __M_writer(unicode(_('the destination has to be a shared folder for Synology DS</span>')))
        __M_writer(u'</label>\n                                                </div>\n                                            </div>\n                                        </div>\n                                    </div>\n\n                                    <div class="field-pair row" id="torrent_seed_time_option">\n                                        <div class="col-lg-3 col-md-4 col-sm-5 col-xs-12">\n                                            <label class="component-title" id="torrent_seed_time_label">')
        __M_writer(unicode(_('Minimum seeding time')))
        __M_writer(u'</label>\n                                        </div>\n                                        <div class="col-lg-9 col-md-8 col-sm-7 col-xs-12 component-desc">\n                                            <div class="row">\n                                                <div class="col-md-12">\n                                                    <input type="number" step="1" name="torrent_seed_time" id="torrent_seed_time"\n                                                           value="')
        __M_writer(unicode(sickbeard.TORRENT_SEED_TIME))
        __M_writer(u'" class="form-control input-sm input100"/>\n                                                </div>\n                                            </div>\n                                            <div class="row">\n                                                <div class="col-md-12">\n                                                    <label for="torrent_seed_time">')
        __M_writer(unicode(_('time in hours')))
        __M_writer(u'</label>\n                                                </div>\n                                            </div>\n                                            <div class="row">\n                                                <div class="col-md-12">\n                                                    <label for="torrent_seed_time">')
        __M_writer(unicode(_('(default:\'0\' passes blank to client and \'-1\' passes nothing)')))
        __M_writer(u'</label>\n                                                </div>\n                                            </div>\n                                        </div>\n                                    </div>\n\n                                    <div class="field-pair row" id="torrent_paused_option">\n                                        <div class="col-lg-3 col-md-4 col-sm-5 col-xs-12">\n                                            <label class="component-title">')
        __M_writer(unicode(_('Start torrent paused')))
        __M_writer(u'</label>\n                                        </div>\n                                        <div class="col-lg-9 col-md-8 col-sm-7 col-xs-12 component-desc">\n                                            <div class="row">\n                                                <div class="col-md-12">\n                                                    <input type="checkbox" name="torrent_paused" class="enabler"\n                                                           id="torrent_paused" ')
        __M_writer(unicode(('', 'checked="checked"')[bool(sickbeard.TORRENT_PAUSED)]))
        __M_writer(u'/>\n                                                    <label for="torrent_paused">')
        __M_writer(unicode(_('add .torrent to client but do <b style="font-weight:900">not</b> start downloading')))
        __M_writer(u'</label>\n                                                </div>\n                                            </div>\n                                        </div>\n                                    </div>\n\n                                    <div class="field-pair row" id="torrent_high_bandwidth_option">\n                                        <div class="col-lg-3 col-md-4 col-sm-5 col-xs-12">\n                                            <label class="component-title">')
        __M_writer(unicode(_('Allow high bandwidth')))
        __M_writer(u'</label>\n                                        </div>\n                                        <div class="col-lg-9 col-md-8 col-sm-7 col-xs-12 component-desc">\n                                            <div class="row">\n                                                <div class="col-md-12">\n                                                    <input type="checkbox" name="torrent_high_bandwidth" class="enabler"\n                                                           id="torrent_high_bandwidth" ')
        __M_writer(unicode(('', 'checked="checked"')[bool(sickbeard.TORRENT_HIGH_BANDWIDTH)]))
        __M_writer(u'/>\n                                                    <label for="torrent_high_bandwidth">')
        __M_writer(unicode(_('use high bandwidth allocation if priority is high')))
        __M_writer(u'</label>\n                                                </div>\n                                            </div>\n                                        </div>\n                                    </div>\n\n                                    <div class="row">\n                                        <div class="col-md-12">\n                                            <div class="testNotification" id="test_torrent_result">')
        __M_writer(unicode(_('Click below to test')))
        __M_writer(u'</div>\n                                        </div>\n                                    </div>\n\n                                    <div class="row">\n                                        <div class="col-md-12">\n                                            <input class="btn test-button" type="button" value="')
        __M_writer(unicode(_('Test Connection')))
        __M_writer(u'" id="test_torrent"/>\n                                            <input type="submit" class="btn config_submitter" value="')
        __M_writer(unicode(_('Save Changes')))
        __M_writer(u'"/>\n                                        </div>\n                                    </div>\n\n                                </div>\n                            </div>\n\n                        </fieldset>\n                    </div>\n                </div>\n            </div>\n\n        </div>\n    </form>\n')
        return ''
    finally:
        context.caller_stack._pop_frame()


"""
__M_BEGIN_METADATA
{"source_encoding": "ascii", "line_map": {"16": 2, "32": 0, "44": 1, "45": 5, "50": 11, "55": 1172, "61": 7, "68": 7, "69": 8, "70": 8, "71": 9, "72": 9, "73": 10, "74": 10, "80": 13, "89": 13, "90": 24, "91": 24, "92": 25, "93": 25, "94": 25, "95": 25, "96": 34, "97": 34, "98": 38, "99": 38, "100": 39, "101": 39, "102": 45, "103": 45, "104": 49, "105": 49, "106": 50, "107": 50, "108": 58, "109": 58, "110": 62, "112": 62, "113": 63, "114": 64, "115": 64, "116": 64, "117": 64, "118": 64, "119": 64, "120": 64, "121": 66, "122": 73, "123": 73, "124": 79, "125": 79, "126": 85, "127": 85, "128": 93, "129": 93, "130": 99, "131": 99, "132": 105, "133": 105, "134": 105, "135": 105, "136": 113, "137": 113, "138": 119, "139": 119, "140": 125, "141": 125, "142": 125, "143": 125, "144": 133, "145": 133, "146": 139, "147": 139, "148": 145, "149": 145, "150": 153, "151": 153, "152": 158, "153": 158, "154": 164, "155": 164, "156": 172, "157": 172, "158": 177, "159": 177, "160": 183, "161": 183, "162": 191, "163": 191, "164": 196, "165": 196, "166": 202, "167": 202, "168": 210, "169": 210, "170": 215, "171": 215, "172": 221, "175": 223, "176": 231, "177": 231, "178": 235, "179": 235, "180": 236, "181": 236, "182": 242, "183": 242, "184": 248, "185": 248, "186": 249, "187": 249, "188": 254, "189": 254, "190": 264, "191": 264, "192": 270, "193": 270, "194": 271, "195": 271, "196": 276, "197": 276, "198": 276, "199": 276, "200": 294, "201": 294, "202": 295, "203": 295, "204": 296, "205": 296, "206": 305, "207": 305, "208": 309, "209": 309, "210": 310, "211": 310, "212": 318, "213": 318, "214": 322, "216": 322, "217": 323, "218": 324, "219": 324, "220": 324, "221": 324, "222": 324, "223": 324, "224": 324, "225": 326, "226": 334, "227": 334, "228": 339, "229": 339, "230": 345, "231": 345, "232": 353, "233": 353, "234": 359, "235": 359, "236": 365, "237": 365, "238": 373, "239": 373, "240": 379, "241": 379, "242": 385, "243": 385, "244": 393, "245": 393, "246": 399, "247": 399, "248": 405, "249": 405, "250": 413, "251": 413, "252": 419, "253": 419, "254": 425, "255": 425, "256": 433, "257": 433, "258": 439, "259": 439, "260": 445, "261": 445, "262": 453, "263": 453, "264": 459, "265": 459, "266": 465, "267": 465, "268": 474, "269": 474, "270": 481, "271": 481, "272": 487, "273": 487, "274": 493, "275": 494, "276": 496, "277": 496, "278": 500, "279": 500, "280": 501, "281": 501, "282": 505, "283": 510, "284": 510, "285": 515, "286": 515, "287": 521, "288": 521, "289": 532, "290": 532, "291": 538, "292": 538, "293": 543, "294": 543, "295": 543, "296": 543, "297": 551, "298": 551, "299": 557, "300": 557, "301": 563, "302": 563, "303": 568, "304": 568, "305": 576, "306": 576, "307": 581, "308": 581, "309": 588, "310": 588, "311": 596, "312": 596, "313": 602, "314": 602, "315": 609, "316": 609, "317": 617, "318": 617, "319": 623, "320": 623, "321": 629, "322": 629, "323": 637, "324": 637, "325": 643, "326": 643, "327": 649, "328": 649, "329": 657, "330": 657, "331": 663, "332": 663, "333": 669, "334": 669, "335": 677, "336": 677, "337": 684, "338": 684, "339": 690, "340": 690, "341": 698, "342": 698, "343": 704, "344": 704, "345": 704, "346": 704, "347": 705, "348": 705, "349": 705, "350": 705, "351": 706, "352": 706, "353": 706, "354": 706, "355": 707, "356": 707, "357": 707, "358": 707, "359": 708, "360": 708, "361": 708, "362": 708, "363": 709, "364": 709, "365": 709, "366": 709, "367": 715, "368": 715, "369": 726, "370": 726, "371": 732, "372": 732, "373": 738, "374": 738, "375": 746, "376": 746, "377": 752, "378": 752, "379": 759, "380": 759, "381": 767, "382": 767, "383": 773, "384": 773, "385": 780, "386": 780, "387": 788, "388": 788, "389": 794, "390": 794, "391": 800, "392": 800, "393": 805, "394": 805, "395": 805, "396": 805, "397": 814, "398": 814, "399": 815, "400": 815, "401": 822, "402": 822, "403": 839, "404": 839, "405": 840, "406": 840, "407": 841, "408": 841, "409": 850, "410": 850, "411": 854, "412": 854, "413": 855, "414": 855, "415": 863, "416": 863, "417": 867, "419": 867, "420": 868, "421": 869, "422": 869, "423": 869, "424": 869, "425": 869, "426": 869, "427": 869, "428": 871, "429": 879, "430": 879, "431": 885, "432": 885, "433": 891, "434": 891, "435": 899, "436": 899, "437": 909, "438": 909, "439": 915, "440": 915, "441": 921, "442": 921, "443": 929, "444": 929, "445": 935, "446": 935, "447": 941, "448": 941, "449": 949, "450": 949, "451": 953, "453": 953, "454": 954, "455": 955, "456": 956, "457": 956, "458": 956, "459": 956, "460": 956, "461": 956, "462": 958, "463": 964, "464": 964, "465": 968, "466": 968, "467": 969, "468": 969, "469": 970, "470": 970, "471": 976, "472": 976, "473": 982, "474": 982, "475": 989, "476": 989, "477": 997, "478": 997, "479": 1003, "480": 1003, "481": 1010, "482": 1010, "483": 1018, "484": 1018, "485": 1024, "486": 1024, "487": 1031, "488": 1031, "489": 1032, "490": 1032, "491": 1032, "492": 1032, "493": 1035, "494": 1035, "495": 1036, "496": 1036, "497": 1036, "498": 1036, "499": 1045, "500": 1045, "501": 1051, "502": 1051, "503": 1058, "504": 1058, "505": 1059, "506": 1059, "507": 1059, "508": 1059, "509": 1062, "510": 1062, "511": 1063, "512": 1063, "513": 1063, "514": 1063, "515": 1072, "516": 1072, "517": 1078, "518": 1078, "519": 1084, "520": 1084, "521": 1089, "522": 1089, "523": 1089, "524": 1089, "525": 1097, "526": 1097, "527": 1103, "528": 1103, "529": 1108, "530": 1108, "531": 1113, "532": 1113, "533": 1121, "534": 1121, "535": 1127, "536": 1127, "537": 1128, "538": 1128, "539": 1136, "540": 1136, "541": 1142, "542": 1142, "543": 1143, "544": 1143, "545": 1151, "546": 1151, "547": 1157, "548": 1157, "549": 1158, "550": 1158, "556": 550}, "uri": "config_search.mako", "filename": "/app/sickrage/gui/slick/views/config_search.mako"}
__M_END_METADATA
"""
