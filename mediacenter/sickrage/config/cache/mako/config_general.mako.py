# -*- coding:ascii -*-
from mako import runtime, filters, cache
UNDEFINED = runtime.UNDEFINED
STOP_RENDERING = runtime.STOP_RENDERING
__M_dict_builtin = dict
__M_locals_builtin = locals
_magic_number = 10
_modified_time = 1517450078.388909
_enable_loop = True
_template_filename = u'/app/sickrage/gui/slick/views/config_general.mako'
_template_uri = u'config_general.mako'
_source_encoding = 'ascii'
_exports = [u'tabs', u'pages']



import os
import datetime

import sickbeard
from sickbeard.common import SKIPPED, ARCHIVED, IGNORED, statusStrings, cpu_presets
from sickbeard.sbdatetime import sbdatetime, date_presets, time_presets
from sickbeard.helpers import anon_url, LOCALE_NAMES

def lang_name(code):
    return LOCALE_NAMES.get(code, {}).get("name", u"Unknown")


def _mako_get_namespace(context, name):
    try:
        return context.namespaces[(__name__, name)]
    except KeyError:
        _mako_generate_namespaces(context)
        return context.namespaces[(__name__, name)]
def _mako_generate_namespaces(context):
    pass
def _mako_inherit(template, context):
    _mako_generate_namespaces(context)
    return runtime._inherit_from(context, u'/layouts/config.mako', _template_uri)
def render_body(context,**pageargs):
    __M_caller = context.caller_stack._push_frame()
    try:
        __M_locals = __M_dict_builtin(pageargs=pageargs)
        def tabs():
            return render_tabs(context._locals(__M_locals))
        static_url = context.get('static_url', UNDEFINED)
        int = context.get('int', UNDEFINED)
        bool = context.get('bool', UNDEFINED)
        def pages():
            return render_pages(context._locals(__M_locals))
        _ = context.get('_', UNDEFINED)
        __M_writer = context.writer()
        __M_writer(u'\n')
        __M_writer(u'\n\n')
        if 'parent' not in context._data or not hasattr(context._data['parent'], 'tabs'):
            context['self'].tabs(**pageargs)
        

        __M_writer(u'\n\n')
        if 'parent' not in context._data or not hasattr(context._data['parent'], 'pages'):
            context['self'].pages(**pageargs)
        

        __M_writer(u'\n')
        return ''
    finally:
        context.caller_stack._pop_frame()


def render_tabs(context,**pageargs):
    __M_caller = context.caller_stack._push_frame()
    try:
        def tabs():
            return render_tabs(context)
        _ = context.get('_', UNDEFINED)
        __M_writer = context.writer()
        __M_writer(u'\n    <li><a href="#misc">')
        __M_writer(unicode(_('Misc')))
        __M_writer(u'</a></li>\n    <li><a href="#interface">')
        __M_writer(unicode(_('Interface')))
        __M_writer(u'</a></li>\n    <li><a href="#advanced-settings">')
        __M_writer(unicode(_('Advanced Settings')))
        __M_writer(u'</a></li>\n')
        return ''
    finally:
        context.caller_stack._pop_frame()


def render_pages(context,**pageargs):
    __M_caller = context.caller_stack._push_frame()
    try:
        int = context.get('int', UNDEFINED)
        _ = context.get('_', UNDEFINED)
        bool = context.get('bool', UNDEFINED)
        def pages():
            return render_pages(context)
        static_url = context.get('static_url', UNDEFINED)
        __M_writer = context.writer()
        __M_writer(u'\n    <form id="configForm" action="saveGeneral" method="post">\n\n        <!-- /misc //-->\n        <div id="misc">\n            <!-- Misc -->\n            <div class="row">\n                <div class="col-lg-3 col-md-4 col-sm-4 col-xs-12">\n                    <div class="component-group-desc">\n                        <h3>')
        __M_writer(unicode(_('Misc')))
        __M_writer(u'</h3>\n                        <p>')
        __M_writer(unicode(_('Startup options. Indexer options. Log and show file locations.')))
        __M_writer(u'</p>\n                        <p><b>')
        __M_writer(unicode(_('Some options may require a manual restart to take effect.')))
        __M_writer(u'</b></p>\n                    </div>\n                </div>\n                <div class="col-lg-9 col-md-8 col-sm-8 col-xs-12">\n                    <fieldset class="component-group-list">\n\n                        <div class="field-pair row">\n                            <div class="col-lg-3 col-md-4 col-sm-5 col-xs-12">\n                                <label class="component-title">')
        __M_writer(unicode(_('Default Indexer Language')))
        __M_writer(u'</label>\n                            </div>\n                            <div class="col-lg-9 col-md-8 col-sm-7 col-xs-12 component-desc">\n                                <div class="row">\n                                    <div class="col-md-12">\n                                        <select name="indexerDefaultLang" id="indexerDefaultLang" class="form-control form-control-inline input-sm input350 bfh-languages" data-language=')
        __M_writer(unicode(sickbeard.INDEXER_DEFAULT_LANGUAGE))
        __M_writer(u' data-available="')
        __M_writer(unicode(','.join(sickbeard.indexerApi().config['valid_languages'])))
        __M_writer(u'"></select>\n                                    </div>\n                                </div>\n                                <div class="row">\n                                    <div class="col-md-12">\n                                        <label for="indexerDefaultLang">')
        __M_writer(unicode(_('for adding shows and metadata providers')))
        __M_writer(u'</label>\n                                    </div>\n                                </div>\n                            </div>\n                        </div>\n\n                        <div class="field-pair row">\n                            <div class="col-lg-3 col-md-4 col-sm-5 col-xs-12">\n                                <label class="component-title">')
        __M_writer(unicode(_('Launch browser')))
        __M_writer(u'</label>\n                            </div>\n                            <div class="col-lg-9 col-md-8 col-sm-7 col-xs-12 component-desc">\n                                <input type="checkbox" name="launch_browser" id="launch_browser" ')
        __M_writer(unicode(('', 'checked="checked"')[bool(sickbeard.LAUNCH_BROWSER)]))
        __M_writer(u'/>\n                                <label for="launch_browser">')
        __M_writer(unicode(_('open the SickRage home page on startup')))
        __M_writer(u'</label>\n                            </div>\n                        </div>\n\n                        <div class="field-pair row">\n                            <div class="col-lg-3 col-md-4 col-sm-5 col-xs-12">\n                                <label class="component-title">')
        __M_writer(unicode(_('Initial page')))
        __M_writer(u'</label>\n                            </div>\n                            <div class="col-lg-9 col-md-8 col-sm-7 col-xs-12 component-desc">\n                                <div class="row">\n                                    <div class="col-md-12">\n                                        <select id="default_page" name="default_page" class="form-control input-sm input150">\n                                            <option value="home" ')
        __M_writer(unicode(('', 'selected="selected"')[sickbeard.DEFAULT_PAGE == 'home']))
        __M_writer(u'>')
        __M_writer(unicode(_('Shows')))
        __M_writer(u'</option>\n                                            <option value="schedule" ')
        __M_writer(unicode(('', 'selected="selected"')[sickbeard.DEFAULT_PAGE == 'schedule']))
        __M_writer(u'>')
        __M_writer(unicode(_('Schedule')))
        __M_writer(u'</option>\n                                            <option value="history" ')
        __M_writer(unicode(('', 'selected="selected"')[sickbeard.DEFAULT_PAGE == 'history']))
        __M_writer(u'>')
        __M_writer(unicode(_('History')))
        __M_writer(u'</option>\n                                            <option value="news" ')
        __M_writer(unicode(('', 'selected="selected"')[sickbeard.DEFAULT_PAGE == 'news']))
        __M_writer(u'>')
        __M_writer(unicode(_('News')))
        __M_writer(u'</option>\n                                            <option value="IRC" ')
        __M_writer(unicode(('', 'selected="selected"')[sickbeard.DEFAULT_PAGE == 'IRC']))
        __M_writer(u'>')
        __M_writer(unicode(_('IRC')))
        __M_writer(u'</option>\n                                        </select>\n                                    </div>\n                                </div>\n                                <div class="row">\n                                    <div class="col-md-12">\n                                        <label for="default_page">')
        __M_writer(unicode(_('when launching SickRage interface')))
        __M_writer(u'</label>\n                                    </div>\n                                </div>\n                            </div>\n                        </div>\n\n')
        __M_writer(u'                        <div class="field-pair row">\n                            <div class="col-lg-3 col-md-4 col-sm-5 col-xs-12">\n                                <label class="component-title">')
        __M_writer(unicode(_('Choose hour to update shows')))
        __M_writer(u'</label>\n                            </div>\n                            <div class="col-lg-9 col-md-8 col-sm-7 col-xs-12 component-desc">\n                                <div class="row">\n                                    <div class="col-md-12">\n                                        <input type="number" min="0" max="23" step="1" name="showupdate_hour" id="showupdate_hour" value="')
        __M_writer(unicode(sickbeard.SHOWUPDATE_HOUR))
        __M_writer(u'" class="form-control input-sm input75" autocapitalize="off" />\n                                    </div>\n                                </div>\n                                <div class="row">\n                                    <div class="col-md-12">\n                                        <label for="showupdate_hour">')
        __M_writer(unicode(_('with information such as next air dates, show ended, etc. Use 15 for 3pm, 4 for 4am etc.')))
        __M_writer(u'</label>\n                                    </div>\n                                </div>\n                                <div class="row">\n                                    <div class="col-md-12">\n                                        <label><b>')
        __M_writer(unicode(_('note')))
        __M_writer(u':</b>&nbsp;')
        __M_writer(unicode(_('minutes are randomized each time SickRage is started')))
        __M_writer(u'</label>\n                                    </div>\n                                </div>\n                            </div>\n                        </div>\n\n                        <div class="field-pair row">\n                            <div class="col-lg-3 col-md-4 col-sm-5 col-xs-12">\n                                <label class="component-title">')
        __M_writer(unicode(_('Send to trash for actions')))
        __M_writer(u'</label>\n                            </div>\n                            <div class="col-lg-9 col-md-8 col-sm-7 col-xs-12 component-desc">\n                                <div class="row">\n                                    <div class="col-md-12">\n                                        <input type="checkbox" name="trash_remove_show" id="trash_remove_show" ')
        __M_writer(unicode(('', 'checked="checked"')[bool(sickbeard.TRASH_REMOVE_SHOW)]))
        __M_writer(u'/>\n                                        <label for="trash_remove_show">')
        __M_writer(unicode(_('when using show "Remove" and delete files')))
        __M_writer(u'</label>\n                                    </div>\n                                </div>\n                                <div class="row">\n                                    <div class="col-md-12">\n                                        <input type="checkbox" name="trash_rotate_logs" id="trash_rotate_logs" ')
        __M_writer(unicode(('', 'checked="checked"')[bool(sickbeard.TRASH_ROTATE_LOGS)]))
        __M_writer(u'/>\n                                        <label for="trash_rotate_logs">')
        __M_writer(unicode(_('on scheduled deletes of the oldest log files')))
        __M_writer(u'</label>\n                                    </div>\n                                </div>\n                                <div class="row">\n                                    <div class="col-md-12">\n                                        <span>')
        __M_writer(unicode(_('selected actions use trash (recycle bin) instead of the default permanent delete')))
        __M_writer(u'</span>\n                                    </div>\n                                </div>\n                            </div>\n                        </div>\n\n                        <div class="field-pair row">\n                            <div class="col-lg-3 col-md-4 col-sm-5 col-xs-12">\n                                <label class="component-title">')
        __M_writer(unicode(_('Log file folder location')))
        __M_writer(u'</label>\n                            </div>\n                            <div class="col-lg-9 col-md-8 col-sm-7 col-xs-12 component-desc">\n                                <input type="text" name="log_dir" id="log_dir" value="')
        __M_writer(unicode(sickbeard.ACTUAL_LOG_DIR))
        __M_writer(u'" class="form-control input-sm input250" autocapitalize="off"  title="log_dir"/>\n                            </div>\n                        </div>\n\n                        <div class="field-pair row">\n                            <div class="col-lg-3 col-md-4 col-sm-5 col-xs-12">\n                                <label class="component-title">')
        __M_writer(unicode(_('Number of Log files saved')))
        __M_writer(u'</label>\n                            </div>\n                            <div class="col-lg-9 col-md-8 col-sm-7 col-xs-12 component-desc">\n                                <div class="row">\n                                    <div class="col-md-12">\n                                        <input type="number" min="1" step="1" name="log_nr" id="log_nr" value="')
        __M_writer(unicode(sickbeard.LOG_NR))
        __M_writer(u'" class="form-control input-sm input75" autocapitalize="off" />\n                                    </div>\n                                </div>\n                                <div class="row">\n                                    <div class="col-md-12">\n                                        <label for="log_nr">')
        __M_writer(unicode(_('number of log files saved when rotating logs (default: 5) (REQUIRES RESTART)')))
        __M_writer(u'</label>\n                                    </div>\n                                </div>\n                            </div>\n                        </div>\n\n                        <div class="field-pair row">\n                            <div class="col-lg-3 col-md-4 col-sm-5 col-xs-12">\n                                <label class="component-title">')
        __M_writer(unicode(_('Size of Log files saved')))
        __M_writer(u'</label>\n                            </div>\n                            <div class="col-lg-9 col-md-8 col-sm-7 col-xs-12 component-desc">\n                                <div class="row">\n                                    <div class="col-md-12">\n                                        <input type="number" min="0.5" step="0.1" name="log_size" id="log_size" value="')
        __M_writer(unicode(sickbeard.LOG_SIZE))
        __M_writer(u'" class="form-control input-sm input75" autocapitalize="off" />\n                                    </div>\n                                </div>\n                                <div class="row">\n                                    <div class="col-md-12">\n                                        <label for="log_size">')
        __M_writer(unicode(_('maximum size in MB of the log file (default: 1MB) (REQUIRES RESTART)')))
        __M_writer(u'</label>\n                                    </div>\n                                </div>\n                            </div>\n                        </div>\n\n                        <div class="field-pair row">\n                            <div class="col-lg-3 col-md-4 col-sm-5 col-xs-12">\n                                <label class="component-title">')
        __M_writer(unicode(_('Use initial indexer set to')))
        __M_writer(u'</label>\n                            </div>\n                            <div class="col-lg-9 col-md-8 col-sm-7 col-xs-12 component-desc">\n                                <div class="row">\n                                    <div class="col-md-12">\n                                        <select id="indexer_default" name="indexer_default" class="form-control input-sm input150">\n                                            <option value="0" ')
        __M_writer(unicode(('', 'selected="selected"')[sickbeard.INDEXER_DEFAULT == 0]))
        __M_writer(u'>')
        __M_writer(unicode(_('All Indexers')))
        __M_writer(u'</option>\n')
        for indexer in sickbeard.indexerApi().indexers:
            __M_writer(u'                                                <option value="')
            __M_writer(unicode(indexer))
            __M_writer(u'" ')
            __M_writer(unicode(('', 'selected="selected"')[sickbeard.INDEXER_DEFAULT == indexer]))
            __M_writer(u'>')
            __M_writer(unicode(sickbeard.indexerApi().indexers[indexer]))
            __M_writer(u'</option>\n')
        __M_writer(u'                                        </select>\n                                    </div>\n                                </div>\n                                <div class="row">\n                                    <div class="col-md-12">\n                                        <label for="indexer_default">')
        __M_writer(unicode(_('as the default selection when adding new shows')))
        __M_writer(u'</label>\n                                    </div>\n                                </div>\n                            </div>\n                        </div>\n\n                        <div class="field-pair row">\n                            <div class="col-lg-3 col-md-4 col-sm-5 col-xs-12">\n                                <label class="component-title">')
        __M_writer(unicode(_('Timeout show indexer at')))
        __M_writer(u'</label>\n                            </div>\n                            <div class="col-lg-9 col-md-8 col-sm-7 col-xs-12 component-desc">\n                                <div class="row">\n                                    <div class="col-md-12">\n                                        <input type="number" min="10" step="1" name="indexer_timeout" id="indexer_timeout" value="')
        __M_writer(unicode(sickbeard.INDEXER_TIMEOUT))
        __M_writer(u'" class="form-control input-sm input75" autocapitalize="off" />\n                                    </div>\n                                </div>\n                                <div class="row">\n                                    <div class="col-md-12">\n                                        <label for="indexer_timeout">')
        __M_writer(unicode(_('seconds of inactivity when finding new shows (default:20)')))
        __M_writer(u'</label>\n                                    </div>\n                                </div>\n                            </div>\n                        </div>\n\n                        <div class="field-pair row">\n                            <div class="col-lg-3 col-md-4 col-sm-5 col-xs-12">\n                                <label class="component-title">')
        __M_writer(unicode(_('Show root directories')))
        __M_writer(u'</label>\n                            </div>\n                            <div class="col-lg-9 col-md-8 col-sm-7 col-xs-12 component-desc">\n                                <div class="row">\n                                    <div class="col-md-12">\n                                        <span>')
        __M_writer(unicode(_('where the files of shows are located')))
        __M_writer(u'</span>\n                                    </div>\n                                </div>\n                                <div class="row">\n                                    <div class="col-lg-6 col-md-8 col-sm-12 col-xs-12">\n                                        ')
        runtime._include_file(context, u'/inc_rootDirs.mako', _template_uri)
        __M_writer(u'\n                                    </div>\n                                </div>\n                            </div>\n                        </div>\n\n                        <div class="row">\n                            <div class="col-md-12">\n                                <input type="submit" class="btn config_submitter" value="')
        __M_writer(unicode(_('Save Changes')))
        __M_writer(u'" />\n                            </div>\n                        </div>\n                    </fieldset>\n                </div>\n            </div>\n\n            <!-- Divider -->\n            <div class="config-group-divider"></div>\n\n            <!-- Updates -->\n            <div class="row">\n                <div class="col-lg-3 col-md-4 col-sm-4 col-xs-12">\n                    <div class="component-group-desc">\n                        <h3>')
        __M_writer(unicode(_('Updates')))
        __M_writer(u'</h3>\n                        <p>')
        __M_writer(unicode(_('Options for software updates.')))
        __M_writer(u'</p>\n                    </div>\n                </div>\n                <div class="col-lg-9 col-md-8 col-sm-8 col-xs-12">\n                    <fieldset class="component-group-list">\n\n                        <div class="field-pair row">\n                            <div class="col-lg-3 col-md-4 col-sm-5 col-xs-12">\n                                <label class="component-title">')
        __M_writer(unicode(_('Check software updates')))
        __M_writer(u'</label>\n                            </div>\n                            <div class="col-lg-9 col-md-8 col-sm-7 col-xs-12 component-desc">\n                                <input type="checkbox" name="version_notify" id="version_notify" ')
        __M_writer(unicode(('', 'checked="checked"')[bool(sickbeard.VERSION_NOTIFY)]))
        __M_writer(u'/>\n                                <label for="version_notify">')
        __M_writer(unicode(_('''and display notifications when updates are available. Checks are run on startup and at the frequency set below*''')))
        __M_writer(u'</label>\n                            </div>\n                        </div>\n\n                        <div class="field-pair row">\n                            <div class="col-lg-3 col-md-4 col-sm-5 col-xs-12">\n                                <label class="component-title">')
        __M_writer(unicode(_('Automatically update')))
        __M_writer(u'</label>\n                            </div>\n                            <div class="col-lg-9 col-md-8 col-sm-7 col-xs-12 component-desc">\n                                <input type="checkbox" name="auto_update" id="auto_update" ')
        __M_writer(unicode(('', 'checked="checked"')[bool(sickbeard.AUTO_UPDATE)]))
        __M_writer(u'/>\n                                <label for="auto_update">')
        __M_writer(unicode(_('''fetch and install software updates. Updates are run on startup and in the background at the frequency set below*''')))
        __M_writer(u'</label>\n                            </div>\n                        </div>\n\n                        <div class="field-pair row">\n                            <div class="col-lg-3 col-md-4 col-sm-5 col-xs-12">\n                                <label class="component-title">')
        __M_writer(unicode(_('Check the server every*')))
        __M_writer(u'</label>\n                            </div>\n                            <div class="col-lg-9 col-md-8 col-sm-7 col-xs-12 component-desc">\n                                <div class="row">\n                                    <div class="col-md-12">\n                                        <input type="number" min="1" step="1" name="update_frequency" id="update_frequency" value="')
        __M_writer(unicode(sickbeard.UPDATE_FREQUENCY))
        __M_writer(u'" class="form-control input-sm input75" autocapitalize="off" />\n                                    </div>\n                                </div>\n                                <div class="row">\n                                    <div class="col-md-12">\n                                        <label for="update_frequency">')
        __M_writer(unicode(_('hours for software updates (default:1)')))
        __M_writer(u'</label>\n                                    </div>\n                                </div>\n                            </div>\n                        </div>\n\n                        <div class="field-pair row">\n                            <div class="col-lg-3 col-md-4 col-sm-5 col-xs-12">\n                                <label class="component-title">')
        __M_writer(unicode(_('Notify on software update')))
        __M_writer(u'</label>\n                            </div>\n                            <div class="col-lg-9 col-md-8 col-sm-7 col-xs-12 component-desc">\n                                <input type="checkbox" name="notify_on_update" id="notify_on_update" ')
        __M_writer(unicode(('', 'checked="checked"')[bool(sickbeard.NOTIFY_ON_UPDATE)]))
        __M_writer(u'/>\n                                <label for="notify_on_update">')
        __M_writer(unicode(_('send a message to all enabled notifiers when SickRage has been updated')))
        __M_writer(u'</label>\n                            </div>\n                        </div>\n\n                        <div class="row">\n                            <div class="col-md-12">\n                                <input type="submit" class="btn config_submitter" value="')
        __M_writer(unicode(_('Save Changes')))
        __M_writer(u'" />\n                            </div>\n                        </div>\n                    </fieldset>\n                </div>\n            </div>\n        </div>\n\n        <!-- /interface //-->\n        <div id="interface">\n            <!-- User Interface -->\n            <div class="row">\n                <div class="col-lg-3 col-md-4 col-sm-4 col-xs-12">\n                    <div class="component-group-desc">\n                        <h3>')
        __M_writer(unicode(_('User Interface')))
        __M_writer(u'</h3>\n                        <p>')
        __M_writer(unicode(_('Options for visual appearance.')))
        __M_writer(u'</p>\n                    </div>\n                </div>\n                <div class="col-lg-9 col-md-8 col-sm-8 col-xs-12">\n\n                    <fieldset class="component-group-list">\n\n                        <div class="field-pair row">\n                            <div class="col-lg-3 col-md-4 col-sm-5 col-xs-12">\n                                <label class="component-title">')
        __M_writer(unicode(_('Interface Language')))
        __M_writer(u'</label>\n                            </div>\n                            <div class="col-lg-9 col-md-8 col-sm-7 col-xs-12 component-desc">\n                                <div class="row">\n                                    <div class="col-md-12">\n                                        <select id="gui_language" name="gui_language" class="form-control input-sm input250">\n                                            <option value="" ')
        __M_writer(unicode(('', 'selected="selected"')[sickbeard.GUI_LANG == ""]))
        __M_writer(u'>')
        __M_writer(unicode(_('System Language')))
        __M_writer(u'</option>\n')
        for lang in [language for language in os.listdir(sickbeard.LOCALE_DIR) if '_' in language]:
            __M_writer(u'                                                <option value="')
            __M_writer(unicode(lang))
            __M_writer(u'" ')
            __M_writer(unicode(('', 'selected="selected"')[sickbeard.GUI_LANG == lang]))
            __M_writer(u'>')
            __M_writer(unicode(lang_name(lang)))
            __M_writer(u'</option>\n')
        __M_writer(u'                                        </select>\n                                    </div>\n                                </div>\n                                <div class="row">\n                                    <div class="col-md-12">\n                                        <label for="gui_language" class="red-text">')
        __M_writer(unicode(_('for appearance to take effect, save then refresh your browser')))
        __M_writer(u'</label>\n                                    </div>\n                                </div>\n                            </div>\n                        </div>\n\n                        <div class="field-pair row">\n                            <div class="col-lg-3 col-md-4 col-sm-5 col-xs-12">\n                                <label class="component-title">')
        __M_writer(unicode(_('Display theme')))
        __M_writer(u'</label>\n                            </div>\n                            <div class="col-lg-9 col-md-8 col-sm-7 col-xs-12 component-desc">\n                                <div class="row">\n                                    <div class="col-md-12">\n                                        <select id="theme_name" name="theme_name" class="form-control input-sm input250">\n                                            <option value="dark" ')
        __M_writer(unicode(('', 'selected="selected"')[sickbeard.THEME_NAME == 'dark']))
        __M_writer(u'>')
        __M_writer(unicode(_('Dark')))
        __M_writer(u'</option>\n                                            <option value="light" ')
        __M_writer(unicode(('', 'selected="selected"')[sickbeard.THEME_NAME == 'light']))
        __M_writer(u'>')
        __M_writer(unicode(_('Light')))
        __M_writer(u'</option>\n                                        </select>\n                                    </div>\n                                </div>\n                                <div class="row">\n                                    <div class="col-md-12">\n                                        <label for="theme_name" class="red-text">')
        __M_writer(unicode(_('for appearance to take effect, save then refresh your browser')))
        __M_writer(u'</label>\n                                    </div>\n                                </div>\n                            </div>\n                        </div>\n\n                        <div class="field-pair row">\n                            <div class="col-lg-3 col-md-4 col-sm-5 col-xs-12">\n                                <label class="component-title">')
        __M_writer(unicode(_('Use a background image')))
        __M_writer(u'</label>\n                            </div>\n                            <div class="col-lg-9 col-md-8 col-sm-7 col-xs-12 component-desc">\n                                <input type="checkbox" class="enabler" name="sickrage_background" id="sickrage_background"\n                                    ')
        __M_writer(unicode(('', 'checked="checked"')[bool(sickbeard.SICKRAGE_BACKGROUND)]))
        __M_writer(u' />\n                                <label for="sickrage_background">')
        __M_writer(unicode(_('use a custom image as background for SickRage')))
        __M_writer(u'</label>\n                            </div>\n                        </div>\n                        <div id="content_sickrage_background">\n                            <div class="field-pair row">\n                                <div class="col-lg-3 col-md-4 col-sm-5 col-xs-12">\n                                    <label class="component-title">')
        __M_writer(unicode(_('Background Path')))
        __M_writer(u'</label>\n                                </div>\n                                <div class="col-lg-9 col-md-8 col-sm-7 col-xs-12 component-desc">\n                                    <div class="row">\n                                        <div class="col-md-12">\n                                            <input type="text" name="sickrage_background_path" id="sickrage_background_path"\n                                                   value="')
        __M_writer(unicode(sickbeard.SICKRAGE_BACKGROUND_PATH))
        __M_writer(u'" class="form-control input-sm input350" autocapitalize="off" />\n                                        </div>\n                                    </div>\n                                    <div class="row">\n                                        <div class="col-md-12">\n                                            <label for="sickrage_background_path" class="component-desc">')
        __M_writer(unicode(_('Path to the background image')))
        __M_writer(u'</label>\n                                        </div>\n                                    </div>\n                                </div>\n                            </div>\n                        </div>\n\n                        <div class="field-pair row">\n                            <div class="col-lg-3 col-md-4 col-sm-5 col-xs-12">\n                                <label class="component-title">')
        __M_writer(unicode(_('Show fanart in the background')))
        __M_writer(u'</label>\n                            </div>\n                            <div class="col-lg-9 col-md-8 col-sm-7 col-xs-12 component-desc">\n                                <input type="checkbox" class="enabler" name="fanart_background" id="fanart_background" ')
        __M_writer(unicode(('', 'checked="checked"')[bool(sickbeard.FANART_BACKGROUND)]))
        __M_writer(u'>\n                                <label for="fanart_background">')
        __M_writer(unicode(_('on the show summary page')))
        __M_writer(u'</label>\n                            </div>\n                        </div>\n                        <div id="content_fanart_background">\n                            <div class="field-pair row">\n                                <div class="col-lg-3 col-md-4 col-sm-5 col-xs-12">\n                                    <label class="component-title">')
        __M_writer(unicode(_('Fanart transparency')))
        __M_writer(u'</label>\n                                </div>\n                                <div class="col-lg-9 col-md-8 col-sm-7 col-xs-12 component-desc">\n                                    <div class="row">\n                                        <div class="col-md-12">\n                                            <input type="number" step="0.1" min="0.1" max="1.0" name="fanart_background_opacity" id="fanart_background_opacity" value="')
        __M_writer(unicode(sickbeard.FANART_BACKGROUND_OPACITY))
        __M_writer(u'" class="form-control input-sm input75" />\n                                        </div>\n                                    </div>\n                                    <div class="row">\n                                        <div class="col-md-12">\n                                            <label for="fanart_background_opacity" class="component-desc">')
        __M_writer(unicode(_('transparency of the fanart in the background')))
        __M_writer(u'</label>\n                                        </div>\n                                    </div>\n                                </div>\n                            </div>\n                        </div>\n\n                        <div class="field-pair row">\n                            <div class="col-lg-3 col-md-4 col-sm-5 col-xs-12">\n                                <label class="component-title">')
        __M_writer(unicode(_('Use a custom stylesheet file')))
        __M_writer(u'</label>\n                            </div>\n                            <div class="col-lg-9 col-md-8 col-sm-7 col-xs-12 component-desc">\n                                <input type="checkbox" class="enabler" name="custom_css" id="custom_css"\n                                    ')
        __M_writer(unicode(('', 'checked="checked"')[bool(sickbeard.CUSTOM_CSS)]))
        __M_writer(u' />\n                                <label for="custom_css">')
        __M_writer(unicode(_('use a custom .css file to style SickRage (for advanced users)')))
        __M_writer(u'</label>\n                            </div>\n                        </div>\n                        <div id="content_custom_css">\n                            <div class="field-pair row">\n                                <div class="col-lg-3 col-md-4 col-sm-5 col-xs-12">\n                                    <label class="component-title">')
        __M_writer(unicode(_('Stylesheet File Path')))
        __M_writer(u'</label>\n                                </div>\n                                <div class="col-lg-9 col-md-8 col-sm-7 col-xs-12 component-desc">\n                                    <div class="row">\n                                        <div class="col-md-12">\n                                            <input type="text" name="custom_css_path" id="custom_css_path"\n                                                   value="')
        __M_writer(unicode(sickbeard.CUSTOM_CSS_PATH))
        __M_writer(u'" class="form-control input-sm input350" autocapitalize="off" />\n                                        </div>\n                                    </div>\n                                    <div class="row">\n                                        <div class="col-md-12">\n                                            <label for="custom_css_path" class="component-desc">')
        __M_writer(unicode(_('Path to the stylesheet (.css) file')))
        __M_writer(u'</label>\n                                        </div>\n                                    </div>\n                                </div>\n                            </div>\n                        </div>\n\n                        <div class="field-pair row">\n                            <div class="col-lg-3 col-md-4 col-sm-5 col-xs-12">\n                                <label class="component-title">')
        __M_writer(unicode(_('Show all seasons')))
        __M_writer(u'</label>\n                            </div>\n                            <div class="col-lg-9 col-md-8 col-sm-7 col-xs-12 component-desc">\n                                <input type="checkbox" name="display_all_seasons" id="display_all_seasons" ')
        __M_writer(unicode(('', 'checked="checked"')[bool(sickbeard.DISPLAY_ALL_SEASONS)]))
        __M_writer(u'>\n                                <label for="display_all_seasons">')
        __M_writer(unicode(_('on the show summary page')))
        __M_writer(u'</label>\n                            </div>\n                        </div>\n\n                        <div class="field-pair row">\n                            <div class="col-lg-3 col-md-4 col-sm-5 col-xs-12">\n                                <label class="component-title">')
        __M_writer(unicode(_('Sort with "The", "A", "An"')))
        __M_writer(u'</label>\n                            </div>\n                            <div class="col-lg-9 col-md-8 col-sm-7 col-xs-12 component-desc">\n                                <input type="checkbox" name="sort_article" id="sort_article" ')
        __M_writer(unicode(('', 'checked="checked"')[bool(sickbeard.SORT_ARTICLE)]))
        __M_writer(u'/>\n                                <label for="sort_article">')
        __M_writer(unicode(_('include articles ("The", "A", "An") when sorting show lists')))
        __M_writer(u'</label>\n                            </div>\n                        </div>\n\n                        <div class="field-pair row">\n                            <div class="col-lg-3 col-md-4 col-sm-5 col-xs-12">\n                                <label class="component-title">')
        __M_writer(unicode(_('Missed episodes range')))
        __M_writer(u'</label>\n                            </div>\n                            <div class="col-lg-9 col-md-8 col-sm-7 col-xs-12 component-desc">\n                                <div class="row">\n                                    <div class="col-md-12">\n                                        <input type="number" step="1" min="0" max="42810" name="coming_eps_missed_range" id="coming_eps_missed_range"\n                                               value="')
        __M_writer(unicode(sickbeard.COMING_EPS_MISSED_RANGE))
        __M_writer(u'" class="form-control input-sm input75" />\n                                    </div>\n                                </div>\n                                <div class="row">\n                                    <div class="col-md-12">\n                                        <label for="coming_eps_missed_range">')
        __M_writer(unicode(_('set the range in days of the missed episodes in the Schedule page')))
        __M_writer(u'</label>\n                                    </div>\n                                </div>\n                            </div>\n                        </div>\n\n                        <div class="field-pair row">\n                            <div class="col-lg-3 col-md-4 col-sm-5 col-xs-12">\n                                <label class="component-title">')
        __M_writer(unicode(_('Display fuzzy dates')))
        __M_writer(u'</label>\n                            </div>\n                            <div class="col-lg-9 col-md-8 col-sm-7 col-xs-12 component-desc">\n                                <input type="checkbox" name="fuzzy_dating" id="fuzzy_dating" class="viewIf datePresets" ')
        __M_writer(unicode(('', 'checked="checked"')[bool(sickbeard.FUZZY_DATING)]))
        __M_writer(u'/>\n                                <label for="fuzzy_dating">')
        __M_writer(unicode(_('move absolute dates into tooltips and display e.g. "Last Thu", "On Tue"')))
        __M_writer(u'</label>\n                            </div>\n                        </div>\n\n                        <div class="field-pair row show_if_fuzzy_dating ')
        __M_writer(unicode((' metadataDiv', '')[not bool(sickbeard.FUZZY_DATING)]))
        __M_writer(u'">\n                            <div class="col-lg-3 col-md-4 col-sm-5 col-xs-12">\n                                <label class="component-title">')
        __M_writer(unicode(_('Trim zero padding')))
        __M_writer(u'</label>\n                            </div>\n                            <div class="col-lg-9 col-md-8 col-sm-7 col-xs-12 component-desc">\n                                <input type="checkbox" name="trim_zero" id="trim_zero" ')
        __M_writer(unicode(('', 'checked="checked"')[bool(sickbeard.TRIM_ZERO)]))
        __M_writer(u'/>\n                                <label for="trim_zero">')
        __M_writer(unicode(_('remove the leading number "0" shown on hour of day, and date of month')))
        __M_writer(u'</label>\n                            </div>\n                        </div>\n\n                        <div class="field-pair row">\n                            <div class="col-lg-3 col-md-4 col-sm-5 col-xs-12">\n                                <label class="component-title">')
        __M_writer(unicode(_('Date style')))
        __M_writer(u'</label>\n                            </div>\n                            <div class="col-lg-9 col-md-8 col-sm-7 col-xs-12 component-desc">\n                                <select class="form-control input-sm input250 ')
        __M_writer(unicode((' metadataDiv', '')[bool(sickbeard.FUZZY_DATING)]))
        __M_writer(u'" id="date_presets')
        __M_writer(unicode(('_na', '')[bool(sickbeard.FUZZY_DATING)]))
        __M_writer(u'" name="date_preset')
        __M_writer(unicode(('_na', '')[bool(sickbeard.FUZZY_DATING)]))
        __M_writer(u'">\n')
        for cur_preset in date_presets:
            __M_writer(u'                                        <option value="')
            __M_writer(unicode(cur_preset))
            __M_writer(u'" ')
            __M_writer(unicode(('', 'selected="selected"')[sickbeard.DATE_PRESET == cur_preset or ("%x" == sickbeard.DATE_PRESET and cur_preset == '%a, %b %d, %Y')]))
            __M_writer(u'>')
            __M_writer(unicode(datetime.datetime(datetime.datetime.now().year, 12, 31, 14, 30, 47).strftime(cur_preset)))
            __M_writer(u'</option>\n')
        __M_writer(u'                                </select>\n                                <select class="form-control input-sm input250 ')
        __M_writer(unicode((' metadataDiv', '')[not bool(sickbeard.FUZZY_DATING)]))
        __M_writer(u'" id="date_presets')
        __M_writer(unicode((' metadataDiv', '')[not bool(sickbeard.FUZZY_DATING)]))
        __M_writer(u'" name="date_preset')
        __M_writer(unicode(('_na', '')[not bool(sickbeard.FUZZY_DATING)]))
        __M_writer(u'">\n                                    <option value="%x" ')
        __M_writer(unicode(('', 'selected="selected"')[sickbeard.DATE_PRESET == '%x']))
        __M_writer(u'>')
        __M_writer(unicode(_('Use System Default')))
        __M_writer(u'</option>\n')
        for cur_preset in date_presets:
            __M_writer(u'                                        <option value="')
            __M_writer(unicode(cur_preset))
            __M_writer(u'" ')
            __M_writer(unicode(('', 'selected="selected"')[sickbeard.DATE_PRESET == cur_preset]))
            __M_writer(u'>')
            __M_writer(unicode(datetime.datetime(datetime.datetime.now().year, 12, 31, 14, 30, 47).strftime(cur_preset)))
            __M_writer(u'</option>\n')
        __M_writer(u'                                </select>\n                            </div>\n                        </div>\n\n                        <div class="field-pair row">\n                            <div class="col-lg-3 col-md-4 col-sm-5 col-xs-12">\n                                <label class="component-title">')
        __M_writer(unicode(_('Time style')))
        __M_writer(u'</label>\n                            </div>\n                            <div class="col-lg-9 col-md-8 col-sm-7 col-xs-12 component-desc">\n                                <div class="row">\n                                    <div class="col-md-12">\n                                        <select id="time_presets" name="time_preset" class="form-control input-sm input250">\n')
        for cur_preset in time_presets:
            __M_writer(u'                                                <option value="')
            __M_writer(unicode(cur_preset))
            __M_writer(u'" ')
            __M_writer(unicode(('', 'selected="selected"')[sickbeard.TIME_PRESET_W_SECONDS == cur_preset]))
            __M_writer(u'>')
            __M_writer(unicode(sbdatetime.now().sbftime(show_seconds=True, t_preset=cur_preset)))
            __M_writer(u'</option>\n')
        __M_writer(u'                                        </select>\n                                    </div>\n                                </div>\n                                <div class="row">\n                                    <div class="col-md-12">\n                                        <label for="time_presets"><b>')
        __M_writer(unicode(_('note')))
        __M_writer(u':</b>&nbsp;')
        __M_writer(unicode(_('seconds are only shown on the History page')))
        __M_writer(u'</label>\n                                    </div>\n                                </div>\n                            </div>\n                        </div>\n\n                        <div class="field-pair row">\n                            <div class="col-lg-3 col-md-4 col-sm-5 col-xs-12">\n                                <label class="component-title">')
        __M_writer(unicode(_('Timezone')))
        __M_writer(u'</label>\n                            </div>\n                            <div class="col-lg-9 col-md-8 col-sm-7 col-xs-12 component-desc">\n                                <div class="row">\n                                    <div class="col-md-12">\n                                        <input style="margin-top: 2px !important;" type="radio" name="timezone_display" id="local" value="local" ')
        __M_writer(unicode(('', 'checked="checked"')[sickbeard.TIMEZONE_DISPLAY == "local"]))
        __M_writer(u' >\n                                        <label for="local" class="space-right">')
        __M_writer(unicode(_('Local')))
        __M_writer(u'</label>\n                                    </div>\n                                </div>\n                                <div class="row">\n                                    <div class="col-md-12">\n                                        <input style="margin-top: 2px !important;" type="radio" name="timezone_display" id="network" value="network" ')
        __M_writer(unicode(('', 'checked="checked"')[sickbeard.TIMEZONE_DISPLAY == "network"]))
        __M_writer(u' />\n                                        <label for="network">')
        __M_writer(unicode(_('Network')))
        __M_writer(u'</label>\n                                    </div>\n                                </div>\n                                <div class="row">\n                                    <div class="col-md-12">\n                                        <label>')
        __M_writer(unicode(_('display dates and times in either your timezone or the shows network timezone')))
        __M_writer(u'</label>\n                                    </div>\n                                </div>\n                                <div class="row">\n                                    <div class="col-md-12">\n                                        <label><b>')
        __M_writer(unicode(_('note')))
        __M_writer(u':</b>&nbsp;')
        __M_writer(unicode(_('use local timezone to start searching for episodes minutes after show ends (depends on your dailysearch frequency)')))
        __M_writer(u'</label>\n                                    </div>\n                                </div>\n                            </div>\n                        </div>\n\n                        <div class="field-pair row">\n                            <div class="col-lg-3 col-md-4 col-sm-5 col-xs-12">\n                                <label class="component-title">')
        __M_writer(unicode(_('Download url')))
        __M_writer(u'</label>\n                            </div>\n                            <div class="col-lg-9 col-md-8 col-sm-7 col-xs-12 component-desc">\n                                <div class="row">\n                                    <div class="col-md-12">\n                                        <input class="form-control input350" type="text" name="download_url" id="download_url" value="')
        __M_writer(unicode(sickbeard.DOWNLOAD_URL))
        __M_writer(u'" size="35" autocapitalize="off" />\n                                    </div>\n                                </div>\n                                <div class="row">\n                                    <div class="col-md-12">\n                                        <label for="download_url" class="component-desc">')
        __M_writer(unicode(_('URL where the shows can be downloaded.')))
        __M_writer(u'</label>\n                                    </div>\n                                </div>\n                            </div>\n                        </div>\n\n                        <div class="row">\n                            <div class="col-md-12">\n                                <input type="submit" class="btn config_submitter" value="')
        __M_writer(unicode(_('Save Changes')))
        __M_writer(u'" />\n                            </div>\n                        </div>\n\n                    </fieldset>\n                </div>\n            </div>\n\n            <!-- Divider -->\n            <div class="config-group-divider"></div>\n\n            <!-- Web Interface -->\n            <div class="row">\n                <div class="col-lg-3 col-md-4 col-sm-4 col-xs-12">\n                    <div class="component-group-desc">\n                        <h3>')
        __M_writer(unicode(_('Web Interface')))
        __M_writer(u'</h3>\n                        <p>')
        __M_writer(unicode(_('it is recommended that you enable a username and password to secure SickRage from being tampered with remotely.')))
        __M_writer(u'</p>\n                        <p><b>')
        __M_writer(unicode(_('these options require a manual restart to take effect.')))
        __M_writer(u'</b></p>\n                    </div>\n                </div>\n                <div class="col-lg-9 col-md-8 col-sm-8 col-xs-12">\n                    <fieldset class="component-group-list">\n\n                        <div class="field-pair row">\n                            <div class="col-lg-3 col-md-4 col-sm-5 col-xs-12">\n                                <label class="component-title">')
        __M_writer(unicode(_('API key')))
        __M_writer(u'</label>\n                            </div>\n                            <div class="col-lg-9 col-md-8 col-sm-7 col-xs-12 component-desc">\n                                <div class="row">\n                                    <div class="col-md-12">\n                                        <input type="text" name="api_key" id="api_key" value="')
        __M_writer(unicode(sickbeard.API_KEY))
        __M_writer(u'" class="form-control input-sm input300" readonly="readonly" autocapitalize="off" />\n                                        <input class="btn btn-inline" type="button" id="generate_new_apikey" value="Generate">\n                                    </div>\n                                </div>\n                                <div class="row">\n                                    <div class="col-md-12">\n                                        <label for="api_key">')
        __M_writer(unicode(_('used to give 3rd party programs limited access to SickRage')))
        __M_writer(u'</label>\n                                    </div>\n                                </div>\n                                <div class="row">\n                                    <div class="col-md-12">\n                                        <label>')
        __M_writer(unicode(_('you can try all the features of the API')))
        __M_writer(u' <a href="')
        __M_writer(unicode(static_url("apibuilder/", include_version=False)))
        __M_writer(u'">')
        __M_writer(unicode(_('here')))
        __M_writer(u'</a></label>\n                                    </div>\n                                </div>\n                            </div>\n                        </div>\n\n                        <div class="field-pair row">\n                            <div class="col-lg-3 col-md-4 col-sm-5 col-xs-12">\n                                <label class="component-title">')
        __M_writer(unicode(_('HTTP logs')))
        __M_writer(u'</label>\n                            </div>\n                            <div class="col-lg-9 col-md-8 col-sm-7 col-xs-12 component-desc">\n                                <input type="checkbox" name="web_log" id="web_log" ')
        __M_writer(unicode(('', 'checked="checked"')[bool(sickbeard.WEB_LOG)]))
        __M_writer(u'/>\n                                <label>')
        __M_writer(unicode(_('enable logs from the internal Tornado web server')))
        __M_writer(u'</label>\n                            </div>\n                        </div>\n\n                        <div class="field-pair row">\n                            <div class="col-lg-3 col-md-4 col-sm-5 col-xs-12">\n                                <label class="component-title">')
        __M_writer(unicode(_('HTTP username')))
        __M_writer(u'</label>\n                            </div>\n                            <div class="col-lg-9 col-md-8 col-sm-7 col-xs-12 component-desc">\n                                <div class="row">\n                                    <div class="col-md-12">\n                                        <input type="text" name="web_username" id="web_username" value="')
        __M_writer(unicode(sickbeard.WEB_USERNAME))
        __M_writer(u'" class="form-control input-sm input300" autocapitalize="off" autocomplete="no" />\n                                    </div>\n                                </div>\n                                <div class="row">\n                                    <div class="col-md-12">\n                                        <label>')
        __M_writer(unicode(_('set blank for no login')))
        __M_writer(u'</label>\n                                    </div>\n                                </div>\n                            </div>\n                        </div>\n\n                        <div class="field-pair row">\n                            <div class="col-lg-3 col-md-4 col-sm-5 col-xs-12">\n                                <label class="component-title">')
        __M_writer(unicode(_('HTTP password')))
        __M_writer(u'</label>\n                            </div>\n                            <div class="col-lg-9 col-md-8 col-sm-7 col-xs-12 component-desc">\n                                <div class="row">\n                                    <div class="col-md-12">\n                                        <input type="password" name="web_password" id="web_password" value="')
        __M_writer(unicode(sickbeard.WEB_PASSWORD))
        __M_writer(u'" class="form-control input-sm input300" autocomplete="no" autocapitalize="off"/>\n                                    </div>\n                                </div>\n                                <div class="row">\n                                    <div class="col-md-12">\n                                        <label for="web_password">')
        __M_writer(unicode(_('blank = no authentication')))
        __M_writer(u'</label>\n                                    </div>\n                                </div>\n                            </div>\n                        </div>\n\n                        <div class="field-pair row">\n                            <div class="col-lg-3 col-md-4 col-sm-5 col-xs-12">\n                                <label class="component-title">')
        __M_writer(unicode(_('HTTP port')))
        __M_writer(u'</label>\n                            </div>\n                            <div class="col-lg-9 col-md-8 col-sm-7 col-xs-12 component-desc">\n                                <div class="row">\n                                    <div class="col-md-12">\n                                        <input type="number" min="1" step="1" name="web_port" id="web_port" value="')
        __M_writer(unicode(sickbeard.WEB_PORT))
        __M_writer(u'" class="form-control input-sm input100" autocapitalize="off" />\n                                    </div>\n                                </div>\n                                <div class="row">\n                                    <div class="col-md-12">\n                                        <label for="web_port">')
        __M_writer(unicode(_('web port to browse and access SickRage (default:8081)')))
        __M_writer(u'</label>\n                                    </div>\n                                </div>\n                            </div>\n                        </div>\n\n                        <div class="field-pair row">\n                            <div class="col-lg-3 col-md-4 col-sm-5 col-xs-12">\n                                <label class="component-title">')
        __M_writer(unicode(_('Notify on login')))
        __M_writer(u'</label>\n                            </div>\n                            <div class="col-lg-9 col-md-8 col-sm-7 col-xs-12 component-desc">\n                                <input type="checkbox" name="notify_on_login" class="enabler" id="notify_on_login" ')
        __M_writer(unicode(('', 'checked="checked"')[bool(sickbeard.NOTIFY_ON_LOGIN)]))
        __M_writer(u'/>\n                                <label for="notify_on_login">')
        __M_writer(unicode(_('enable to be notified when a new login happens in webserver')))
        __M_writer(u'</label>\n                            </div>\n                        </div>\n\n                        <div class="field-pair row">\n                            <div class="col-lg-3 col-md-4 col-sm-5 col-xs-12">\n                                <label class="component-title">')
        __M_writer(unicode(_('Listen on IPv6')))
        __M_writer(u'</label>\n                            </div>\n                            <div class="col-lg-9 col-md-8 col-sm-7 col-xs-12 component-desc">\n                                <input type="checkbox" name="web_ipv6" id="web_ipv6" ')
        __M_writer(unicode(('', 'checked="checked"')[bool(sickbeard.WEB_IPV6)]))
        __M_writer(u'/>\n                                <label for="web_ipv6">')
        __M_writer(unicode(_('attempt binding to any available IPv6 address')))
        __M_writer(u'</label>\n                            </div>\n                        </div>\n\n                        <div class="field-pair row">\n                            <div class="col-lg-3 col-md-4 col-sm-5 col-xs-12">\n                                <label class="component-title">')
        __M_writer(unicode(_('Enable HTTPS')))
        __M_writer(u'</label>\n                            </div>\n                            <div class="col-lg-9 col-md-8 col-sm-7 col-xs-12 component-desc">\n                                <input type="checkbox" name="enable_https" class="enabler" id="enable_https" ')
        __M_writer(unicode(('', 'checked="checked"')[bool(sickbeard.ENABLE_HTTPS)]))
        __M_writer(u'/>\n                                <label for="enable_https">')
        __M_writer(unicode(_('enable access to the web interface using a HTTPS address')))
        __M_writer(u'</label>\n                            </div>\n                        </div>\n\n                        <div id="content_enable_https">\n\n                            <div class="field-pair row">\n                                <div class="col-lg-3 col-md-4 col-sm-5 col-xs-12">\n                                    <label class="component-title">')
        __M_writer(unicode(_('HTTPS certificate')))
        __M_writer(u'</label>\n                                </div>\n                                <div class="col-lg-9 col-md-8 col-sm-7 col-xs-12 component-desc">\n                                    <input type="text" name="https_cert" id="https_cert" value="')
        __M_writer(unicode(sickbeard.HTTPS_CERT))
        __M_writer(u'" class="form-control input-sm input300" autocapitalize="off" />\n                                    <label for="https_cert">')
        __M_writer(unicode(_('file name or path to HTTPS certificate')))
        __M_writer(u'</label>\n                                </div>\n                            </div>\n\n                            <div class="field-pair row">\n                                <div class="col-lg-3 col-md-4 col-sm-5 col-xs-12">\n                                    <label class="component-title">')
        __M_writer(unicode(_('HTTPS key')))
        __M_writer(u'</label>\n                                </div>\n                                <div class="col-lg-9 col-md-8 col-sm-7 col-xs-12 component-desc">\n                                    <input type="text" name="https_key" id="https_key" value="')
        __M_writer(unicode(sickbeard.HTTPS_KEY))
        __M_writer(u'" class="form-control input-sm input300" autocapitalize="off" />\n                                    <label for="https_key">')
        __M_writer(unicode(_('file name or path to HTTPS key')))
        __M_writer(u'</label>\n                                </div>\n                            </div>\n\n                        </div>\n\n                        <div class="field-pair row">\n                            <div class="col-lg-3 col-md-4 col-sm-5 col-xs-12">\n                                <label class="component-title">')
        __M_writer(unicode(_('Reverse proxy headers')))
        __M_writer(u'</label>\n                            </div>\n                            <div class="col-lg-9 col-md-8 col-sm-7 col-xs-12 component-desc">\n                                <div class="row">\n                                    <div class="col-md-12">\n                                        <input type="checkbox" name="handle_reverse_proxy" id="handle_reverse_proxy" ')
        __M_writer(unicode(('', 'checked="checked"')[bool(sickbeard.HANDLE_REVERSE_PROXY)]))
        __M_writer(u'/>\n                                        <label for="handle_reverse_proxy">')
        __M_writer(unicode(_('accept the following reverse proxy headers (advanced)...')))
        __M_writer(u'</label>\n                                    </div>\n                                </div>\n                                <div class="row">\n                                    <div class="col-md-12">\n                                        <label>')
        __M_writer(unicode(_('(X-Forwarded-For, X-Forwarded-Host, and X-Forwarded-Proto)')))
        __M_writer(u'</label>\n                                    </div>\n                                </div>\n                            </div>\n                        </div>\n\n                        <div class="row">\n                            <div class="col-md-12">\n                                <input type="submit" class="btn config_submitter" value="')
        __M_writer(unicode(_('Save Changes')))
        __M_writer(u'" />\n                            </div>\n                        </div>\n\n                    </fieldset>\n                </div>\n            </div>\n        </div>\n\n        <!-- /advanced settings //-->\n        <div id="advanced-settings">\n\n            <!-- Advanced Settings -->\n            <div class="row">\n                <div class="col-lg-3 col-md-4 col-sm-4 col-xs-12">\n                    <div class="component-group-desc">\n                        <h3>')
        __M_writer(unicode(_('Advanced Settings')))
        __M_writer(u'</h3>\n                    </div>\n                </div>\n                <div class="col-lg-9 col-md-8 col-sm-8 col-xs-12">\n                    <fieldset class="component-group-list">\n\n                        <div class="field-pair row">\n                            <div class="col-lg-3 col-md-4 col-sm-5 col-xs-12">\n                                <label class="component-title">')
        __M_writer(unicode(_('CPU throttling')))
        __M_writer(u'</label>\n                            </div>\n                            <div class="col-lg-9 col-md-8 col-sm-7 col-xs-12 component-desc">\n                                <div class="row">\n                                    <div class="col-md-12">\n                                        <select id="cpu_presets" name="cpu_preset" class="form-control input-sm input250">\n')
        for cur_preset in cpu_presets:
            __M_writer(u'                                                <option value="')
            __M_writer(unicode(cur_preset))
            __M_writer(u'" ')
            __M_writer(unicode(('', 'selected="selected"')[sickbeard.CPU_PRESET == cur_preset]))
            __M_writer(u'>')
            __M_writer(unicode(cur_preset.capitalize()))
            __M_writer(u'</option>\n')
        __M_writer(u'                                        </select>\n                                    </div>\n                                </div>\n                                <div class="row">\n                                    <div class="col-md-12">\n                                        <label for="cpu_presets">')
        __M_writer(unicode(_('Normal (default). High is lower and Low is higher CPU use')))
        __M_writer(u'</label>\n                                    </div>\n                                </div>\n                            </div>\n                        </div>\n\n                        <div class="field-pair row">\n                            <div class="col-lg-3 col-md-4 col-sm-5 col-xs-12">\n                                <label class="component-title">')
        __M_writer(unicode(_('Anonymous redirect')))
        __M_writer(u'</label>\n                            </div>\n                            <div class="col-lg-9 col-md-8 col-sm-7 col-xs-12 component-desc">\n                                <div class="row">\n                                    <div class="col-md-12">\n                                        <input type="text" name="anon_redirect" value="')
        __M_writer(unicode(sickbeard.ANON_REDIRECT))
        __M_writer(u'" class="form-control input-sm input300" autocapitalize="off" />\n                                    </div>\n                                </div>\n                                <div class="row">\n                                    <div class="col-md-12">\n                                        <label for="anon_redirect">')
        __M_writer(unicode(_('backlink protection via anonymizer service, must end in "?"')))
        __M_writer(u'</label>\n                                    </div>\n                                </div>\n                            </div>\n                        </div>\n\n                        <div class="field-pair row">\n                            <div class="col-lg-3 col-md-4 col-sm-5 col-xs-12">\n                                <label class="component-title">')
        __M_writer(unicode(_('Enable debug')))
        __M_writer(u'</label>\n                            </div>\n                            <div class="col-lg-9 col-md-8 col-sm-7 col-xs-12 component-desc">\n                                <input type="checkbox" name="debug" id="debug" ')
        __M_writer(unicode(('', 'checked="checked"')[bool(sickbeard.DEBUG)]))
        __M_writer(u'/>\n                                <label for="debug">')
        __M_writer(unicode(_('enable debug logs')))
        __M_writer(u'</label>\n                            </div>\n                        </div>\n\n                        <div class="field-pair row">\n                            <div class="col-lg-3 col-md-4 col-sm-5 col-xs-12">\n                                <label class="component-title">')
        __M_writer(unicode(_('Verify SSL Certs')))
        __M_writer(u'</label>\n                            </div>\n                            <div class="col-lg-9 col-md-8 col-sm-7 col-xs-12 component-desc">\n                                <input type="checkbox" name="ssl_verify" id="ssl_verify" ')
        __M_writer(unicode(('', 'checked="checked"')[bool(sickbeard.SSL_VERIFY)]))
        __M_writer(u'/>\n                                <label for="ssl_verify">')
        __M_writer(unicode(_('verify SSL Certificates (Disable this for broken SSL installs (Like QNAP))')))
        __M_writer(u'</label>\n                            </div>\n                        </div>\n\n                        <div class="field-pair row">\n                            <div class="col-lg-3 col-md-4 col-sm-5 col-xs-12">\n                                <label class="component-title">')
        __M_writer(unicode(_('No Restart')))
        __M_writer(u'</label>\n                            </div>\n                            <div class="col-lg-9 col-md-8 col-sm-7 col-xs-12 component-desc">\n                                <div class="row">\n                                    <div class="col-md-12">\n                                        <input type="checkbox" name="no_restart" id="no_restart" ')
        __M_writer(unicode(('', 'checked="checked"')[bool(sickbeard.NO_RESTART)]))
        __M_writer(u'/>\n                                        <label for="no_restart">')
        __M_writer(unicode(_('only shutdown when restarting SR')))
        __M_writer(u'</label>\n                                    </div>\n                                </div>\n                                <div class="row">\n                                    <div class="col-md-12">\n                                        <label>')
        __M_writer(unicode(_('only select this when you have external software restarting SR automatically when it stops (like FireDaemon)')))
        __M_writer(u'</label>\n                                    </div>\n                                </div>\n                            </div>\n                        </div>\n\n                        <div class="field-pair row">\n                            <div class="col-lg-3 col-md-4 col-sm-5 col-xs-12">\n                                <label class="component-title">')
        __M_writer(unicode(_('Encrypt passwords')))
        __M_writer(u'</label>\n                            </div>\n                            <div class="col-lg-9 col-md-8 col-sm-7 col-xs-12 component-desc">\n                                <div class="row">\n                                    <div class="col-md-12">\n                                        <input type="checkbox" name="encryption_version" id="encryption_version" ')
        __M_writer(unicode(('', 'checked="checked"')[bool(sickbeard.ENCRYPTION_VERSION)]))
        __M_writer(u'/>\n                                        <label for="encryption_version">')
        __M_writer(unicode(_('in the <code>config.ini</code> file')))
        __M_writer(u'</label>\n                                    </div>\n                                </div>\n                                <div class="row">\n                                    <div class="col-md-12">\n                                        <b>')
        __M_writer(unicode(_('warning')))
        __M_writer(u':</b>&nbsp;')
        __M_writer(unicode(_('passwords must only contain')))
        __M_writer(u'\n                                        <a target="_blank" href="')
        __M_writer(unicode(anon_url('http://en.wikipedia.org/wiki/ASCII#ASCII_printable_characters')))
        __M_writer(u'">')
        __M_writer(unicode(_('ASCII characters')))
        __M_writer(u'</a>\n                                    </div>\n                                </div>\n                            </div>\n                        </div>\n\n                        <div class="field-pair row">\n                            <div class="col-lg-3 col-md-4 col-sm-5 col-xs-12">\n                                <label class="component-title">')
        __M_writer(unicode(_('Unprotected calendar')))
        __M_writer(u'</label>\n                            </div>\n                            <div class="col-lg-9 col-md-8 col-sm-7 col-xs-12 component-desc">\n                                <div class="row">\n                                    <div class="col-md-12">\n                                        <input type="checkbox" name="calendar_unprotected" id="calendar_unprotected" ')
        __M_writer(unicode(('', 'checked="checked"')[bool(sickbeard.CALENDAR_UNPROTECTED)]))
        __M_writer(u'/>\n                                        <label for="calendar_unprotected">')
        __M_writer(unicode(_('allow subscribing to the calendar without user and password')))
        __M_writer(u'</label>\n                                    </div>\n                                </div>\n                                <div class="row">\n                                    <div class="col-md-12">\n                                        <label>')
        __M_writer(unicode(_('some services like Google Calendar only work this way')))
        __M_writer(u'</label>\n                                    </div>\n                                </div>\n                            </div>\n                        </div>\n\n                        <div class="field-pair row">\n                            <div class="col-lg-3 col-md-4 col-sm-5 col-xs-12">\n                                <label class="component-title">')
        __M_writer(unicode(_('Google Calendar Icons')))
        __M_writer(u'</label>\n                            </div>\n                            <div class="col-lg-9 col-md-8 col-sm-7 col-xs-12 component-desc">\n                                <input type="checkbox" name="calendar_icons" id="calendar_icons" ')
        __M_writer(unicode(('', 'checked="checked"')[bool(sickbeard.CALENDAR_ICONS)]))
        __M_writer(u'/>\n                                <label for="calendar_icons">')
        __M_writer(unicode(_('show an icon next to exported calendar events in Google Calendar')))
        __M_writer(u'</label>\n                            </div>\n                        </div>\n\n                        <div class="field-pair row">\n                            <div class="col-lg-3 col-md-4 col-sm-5 col-xs-12">\n                                <label class="component-title">')
        __M_writer(unicode(_('Proxy host')))
        __M_writer(u'</label>\n                            </div>\n                            <div class="col-lg-9 col-md-8 col-sm-7 col-xs-12 component-desc">\n                                <div class="row">\n                                    <div class="col-md-12">\n                                        <input type="text" name="proxy_setting" value="')
        __M_writer(unicode(sickbeard.PROXY_SETTING))
        __M_writer(u'" class="form-control input-sm input300" autocapitalize="off" />\n                                    </div>\n                                </div>\n                                <div class="row">\n                                    <div class="col-md-12">\n                                        <label for="proxy_setting">')
        __M_writer(unicode(_('blank to disable or proxy to use when connecting to providers')))
        __M_writer(u'</label>\n                                    </div>\n                                </div>\n                                <div class="row">\n                                    <div class="col-md-12">\n                                        <input type="checkbox" name="proxy_indexers" id="proxy_indexers" ')
        __M_writer(unicode(('', 'checked="checked"')[bool(sickbeard.PROXY_INDEXERS)]))
        __M_writer(u'/>\n                                        <label for="proxy_indexers">')
        __M_writer(unicode(_('also use global proxy setting for indexers (tvdb, xem, anidb, etc.)')))
        __M_writer(u'</label>\n                                    </div>\n\n                                </div>\n                            </div>\n                        </div>\n\n                        <div class="field-pair row">\n                            <div class="col-lg-3 col-md-4 col-sm-5 col-xs-12">\n                                <label class="component-title">')
        __M_writer(unicode(_('Skip Remove Detection')))
        __M_writer(u'</label>\n                            </div>\n                            <div class="col-lg-9 col-md-8 col-sm-7 col-xs-12 component-desc">\n                                <div class="row">\n                                    <div class="col-md-12">\n                                        <input type="checkbox" name="skip_removed_files" id="skip_removed_files" ')
        __M_writer(unicode(('', 'checked="checked"')[bool(sickbeard.SKIP_REMOVED_FILES)]))
        __M_writer(u'/>\n                                        <label for="skip_removed_files">')
        __M_writer(unicode(_('skip detection of removed files')))
        __M_writer(u'</label>\n                                    </div>\n                                </div>\n                                <div class="row">\n                                    <div class="col-md-12">\n                                        <label>')
        __M_writer(unicode(_('if disabled the episode will be set to the default deleted status')))
        __M_writer(u'</label>\n                                    </div>\n                                </div>\n                            </div>\n                        </div>\n\n                        <div class="field-pair row">\n                            <div class="col-lg-3 col-md-4 col-sm-5 col-xs-12">\n                                <label class="component-title">')
        __M_writer(unicode(_('Ignore Broken Symbolic Links')))
        __M_writer(u'</label>\n                            </div>\n                            <div class="col-lg-9 col-md-8 col-sm-7 col-xs-12 component-desc">\n                                <div class="row">\n                                    <div class="col-md-12">\n                                        <input type="checkbox" name="ignore_broken_symlinks" id="ignore_broken_symlinks" ')
        __M_writer(unicode(('', 'checked="checked"')[bool(sickbeard.IGNORE_BROKEN_SYMLINKS)]))
        __M_writer(u'/>\n                                        <label for="ignore_broken_symlinks">')
        __M_writer(unicode(_('If checked, broken symbolic links warnings generated when calculating show size will be logged as debug')))
        __M_writer(u'</label>\n                                    </div>\n                                </div>\n                            </div>\n                        </div>\n\n                        <div class="field-pair row">\n                            <div class="col-lg-3 col-md-4 col-sm-5 col-xs-12">\n                                <label class="component-title">')
        __M_writer(unicode(_('Default deleted episode status')))
        __M_writer(u'</label>\n                            </div>\n                            <div class="col-lg-9 col-md-8 col-sm-7 col-xs-12 component-desc">\n                                <div class="row">\n                                    <div class="col-md-12">\n')
        if not sickbeard.SKIP_REMOVED_FILES:
            __M_writer(u'                                            <select name="ep_default_deleted_status" id="ep_default_deleted_status" class="form-control input-sm input250" title="Default delete status">\n')
            for defStatus in [SKIPPED, IGNORED, ARCHIVED]:
                __M_writer(u'                                                    <option value="')
                __M_writer(unicode(defStatus))
                __M_writer(u'" ')
                __M_writer(unicode(('', 'selected="selected"')[int(sickbeard.EP_DEFAULT_DELETED_STATUS) == defStatus]))
                __M_writer(u'>')
                __M_writer(unicode(statusStrings[defStatus]))
                __M_writer(u'</option>\n')
            __M_writer(u'                                            </select>\n')
        else:
            __M_writer(u'                                            <select name="ep_default_deleted_status" id="ep_default_deleted_status" class="form-control input-sm input250" disabled="disabled" title="Default delete status">\n')
            for defStatus in [SKIPPED, IGNORED]:
                __M_writer(u'                                                    <option value="')
                __M_writer(unicode(defStatus))
                __M_writer(u'" ')
                __M_writer(unicode(('', 'selected="selected"')[sickbeard.EP_DEFAULT_DELETED_STATUS == defStatus]))
                __M_writer(u'>')
                __M_writer(unicode(statusStrings[defStatus]))
                __M_writer(u'</option>\n')
            __M_writer(u'                                            </select>\n                                            <input type="hidden" name="ep_default_deleted_status" value="')
            __M_writer(unicode(sickbeard.EP_DEFAULT_DELETED_STATUS))
            __M_writer(u'" />\n')
        __M_writer(u'                                    </div>\n                                </div>\n                                <div class="row">\n                                    <div class="col-md-12">\n                                        <label for="ep_default_deleted_status">')
        __M_writer(unicode(_('define the status to be set for media file that has been deleted.')))
        __M_writer(u'</label>\n                                    </div>\n                                </div>\n                                <div class="row">\n                                    <div class="col-md-12">\n                                        <label><b>')
        __M_writer(unicode(_('note')))
        __M_writer(u':</b>&nbsp;')
        __M_writer(unicode(_('Archived option will keep previous downloaded quality')))
        __M_writer(u'</label>\n                                    </div>\n                                </div>\n                                <div class="row">\n                                    <div class="col-md-12">\n                                        <label>')
        __M_writer(unicode(_('example: Downloaded (1080p WEB-DL) ==> Archived (1080p WEB-DL)')))
        __M_writer(u'</label>\n                                    </div>\n                                </div>\n                            </div>\n                        </div>\n\n                        <div class="row">\n                            <div class="col-md-12">\n                                <input type="submit" class="btn config_submitter" value="')
        __M_writer(unicode(_('Save Changes')))
        __M_writer(u'" />\n                            </div>\n                        </div>\n                    </fieldset>\n                </div>\n            </div>\n\n            <!-- Divider -->\n            <div class="config-group-divider"></div>\n\n            <!-- Github -->\n            <div class="row">\n                <div class="col-lg-3 col-md-4 col-sm-4 col-xs-12">\n                    <div class="component-group-desc">\n                        <h3>GitHub</h3>\n                        <p>')
        __M_writer(unicode(_('Options for github related features.')))
        __M_writer(u'</p>\n                    </div>\n                </div>\n                <div class="col-lg-9 col-md-8 col-sm-8 col-xs-12">\n\n                    <fieldset class="component-group-list">\n\n                        <div class="field-pair row">\n                            <div class="col-lg-3 col-md-4 col-sm-5 col-xs-12">\n                                <label class="component-title">')
        __M_writer(unicode(_('Branch version')))
        __M_writer(u'</label>\n                            </div>\n                            <div class="col-lg-9 col-md-8 col-sm-7 col-xs-12 component-desc">\n                                <div class="row">\n                                    <div class="col-md-12">\n                                        <select id="branchVersion" class="form-control form-control-inline input-sm pull-left" title="Branch Version"></select>\n                                        <input class="btn btn-inline" style="margin-left: 6px;" type="button" id="branchCheckout" value="Checkout Branch" disabled>\n                                    </div>\n                                </div>\n                                <div class="row">\n                                    <div class="col-md-12">\n                                        ')
        loading_spinner = static_url('images/loading16' + ('', '-dark')[sickbeard.THEME_NAME == 'dark'] + '.gif') 
        
        __M_writer(u'\n                                        <div class="clear-left"><label id="branchVersionLabel"><img src="')
        __M_writer(unicode(loading_spinner))
        __M_writer(u'" height="16" width="16" /> Loading...</label></div>\n                                    </div>\n                                </div>\n                            </div>\n                        </div>\n\n                        <div class="field-pair row">\n                            <div class="col-lg-3 col-md-4 col-sm-5 col-xs-12">\n                                <label class="component-title">')
        __M_writer(unicode(_('Authorization Type')))
        __M_writer(u'</label>\n                            </div>\n                            <div class="col-lg-9 col-md-8 col-sm-7 col-xs-12 component-desc">\n                                <div class="row">\n                                    <div class="col-md-12">\n                                        <input type="radio" name="git_auth_type" id="git_auth_type_basic" value="0" ')
        __M_writer(unicode(('', 'checked="checked"')[sickbeard.GIT_AUTH_TYPE == 0]))
        __M_writer(u'/>\n                                        <label for="git_auth_type_basic">')
        __M_writer(unicode(_('Username and password')))
        __M_writer(u'</label>\n                                    </div>\n                                </div>\n                                <div class="row">\n                                    <div class="col-md-12">\n                                        <input type="radio" name="git_auth_type" id="git_auth_type_token" value="1" ')
        __M_writer(unicode(('', 'checked="checked"')[sickbeard.GIT_AUTH_TYPE == 1]))
        __M_writer(u'/>\n                                        <label for="git_auth_type_token">')
        __M_writer(unicode(_('Personal access token')))
        __M_writer(u'</label>\n                                    </div>\n                                </div>\n                                <div class="row">\n                                    <div class="col-md-12">\n                                        <label><b>')
        __M_writer(unicode(_('note')))
        __M_writer(u':</b>&nbsp;')
        __M_writer(unicode(_('You must use a personal access token if you\'re using "two-factor authentication" on GitHub.')))
        __M_writer(u'</label>\n                                    </div>\n                                </div>\n                            </div>\n                        </div>\n\n                        <div name="content_github_auth_type">\n                            <div class="field-pair row">\n                                <div class="col-lg-3 col-md-4 col-sm-5 col-xs-12">\n                                    <label class="component-title">')
        __M_writer(unicode(_('GitHub username')))
        __M_writer(u'</label>\n                                </div>\n                                <div class="col-lg-9 col-md-8 col-sm-7 col-xs-12 component-desc">\n                                    <div class="row">\n                                        <div class="col-md-12">\n                                            <input type="text" name="git_username" id="git_username" value="')
        __M_writer(unicode(sickbeard.GIT_USERNAME))
        __M_writer(u'" class="form-control input-sm input300" autocapitalize="off" autocomplete="no" />\n                                        </div>\n                                    </div>\n                                    <div class="row">\n                                        <div class="col-md-12">\n                                            <label for="git_username">')
        __M_writer(unicode(_('*** (REQUIRED FOR SUBMITTING ISSUES) ***')))
        __M_writer(u'</label>\n                                        </div>\n                                    </div>\n                                </div>\n                            </div>\n\n                            <div class="field-pair row">\n                                <div class="col-lg-3 col-md-4 col-sm-5 col-xs-12">\n                                    <label class="component-title">')
        __M_writer(unicode(_('GitHub password')))
        __M_writer(u'</label>\n                                </div>\n                                <div class="col-lg-9 col-md-8 col-sm-7 col-xs-12 component-desc">\n                                    <div class="row">\n                                        <div class="col-md-12">\n                                            <input type="password" name="git_password" id="git_password" value="')
        __M_writer(unicode(sickbeard.GIT_PASSWORD))
        __M_writer(u'" class="form-control input-sm input300" autocomplete="no" autocapitalize="off" />\n                                        </div>\n                                    </div>\n                                    <div class="row">\n                                        <div class="col-md-12">\n                                            <label for="git_password">')
        __M_writer(unicode(_('*** (REQUIRED FOR SUBMITTING ISSUES) ***')))
        __M_writer(u'</label>\n                                        </div>\n                                    </div>\n                                </div>\n                            </div>\n                        </div>\n\n                        <div name="content_github_auth_type">\n                            <div class="field-pair row">\n                                <div class="col-lg-3 col-md-4 col-sm-5 col-xs-12">\n                                    <label class="component-title">')
        __M_writer(unicode(_('GitHub personal access token')))
        __M_writer(u'</label>\n                                </div>\n                                <div class="col-lg-9 col-md-8 col-sm-7 col-xs-12 component-desc">\n                                    <div class="row">\n                                        <div class="col-md-12">\n                                            <input type="text" name="git_token" id="git_token" value="')
        __M_writer(unicode(sickbeard.GIT_TOKEN))
        __M_writer(u'" class="form-control input-sm input350" autocapitalize="off" autocomplete="no" />\n')
        if not sickbeard.GIT_TOKEN:
            __M_writer(u'                                                <input class="btn btn-inline" type="button" id="create_access_token" value="')
            __M_writer(unicode(_('Generate Token')))
            __M_writer(u'">\n')
        else:
            __M_writer(u'                                                <input class="btn btn-inline" type="button" id="manage_tokens" value="')
            __M_writer(unicode(_('Manage Tokens')))
            __M_writer(u'">\n')
        __M_writer(u'                                        </div>\n                                    </div>\n                                    <div class="row">\n                                        <div class="col-md-12">\n                                            <label for="git_token">')
        __M_writer(unicode(_('*** (REQUIRED FOR SUBMITTING ISSUES) ***')))
        __M_writer(u'</label>\n                                        </div>\n                                    </div>\n                                </div>\n                            </div>\n                        </div>\n\n                        <div class="field-pair row">\n                            <div class="col-lg-3 col-md-4 col-sm-5 col-xs-12">\n                                <label class="component-title">')
        __M_writer(unicode(_('GitHub remote for branch')))
        __M_writer(u'</label>\n                            </div>\n                            <div class="col-lg-9 col-md-8 col-sm-7 col-xs-12 component-desc">\n                                <div class="row">\n                                    <div class="col-md-12">\n                                        <input type="text" name="git_remote" id="git_remote" value="')
        __M_writer(unicode(sickbeard.GIT_REMOTE))
        __M_writer(u'" class="form-control input-sm input300" autocapitalize="off" />\n                                    </div>\n                                </div>\n                                <div class="row">\n                                    <div class="col-md-12">\n                                        <label for="git_remote">')
        __M_writer(unicode(_('access repo configured remotes (save then refresh browser)')))
        __M_writer(u'</label>\n                                    </div>\n                                </div>\n                                <div class="row">\n                                    <div class="col-md-12">\n                                        <label for="git_remote"><b>')
        __M_writer(unicode(_('default')))
        __M_writer(u':</b>&nbsp;')
        __M_writer(unicode(_('origin')))
        __M_writer(u'</label>\n                                    </div>\n                                </div>\n                            </div>\n                        </div>\n\n                        <div class="field-pair row">\n                            <div class="col-lg-3 col-md-4 col-sm-5 col-xs-12">\n                                <label class="component-title">')
        __M_writer(unicode(_('Git executable path')))
        __M_writer(u'</label>\n                            </div>\n                            <div class="col-lg-9 col-md-8 col-sm-7 col-xs-12 component-desc">\n                                <div class="row">\n                                    <div class="col-md-12">\n                                        <input type="text" id="git_path" name="git_path" value="')
        __M_writer(unicode(sickbeard.GIT_PATH))
        __M_writer(u'" class="form-control input-sm input300" autocapitalize="off" />\n                                    </div>\n                                </div>\n                                <div class="row">\n                                    <div class="col-md-12">\n                                        <label for="git_path">')
        __M_writer(unicode(_('only needed if OS is unable to locate git from env')))
        __M_writer(u'</label>\n                                    </div>\n                                </div>\n                            </div>\n                        </div>\n\n                        <div class="field-pair row" hidden>\n                            <div class="col-lg-3 col-md-4 col-sm-5 col-xs-12">\n                                <label class="component-title">')
        __M_writer(unicode(_('Git reset')))
        __M_writer(u'</label>\n                            </div>\n                            <div class="col-lg-9 col-md-8 col-sm-7 col-xs-12 component-desc">\n                                <input type="checkbox" name="git_reset" id="git_reset" ')
        __M_writer(unicode(('', 'checked="checked"')[bool(sickbeard.GIT_RESET)]))
        __M_writer(u'/>\n                                <label for="git_reset">')
        __M_writer(unicode(_('removes untracked files and performs a hard reset on git branch automatically to help resolve update issues')))
        __M_writer(u'</label>\n                            </div>\n                        </div>\n\n                        <div class="row">\n                            <div class="col-md-12">\n                                <input type="submit" class="btn config_submitter" value="')
        __M_writer(unicode(_('Save Changes')))
        __M_writer(u'" />\n                            </div>\n                        </div>\n                    </fieldset>\n                </div>\n            </div>\n\n        </div>\n\n    </form>\n')
        return ''
    finally:
        context.caller_stack._pop_frame()


"""
__M_BEGIN_METADATA
{"source_encoding": "ascii", "line_map": {"16": 2, "40": 0, "53": 1, "54": 13, "59": 19, "64": 1253, "70": 15, "77": 15, "78": 16, "79": 16, "80": 17, "81": 17, "82": 18, "83": 18, "89": 21, "99": 21, "100": 30, "101": 30, "102": 31, "103": 31, "104": 32, "105": 32, "106": 40, "107": 40, "108": 45, "109": 45, "110": 45, "111": 45, "112": 50, "113": 50, "114": 58, "115": 58, "116": 61, "117": 61, "118": 62, "119": 62, "120": 68, "121": 68, "122": 74, "123": 74, "124": 74, "125": 74, "126": 75, "127": 75, "128": 75, "129": 75, "130": 76, "131": 76, "132": 76, "133": 76, "134": 77, "135": 77, "136": 77, "137": 77, "138": 78, "139": 78, "140": 78, "141": 78, "142": 84, "143": 84, "144": 91, "145": 93, "146": 93, "147": 98, "148": 98, "149": 103, "150": 103, "151": 108, "152": 108, "153": 108, "154": 108, "155": 116, "156": 116, "157": 121, "158": 121, "159": 122, "160": 122, "161": 127, "162": 127, "163": 128, "164": 128, "165": 133, "166": 133, "167": 141, "168": 141, "169": 144, "170": 144, "171": 150, "172": 150, "173": 155, "174": 155, "175": 160, "176": 160, "177": 168, "178": 168, "179": 173, "180": 173, "181": 178, "182": 178, "183": 186, "184": 186, "185": 192, "186": 192, "187": 192, "188": 192, "189": 193, "190": 194, "191": 194, "192": 194, "193": 194, "194": 194, "195": 194, "196": 194, "197": 196, "198": 201, "199": 201, "200": 209, "201": 209, "202": 214, "203": 214, "204": 219, "205": 219, "206": 227, "207": 227, "208": 232, "209": 232, "210": 237, "211": 237, "212": 245, "213": 245, "214": 259, "215": 259, "216": 260, "217": 260, "218": 268, "219": 268, "220": 271, "221": 271, "222": 272, "223": 272, "224": 278, "225": 278, "226": 281, "227": 281, "228": 282, "229": 282, "230": 288, "231": 288, "232": 293, "233": 293, "234": 298, "235": 298, "236": 306, "237": 306, "238": 309, "239": 309, "240": 310, "241": 310, "242": 316, "243": 316, "244": 330, "245": 330, "246": 331, "247": 331, "248": 340, "249": 340, "250": 346, "251": 346, "252": 346, "253": 346, "254": 347, "255": 348, "256": 348, "257": 348, "258": 348, "259": 348, "260": 348, "261": 348, "262": 350, "263": 355, "264": 355, "265": 363, "266": 363, "267": 369, "268": 369, "269": 369, "270": 369, "271": 370, "272": 370, "273": 370, "274": 370, "275": 376, "276": 376, "277": 384, "278": 384, "279": 388, "280": 388, "281": 389, "282": 389, "283": 395, "284": 395, "285": 401, "286": 401, "287": 406, "288": 406, "289": 415, "290": 415, "291": 418, "292": 418, "293": 419, "294": 419, "295": 425, "296": 425, "297": 430, "298": 430, "299": 435, "300": 435, "301": 444, "302": 444, "303": 448, "304": 448, "305": 449, "306": 449, "307": 455, "308": 455, "309": 461, "310": 461, "311": 466, "312": 466, "313": 475, "314": 475, "315": 478, "316": 478, "317": 479, "318": 479, "319": 485, "320": 485, "321": 488, "322": 488, "323": 489, "324": 489, "325": 495, "326": 495, "327": 501, "328": 501, "329": 506, "330": 506, "331": 514, "332": 514, "333": 517, "334": 517, "335": 518, "336": 518, "337": 522, "338": 522, "339": 524, "340": 524, "341": 527, "342": 527, "343": 528, "344": 528, "345": 534, "346": 534, "347": 537, "348": 537, "349": 537, "350": 537, "351": 537, "352": 537, "353": 538, "354": 539, "355": 539, "356": 539, "357": 539, "358": 539, "359": 539, "360": 539, "361": 541, "362": 542, "363": 542, "364": 542, "365": 542, "366": 542, "367": 542, "368": 543, "369": 543, "370": 543, "371": 543, "372": 544, "373": 545, "374": 545, "375": 545, "376": 545, "377": 545, "378": 545, "379": 545, "380": 547, "381": 553, "382": 553, "383": 559, "384": 560, "385": 560, "386": 560, "387": 560, "388": 560, "389": 560, "390": 560, "391": 562, "392": 567, "393": 567, "394": 567, "395": 567, "396": 575, "397": 575, "398": 580, "399": 580, "400": 581, "401": 581, "402": 586, "403": 586, "404": 587, "405": 587, "406": 592, "407": 592, "408": 597, "409": 597, "410": 597, "411": 597, "412": 605, "413": 605, "414": 610, "415": 610, "416": 615, "417": 615, "418": 623, "419": 623, "420": 638, "421": 638, "422": 639, "423": 639, "424": 640, "425": 640, "426": 648, "427": 648, "428": 653, "429": 653, "430": 659, "431": 659, "432": 664, "433": 664, "434": 664, "435": 664, "436": 664, "437": 664, "438": 672, "439": 672, "440": 675, "441": 675, "442": 676, "443": 676, "444": 682, "445": 682, "446": 687, "447": 687, "448": 692, "449": 692, "450": 700, "451": 700, "452": 705, "453": 705, "454": 710, "455": 710, "456": 718, "457": 718, "458": 723, "459": 723, "460": 728, "461": 728, "462": 736, "463": 736, "464": 739, "465": 739, "466": 740, "467": 740, "468": 746, "469": 746, "470": 749, "471": 749, "472": 750, "473": 750, "474": 756, "475": 756, "476": 759, "477": 759, "478": 760, "479": 760, "480": 768, "481": 768, "482": 771, "483": 771, "484": 772, "485": 772, "486": 778, "487": 778, "488": 781, "489": 781, "490": 782, "491": 782, "492": 790, "493": 790, "494": 795, "495": 795, "496": 796, "497": 796, "498": 801, "499": 801, "500": 809, "501": 809, "502": 825, "503": 825, "504": 833, "505": 833, "506": 839, "507": 840, "508": 840, "509": 840, "510": 840, "511": 840, "512": 840, "513": 840, "514": 842, "515": 847, "516": 847, "517": 855, "518": 855, "519": 860, "520": 860, "521": 865, "522": 865, "523": 873, "524": 873, "525": 876, "526": 876, "527": 877, "528": 877, "529": 883, "530": 883, "531": 886, "532": 886, "533": 887, "534": 887, "535": 893, "536": 893, "537": 898, "538": 898, "539": 899, "540": 899, "541": 904, "542": 904, "543": 912, "544": 912, "545": 917, "546": 917, "547": 918, "548": 918, "549": 923, "550": 923, "551": 923, "552": 923, "553": 924, "554": 924, "555": 924, "556": 924, "557": 932, "558": 932, "559": 937, "560": 937, "561": 938, "562": 938, "563": 943, "564": 943, "565": 951, "566": 951, "567": 954, "568": 954, "569": 955, "570": 955, "571": 961, "572": 961, "573": 966, "574": 966, "575": 971, "576": 971, "577": 976, "578": 976, "579": 977, "580": 977, "581": 986, "582": 986, "583": 991, "584": 991, "585": 992, "586": 992, "587": 997, "588": 997, "589": 1005, "590": 1005, "591": 1010, "592": 1010, "593": 1011, "594": 1011, "595": 1019, "596": 1019, "597": 1024, "598": 1025, "599": 1026, "600": 1027, "601": 1027, "602": 1027, "603": 1027, "604": 1027, "605": 1027, "606": 1027, "607": 1029, "608": 1030, "609": 1031, "610": 1032, "611": 1033, "612": 1033, "613": 1033, "614": 1033, "615": 1033, "616": 1033, "617": 1033, "618": 1035, "619": 1036, "620": 1036, "621": 1038, "622": 1042, "623": 1042, "624": 1047, "625": 1047, "626": 1047, "627": 1047, "628": 1052, "629": 1052, "630": 1060, "631": 1060, "632": 1075, "633": 1075, "634": 1084, "635": 1084, "636": 1095, "638": 1095, "639": 1096, "640": 1096, "641": 1104, "642": 1104, "643": 1109, "644": 1109, "645": 1110, "646": 1110, "647": 1115, "648": 1115, "649": 1116, "650": 1116, "651": 1121, "652": 1121, "653": 1121, "654": 1121, "655": 1130, "656": 1130, "657": 1135, "658": 1135, "659": 1140, "660": 1140, "661": 1148, "662": 1148, "663": 1153, "664": 1153, "665": 1158, "666": 1158, "667": 1168, "668": 1168, "669": 1173, "670": 1173, "671": 1174, "672": 1175, "673": 1175, "674": 1175, "675": 1176, "676": 1177, "677": 1177, "678": 1177, "679": 1179, "680": 1183, "681": 1183, "682": 1192, "683": 1192, "684": 1197, "685": 1197, "686": 1202, "687": 1202, "688": 1207, "689": 1207, "690": 1207, "691": 1207, "692": 1215, "693": 1215, "694": 1220, "695": 1220, "696": 1225, "697": 1225, "698": 1233, "699": 1233, "700": 1236, "701": 1236, "702": 1237, "703": 1237, "704": 1243, "705": 1243, "711": 705}, "uri": "config_general.mako", "filename": "/app/sickrage/gui/slick/views/config_general.mako"}
__M_END_METADATA
"""
