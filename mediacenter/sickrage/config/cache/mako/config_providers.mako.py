# -*- coding:ascii -*-
from mako import runtime, filters, cache
UNDEFINED = runtime.UNDEFINED
STOP_RENDERING = runtime.STOP_RENDERING
__M_dict_builtin = dict
__M_locals_builtin = locals
_magic_number = 10
_modified_time = 1517450334.288703
_enable_loop = True
_template_filename = u'/app/sickrage/gui/slick/views/config_providers.mako'
_template_uri = u'config_providers.mako'
_source_encoding = 'ascii'
_exports = [u'tabs', u'pages', u'scripts']



import sickbeard
from sickbeard.helpers import anon_url
from sickrage.providers.GenericProvider import GenericProvider


def _mako_get_namespace(context, name):
    try:
        return context.namespaces[(__name__, name)]
    except KeyError:
        _mako_generate_namespaces(context)
        return context.namespaces[(__name__, name)]
def _mako_generate_namespaces(context):
    pass
def _mako_inherit(template, context):
    _mako_generate_namespaces(context)
    return runtime._inherit_from(context, u'/layouts/config.mako', _template_uri)
def render_body(context,**pageargs):
    __M_caller = context.caller_stack._push_frame()
    try:
        __M_locals = __M_dict_builtin(pageargs=pageargs)
        int = context.get('int', UNDEFINED)
        static_url = context.get('static_url', UNDEFINED)
        def tabs():
            return render_tabs(context._locals(__M_locals))
        bool = context.get('bool', UNDEFINED)
        hasattr = context.get('hasattr', UNDEFINED)
        str = context.get('str', UNDEFINED)
        def scripts():
            return render_scripts(context._locals(__M_locals))
        def pages():
            return render_pages(context._locals(__M_locals))
        _ = context.get('_', UNDEFINED)
        __M_writer = context.writer()
        __M_writer(u'\n')
        __M_writer(u'\n\n')
        if 'parent' not in context._data or not hasattr(context._data['parent'], 'scripts'):
            context['self'].scripts(**pageargs)
        

        __M_writer(u'\n\n')
        if 'parent' not in context._data or not hasattr(context._data['parent'], 'tabs'):
            context['self'].tabs(**pageargs)
        

        __M_writer(u'\n\n')
        if 'parent' not in context._data or not hasattr(context._data['parent'], 'pages'):
            context['self'].pages(**pageargs)
        

        __M_writer(u'\n')
        return ''
    finally:
        context.caller_stack._pop_frame()


def render_tabs(context,**pageargs):
    __M_caller = context.caller_stack._push_frame()
    try:
        def tabs():
            return render_tabs(context)
        _ = context.get('_', UNDEFINED)
        __M_writer = context.writer()
        __M_writer(u'\n    <li><a href="#provider-priorities">')
        __M_writer(unicode(_('Provider Priorities')))
        __M_writer(u'</a></li>\n    <li><a href="#provider-options">')
        __M_writer(unicode(_('Provider Options')))
        __M_writer(u'</a></li>\n\n')
        if sickbeard.USE_NZBS:
            __M_writer(u'        <li><a href="#custom-newznab">')
            __M_writer(unicode(_('Configure Custom Newznab Providers')))
            __M_writer(u'</a></li>\n')
        __M_writer(u'\n')
        if sickbeard.USE_TORRENTS:
            __M_writer(u'        <li><a href="#custom-torrent">')
            __M_writer(unicode(_('Configure Custom Torrent Providers')))
            __M_writer(u'</a></li>\n')
        return ''
    finally:
        context.caller_stack._pop_frame()


def render_pages(context,**pageargs):
    __M_caller = context.caller_stack._push_frame()
    try:
        int = context.get('int', UNDEFINED)
        static_url = context.get('static_url', UNDEFINED)
        bool = context.get('bool', UNDEFINED)
        _ = context.get('_', UNDEFINED)
        str = context.get('str', UNDEFINED)
        def pages():
            return render_pages(context)
        hasattr = context.get('hasattr', UNDEFINED)
        __M_writer = context.writer()
        __M_writer(u'\n    <form id="configForm" action="saveProviders" method="post">\n\n        <div id="provider-priorities" class="component-group">\n            <div class="row">\n                <div class="col-lg-3 col-md-4 col-sm-4 col-xs-12">\n                    <div class="component-group-desc">\n                        <h3>')
        __M_writer(unicode(_('Provider Priorities')))
        __M_writer(u'</h3>\n                        <p>')
        __M_writer(unicode(_('Check off and drag the providers into the order you want them to be used.')))
        __M_writer(u'</p>\n                        <p>')
        __M_writer(unicode(_('At least one provider is required but two are recommended.')))
        __M_writer(u'</p>\n\n')
        if not sickbeard.USE_NZBS or not sickbeard.USE_TORRENTS:
            __M_writer(u'                            <blockquote style="margin: 20px 0;">NZB/')
            __M_writer(unicode(_('Torrent and NZB providers can be toggled in ')))
            __M_writer(u'\n                                <b><a href="/config/search">Search Settings</a></b></blockquote>\n')
        else:
            __M_writer(u'                            <br>\n')
        __M_writer(u'\n                        <div>\n                            <p class="note"><span class="red-text">*</span> ')
        __M_writer(unicode(_('Provider does not support backlog searches at this time.')))
        __M_writer(u'</p>\n                            <p class="note"><span class="red-text">!</span> ')
        __M_writer(unicode(_('Provider is <b>NOT WORKING</b>.')))
        __M_writer(u'</p>\n                        </div>\n                    </div>\n                </div>\n                <div class="col-lg-9 col-md-8 col-sm-8 col-xs-12">\n\n                    <fieldset class="component-group-list">\n\n                        <ul id="provider_order_list">\n')
        for curProvider in sickbeard.providers.sortedProviderList():
            __M_writer(u'                            ')

                                ## These will show the '!' not saying they are broken
            broken_providers = {'torrentproject', 'cpasbien'}
            if curProvider.provider_type == GenericProvider.NZB and not sickbeard.USE_NZBS:
                continue
            elif curProvider.provider_type == GenericProvider.TORRENT and not sickbeard.USE_TORRENTS:
                continue
            
            curName = curProvider.get_id()
            if hasattr(curProvider, 'custom_url'):
                curURL = curProvider.custom_url or curProvider.url
            else:
                curURL = curProvider.url
                                        
            
            __M_writer(u'\n                                <li class="ui-state-default ')
            __M_writer(unicode(('nzb-provider', 'torrent-provider')[bool(curProvider.provider_type == GenericProvider.TORRENT)]))
            __M_writer(u'" id="')
            __M_writer(unicode(curName))
            __M_writer(u'">\n                                    <input type="checkbox" id="enable_')
            __M_writer(unicode(curName))
            __M_writer(u'" class="provider_enabler" ')
            __M_writer(unicode(('', 'checked="checked"')[curProvider.is_enabled() is True]))
            __M_writer(u'/>\n                                    <a href="')
            __M_writer(unicode(anon_url(curURL)))
            __M_writer(u'" class="imgLink" rel="noreferrer"\n                                       onclick="window.open(this.href, \'_blank\'); return false;">\n                                        <img src="')
            __M_writer(unicode(static_url('images/providers/' + curProvider.image_name())))
            __M_writer(u'"\n                                            alt="')
            __M_writer(unicode(curProvider.name))
            __M_writer(u'" title="')
            __M_writer(unicode(curProvider.name))
            __M_writer(u'" width="16"\n                                            height="16" style="vertical-align:middle;"/>\n                                    </a>\n                                    <label for="enable_')
            __M_writer(unicode(curName))
            __M_writer(u'" style="vertical-align:middle;">')
            __M_writer(unicode(curProvider.name))
            __M_writer(u'</label>\n                                    ')
            __M_writer(unicode(('<span class="red-text">*</span>', '')[bool(curProvider.supports_backlog)]))
            __M_writer(u'\n                                    ')
            __M_writer(unicode(('<span class="red-text">!</span>', '')[bool(curProvider.get_id() not in broken_providers)]))
            __M_writer(u'\n                                    <span class="ui-icon ui-icon-arrowthick-2-n-s pull-right" style="vertical-align:middle;"></span>\n                                    <span class="ui-icon ')
            __M_writer(unicode(('ui-icon-locked','ui-icon-unlocked')[bool(curProvider.public)]))
            __M_writer(u' pull-right" style="vertical-align:middle;"></span>\n                                </li>\n')
        __M_writer(u'                        </ul>\n\n                        <input type="hidden" name="provider_order" id="provider_order" value="')
        __M_writer(unicode(" ".join([x.get_id()+':'+str(int(x.is_enabled())) for x in sickbeard.providers.sortedProviderList()])))
        __M_writer(u'"/>\n\n                    </fieldset>\n                </div>\n            </div>\n        </div>\n\n        <div id="provider-options" class="component-group">\n            <div class="row">\n                <div class="col-lg-3 col-md-4 col-sm-4 col-xs-12">\n                    <div class="component-group-desc">\n                        <h3>')
        __M_writer(unicode(_('Provider Options')))
        __M_writer(u'</h3>\n                        <p>')
        __M_writer(unicode(_('Configure individual provider settings here.')))
        __M_writer(u'</p>\n                        <p>')
        __M_writer(unicode(_('Check with provider\'s website on how to obtain an API key if needed.')))
        __M_writer(u'</p>\n                    </div>\n                </div>\n                <div class="col-lg-9 col-md-8 col-sm-8 col-xs-12">\n\n                    <fieldset class="component-group-list">\n\n                        <div class="field-pair row">\n\n                            <div class="col-lg-3 col-md-4 col-sm-5 col-xs-12">\n                                <label class="component-title">')
        __M_writer(unicode(_('Configure provider')))
        __M_writer(u'</label>\n                            </div>\n                            <div class="col-lg-9 col-md-8 col-sm-7 col-xs-12 component-desc">\n                                ')

        provider_config_list = []
        for curProvider in sickbeard.providers.sortedProviderList():
            if curProvider.provider_type == GenericProvider.NZB and (not sickbeard.USE_NZBS or not curProvider.is_enabled()):
                continue
            elif curProvider.provider_type == GenericProvider.TORRENT and ( not sickbeard.USE_TORRENTS or not curProvider.is_enabled()):
                continue
            provider_config_list.append(curProvider)
                                        
        
        __M_writer(u'\n')
        if provider_config_list:
            __M_writer(u'                                    <select id="editAProvider" class="form-control input-sm input250">\n')
            for cur_provider in provider_config_list:
                __M_writer(u'                                            <option value="')
                __M_writer(unicode(cur_provider.get_id()))
                __M_writer(u'">')
                __M_writer(unicode(cur_provider.name))
                __M_writer(u'</option>\n')
            __M_writer(u'                                    </select>\n')
        else:
            __M_writer(u'                                    <label>')
            __M_writer(unicode(_('no providers available to configure.')))
            __M_writer(u'</label>\n')
        __M_writer(u'                            </div>\n                        </div>\n\n\n                        <!-- start div for editing providers //-->\n')
        for curNewznabProvider in sickbeard.newznabProviderList:
            __M_writer(u'                            <div class="providerDiv" id="')
            __M_writer(unicode(curNewznabProvider.get_id()))
            __M_writer(u'Div">\n')
            if curNewznabProvider.default and curNewznabProvider.needs_auth:
                __M_writer(u'\n                                    <div class="field-pair row">\n                                        <div class="col-lg-3 col-md-4 col-sm-5 col-xs-12">\n                                            <label class="component-title">')
                __M_writer(unicode(_('URL')))
                __M_writer(u'</label>\n                                        </div>\n                                        <div class="col-lg-9 col-md-8 col-sm-7 col-xs-12 component-desc">\n                                            <input type="text" id="')
                __M_writer(unicode(curNewznabProvider.get_id()))
                __M_writer(u'_url"\n                                                   value="')
                __M_writer(unicode(curNewznabProvider.url))
                __M_writer(u'" class="form-control input-sm input350"\n                                                   disabled autocapitalize="off"/>\n                                        </div>\n                                    </div>\n\n                                    <div class="field-pair row">\n                                        <div class="col-lg-3 col-md-4 col-sm-5 col-xs-12">\n                                            <label class="component-title">')
                __M_writer(unicode(_('API key')))
                __M_writer(u'</label>\n                                        </div>\n                                        <div class="col-lg-9 col-md-8 col-sm-7 col-xs-12 component-desc">\n                                            <input type="text" id="')
                __M_writer(unicode(curNewznabProvider.get_id()))
                __M_writer(u'_hash"\n                                                   value="')
                __M_writer(unicode(curNewznabProvider.key))
                __M_writer(u'"\n                                                   newznab_name="')
                __M_writer(unicode(curNewznabProvider.get_id()))
                __M_writer(u'_hash"\n                                                   class="newznab_key form-control input-sm input350" autocapitalize="off"/>\n                                        </div>\n                                    </div>\n')
            __M_writer(u'\n')
            if hasattr(curNewznabProvider, 'enable_daily'):
                __M_writer(u'                                    <div class="field-pair row">\n                                        <div class="col-lg-3 col-md-4 col-sm-5 col-xs-12">\n                                            <label class="component-title">')
                __M_writer(unicode(_('Enable daily searches')))
                __M_writer(u'</label>\n                                        </div>\n                                        <div class="col-lg-9 col-md-8 col-sm-7 col-xs-12 component-desc">\n                                            <input type="checkbox" name="')
                __M_writer(unicode(curNewznabProvider.get_id()))
                __M_writer(u'_enable_daily"\n                                                   id="')
                __M_writer(unicode(curNewznabProvider.get_id()))
                __M_writer(u'_enable_daily" ')
                __M_writer(unicode(('', 'checked="checked"')[bool(curNewznabProvider.enable_daily)]))
                __M_writer(u'/>\n                                            <label for="')
                __M_writer(unicode(curNewznabProvider.get_id()))
                __M_writer(u'_enable_daily">')
                __M_writer(unicode(_('enable provider to perform daily searches.')))
                __M_writer(u'</label>\n                                        </div>\n                                    </div>\n')
            __M_writer(u'\n')
            if hasattr(curNewznabProvider, 'enable_backlog'):
                __M_writer(u'                                    <div class="field-pair row')
                __M_writer(unicode((' hidden', '')[curNewznabProvider.supports_backlog]))
                __M_writer(u'">\n                                        <div class="col-lg-3 col-md-4 col-sm-5 col-xs-12">\n                                            <label class="component-title">')
                __M_writer(unicode(_('Enable backlog searches')))
                __M_writer(u'</label>\n                                        </div>\n                                        <div class="col-lg-9 col-md-8 col-sm-7 col-xs-12 component-desc">\n                                            <input type="checkbox" name="')
                __M_writer(unicode(curNewznabProvider.get_id()))
                __M_writer(u'_enable_backlog"\n                                                   id="')
                __M_writer(unicode(curNewznabProvider.get_id()))
                __M_writer(u'_enable_backlog" ')
                __M_writer(unicode(('', 'checked="checked"')[bool(curNewznabProvider.enable_backlog and curNewznabProvider.supports_backlog)]))
                __M_writer(u'/>\n                                            <label for="')
                __M_writer(unicode(curNewznabProvider.get_id()))
                __M_writer(u'_enable_backlog">')
                __M_writer(unicode(_('enable provider to perform backlog searches.')))
                __M_writer(u'</label>\n                                        </div>\n                                    </div>\n')
            __M_writer(u'\n')
            if hasattr(curNewznabProvider, 'search_mode'):
                __M_writer(u'                                    <div class="field-pair row">\n                                        <div class="col-lg-3 col-md-4 col-sm-5 col-xs-12">\n                                            <label class="component-title">')
                __M_writer(unicode(_('Season search mode')))
                __M_writer(u'</label>\n                                        </div>\n                                        <div class="col-lg-9 col-md-8 col-sm-7 col-xs-12 component-desc">\n                                            <div class="row">\n                                                <div class="col-md-12">\n                                                    <label>')
                __M_writer(unicode(_('when searching for complete seasons you can choose to have it look for season packs only, or choose to have it build a complete season from just single episodes.')))
                __M_writer(u'</label>\n                                                </div>\n                                            </div>\n                                            <div class="row">\n                                                <div class="col-md-12">\n                                                    <input type="radio" name="')
                __M_writer(unicode(curNewznabProvider.get_id()))
                __M_writer(u'_search_mode"\n                                                           id="')
                __M_writer(unicode(curNewznabProvider.get_id()))
                __M_writer(u'_search_mode_sponly"\n                                                           value="sponly" ')
                __M_writer(unicode(('', 'checked="checked"')[curNewznabProvider.search_mode=="sponly"]))
                __M_writer(u'/>\n                                                    <label for="')
                __M_writer(unicode(curNewznabProvider.get_id()))
                __M_writer(u'_search_mode_sponly">')
                __M_writer(unicode(_('season packs only.')))
                __M_writer(u'</label>\n                                                </div>\n                                            </div>\n                                            <div class="row">\n                                                <div class="col-md-12">\n                                                    <input type="radio" name="')
                __M_writer(unicode(curNewznabProvider.get_id()))
                __M_writer(u'_search_mode"\n                                                           id="')
                __M_writer(unicode(curNewznabProvider.get_id()))
                __M_writer(u'_search_mode_eponly"\n                                                           value="eponly" ')
                __M_writer(unicode(('', 'checked="checked"')[curNewznabProvider.search_mode=="eponly"]))
                __M_writer(u'/>\n                                                    <label for="')
                __M_writer(unicode(curNewznabProvider.get_id()))
                __M_writer(u'_search_mode_eponly">')
                __M_writer(unicode(_('episodes only.')))
                __M_writer(u'</label>\n                                                </div>\n                                            </div>\n                                        </div>\n                                    </div>\n')
            __M_writer(u'\n')
            if hasattr(curNewznabProvider, 'search_fallback'):
                __M_writer(u'                                    <div class="field-pair row">\n                                        <div class="col-lg-3 col-md-4 col-sm-5 col-xs-12">\n                                            <label class="component-title">')
                __M_writer(unicode(_('Enable fallback')))
                __M_writer(u'</label>\n                                        </div>\n                                        <div class="col-lg-9 col-md-8 col-sm-7 col-xs-12 component-desc">\n                                            <input type="checkbox" name="')
                __M_writer(unicode(curNewznabProvider.get_id()))
                __M_writer(u'_search_fallback"\n                                                   id="')
                __M_writer(unicode(curNewznabProvider.get_id()))
                __M_writer(u'_search_fallback" ')
                __M_writer(unicode(('', 'checked="checked"')[bool(curNewznabProvider.search_fallback)]))
                __M_writer(u'/>\n                                            <label for="')
                __M_writer(unicode(curNewznabProvider.get_id()))
                __M_writer(u'_search_fallback">')
                __M_writer(unicode(_('when searching for a complete season depending on search mode you may return no results, this helps by restarting the search using the opposite search mode.')))
                __M_writer(u'</label>\n                                        </div>\n                                    </div>\n')
            __M_writer(u'\n                            </div>\n')
        __M_writer(u'\n')
        for curNzbProvider in [curProvider for curProvider in sickbeard.providers.sortedProviderList() if curProvider.provider_type == GenericProvider.NZB and curProvider not in sickbeard.newznabProviderList]:
            __M_writer(u'                            <div class="providerDiv" id="')
            __M_writer(unicode(curNzbProvider.get_id()))
            __M_writer(u'Div">\n')
            if hasattr(curNzbProvider, 'username'):
                __M_writer(u'                                    <div class="field-pair row">\n                                        <div class="col-lg-3 col-md-4 col-sm-5 col-xs-12">\n                                            <label class="component-title">')
                __M_writer(unicode(_('Username')))
                __M_writer(u'</label>\n                                        </div>\n                                        <div class="col-lg-9 col-md-8 col-sm-7 col-xs-12 component-desc">\n                                            <input type="text" name="')
                __M_writer(unicode(curNzbProvider.get_id()))
                __M_writer(u'_username"\n                                                   value="')
                __M_writer(unicode(curNzbProvider.username))
                __M_writer(u'" class="form-control input-sm input350"\n                                                   autocapitalize="off" autocomplete="no"/>\n                                        </div>\n                                    </div>\n')
            __M_writer(u'\n')
            if hasattr(curNzbProvider, 'api_key'):
                __M_writer(u'                                    <div class="field-pair row">\n                                        <div class="col-lg-3 col-md-4 col-sm-5 col-xs-12">\n                                            <label class="component-title">')
                __M_writer(unicode(_('API key')))
                __M_writer(u'</label>\n                                        </div>\n                                        <div class="col-lg-9 col-md-8 col-sm-7 col-xs-12 component-desc">\n                                            <input type="text" name="')
                __M_writer(unicode(curNzbProvider.get_id()))
                __M_writer(u'_api_key"\n                                                   value="')
                __M_writer(unicode(curNzbProvider.api_key))
                __M_writer(u'" class="form-control input-sm input350"\n                                                   autocapitalize="off"/>\n                                        </div>\n                                    </div>\n')
            __M_writer(u'\n')
            if hasattr(curNzbProvider, 'enable_daily'):
                __M_writer(u'                                    <div class="field-pair row">\n                                        <div class="col-lg-3 col-md-4 col-sm-5 col-xs-12">\n                                            <label class="component-title">')
                __M_writer(unicode(_('Enable daily searches')))
                __M_writer(u'</label>\n                                        </div>\n                                        <div class="col-lg-9 col-md-8 col-sm-7 col-xs-12 component-desc">\n                                            <input type="checkbox" name="')
                __M_writer(unicode(curNzbProvider.get_id()))
                __M_writer(u'_enable_daily"\n                                                   id="')
                __M_writer(unicode(curNzbProvider.get_id()))
                __M_writer(u'_enable_daily" ')
                __M_writer(unicode(('', 'checked="checked"')[bool(curNzbProvider.enable_daily)]))
                __M_writer(u'/>\n                                            <label for="')
                __M_writer(unicode(curNzbProvider.get_id()))
                __M_writer(u'_enable_daily">')
                __M_writer(unicode(_('enable provider to perform daily searches.')))
                __M_writer(u'</label>\n                                        </div>\n                                    </div>\n')
            __M_writer(u'\n')
            if hasattr(curNzbProvider, 'enable_backlog'):
                __M_writer(u'                                    <div class="field-pair row')
                __M_writer(unicode((' hidden', '')[curNzbProvider.supports_backlog]))
                __M_writer(u'">\n                                        <div class="col-lg-3 col-md-4 col-sm-5 col-xs-12">\n                                            <label class="component-title">')
                __M_writer(unicode(_('Enable backlog searches')))
                __M_writer(u'</label>\n                                        </div>\n                                        <div class="col-lg-9 col-md-8 col-sm-7 col-xs-12 component-desc">\n                                            <input type="checkbox" name="')
                __M_writer(unicode(curNzbProvider.get_id()))
                __M_writer(u'_enable_backlog"\n                                                   id="')
                __M_writer(unicode(curNzbProvider.get_id()))
                __M_writer(u'_enable_backlog" ')
                __M_writer(unicode(('', 'checked="checked"')[bool(curNzbProvider.enable_backlog and curNzbProvider.supports_backlog)]))
                __M_writer(u'/>\n                                            <label for="')
                __M_writer(unicode(curNzbProvider.get_id()))
                __M_writer(u'_enable_backlog">')
                __M_writer(unicode(_('enable provider to perform backlog searches.')))
                __M_writer(u'</label>\n                                        </div>\n                                    </div>\n')
            __M_writer(u'\n')
            if hasattr(curNzbProvider, 'search_mode'):
                __M_writer(u'                                    <div class="field-pair row">\n                                        <div class="col-lg-3 col-md-4 col-sm-5 col-xs-12">\n                                            <label class="component-title">')
                __M_writer(unicode(_('Season search mode')))
                __M_writer(u'</label>\n                                        </div>\n                                        <div class="col-lg-9 col-md-8 col-sm-7 col-xs-12 component-desc">\n                                            <div class="row">\n                                                <div class="col-md-12">\n                                                    <label>')
                __M_writer(unicode(_('when searching for complete seasons you can choose to have it look for season packs only, or choose to have it build a complete season from just single episodes.')))
                __M_writer(u'</label>\n                                                </div>\n                                            </div>\n                                            <div class="row">\n                                                <div class="col-md-12">\n                                                    <input type="radio" name="')
                __M_writer(unicode(curNzbProvider.get_id()))
                __M_writer(u'_search_mode"\n                                                           id="')
                __M_writer(unicode(curNzbProvider.get_id()))
                __M_writer(u'_search_mode_sponly"\n                                                           value="sponly" ')
                __M_writer(unicode(('', 'checked="checked"')[curNzbProvider.search_mode=="sponly"]))
                __M_writer(u'/>\n                                                    <label for="')
                __M_writer(unicode(curNzbProvider.get_id()))
                __M_writer(u'_search_mode_sponly">season packs only.</label>\n                                                </div>\n                                            </div>\n                                            <div class="row">\n                                                <div class="col-md-12">\n                                                    <input type="radio" name="')
                __M_writer(unicode(curNzbProvider.get_id()))
                __M_writer(u'_search_mode"\n                                                           id="')
                __M_writer(unicode(curNzbProvider.get_id()))
                __M_writer(u'_search_mode_eponly"\n                                                           value="eponly" ')
                __M_writer(unicode(('', 'checked="checked"')[curNzbProvider.search_mode=="eponly"]))
                __M_writer(u'/>\n                                                    <label for="')
                __M_writer(unicode(curNzbProvider.get_id()))
                __M_writer(u'_search_mode_eponly">episodes only.</label>\n                                                </div>\n                                            </div>\n                                        </div>\n                                    </div>\n')
            __M_writer(u'\n')
            if hasattr(curNzbProvider, 'search_fallback'):
                __M_writer(u'                                    <div class="field-pair row">\n                                        <div class="col-lg-3 col-md-4 col-sm-5 col-xs-12">\n                                            <label class="component-title">')
                __M_writer(unicode(_('Enable fallback')))
                __M_writer(u'</label>\n                                        </div>\n                                        <div class="col-lg-9 col-md-8 col-sm-7 col-xs-12 component-desc">\n                                            <input type="checkbox" name="')
                __M_writer(unicode(curNzbProvider.get_id()))
                __M_writer(u'_search_fallback"\n                                                   id="')
                __M_writer(unicode(curNzbProvider.get_id()))
                __M_writer(u'_search_fallback" ')
                __M_writer(unicode(('', 'checked="checked"')[bool(curNzbProvider.search_fallback)]))
                __M_writer(u'/>\n                                            <label for="')
                __M_writer(unicode(curNzbProvider.get_id()))
                __M_writer(u'_search_fallback">')
                __M_writer(unicode(_('when searching for a complete season depending on search mode you may return no results, this helps by restarting the search using the opposite search mode.')))
                __M_writer(u'</label>\n                                        </div>\n                                    </div>\n')
            __M_writer(u'\n                            </div>\n')
        __M_writer(u'\n')
        for curTorrentProvider in [curProvider for curProvider in sickbeard.providers.sortedProviderList() if curProvider.provider_type == GenericProvider.TORRENT]:
            __M_writer(u'                            <div class="providerDiv" id="')
            __M_writer(unicode(curTorrentProvider.get_id()))
            __M_writer(u'Div">\n\n')
            if hasattr(curTorrentProvider, 'custom_url'):
                __M_writer(u'                                    <div class="field-pair row">\n                                        <div class="col-lg-3 col-md-4 col-sm-5 col-xs-12">\n                                            <label class="component-title">')
                __M_writer(unicode(_('Custom URL')))
                __M_writer(u'</label>\n                                        </div>\n                                        <div class="col-lg-9 col-md-8 col-sm-7 col-xs-12 component-desc">\n                                            <input type="text" name="')
                __M_writer(unicode(curTorrentProvider.get_id()))
                __M_writer(u'_custom_url"\n                                                   id="')
                __M_writer(unicode(curTorrentProvider.get_id()))
                __M_writer(u'_custom_url"\n                                                   value="')
                __M_writer(unicode(curTorrentProvider.custom_url))
                __M_writer(u'"\n                                                   class="form-control input-sm input350" autocapitalize="off"/>\n                                            <label for="')
                __M_writer(unicode(curTorrentProvider.get_id()))
                __M_writer(u'_custom_url">')
                __M_writer(unicode(_('the URL should include the protocol (and port if applicable).  Examples:  http://192.168.1.4/ or http://localhost:3000/')))
                __M_writer(u'</label>\n                                        </div>\n                                    </div>\n')
            __M_writer(u'\n')
            if hasattr(curTorrentProvider, 'api_key'):
                __M_writer(u'                                    <div class="field-pair row">\n                                        <div class="col-lg-3 col-md-4 col-sm-5 col-xs-12">\n                                            <label class="component-title">')
                __M_writer(unicode(_('Api key')))
                __M_writer(u'</label>\n                                        </div>\n                                        <div class="col-lg-9 col-md-8 col-sm-7 col-xs-12 component-desc">\n                                            <input type="text" name="')
                __M_writer(unicode(curTorrentProvider.get_id()))
                __M_writer(u'_api_key"\n                                                   id="')
                __M_writer(unicode(curTorrentProvider.get_id()))
                __M_writer(u'_api_key"\n                                                   value="')
                __M_writer(unicode(curTorrentProvider.api_key))
                __M_writer(u'" class="form-control input-sm input350"\n                                                   autocapitalize="off"/>\n                                        </div>\n                                    </div>\n')
            __M_writer(u'\n')
            if hasattr(curTorrentProvider, 'digest'):
                __M_writer(u'                                    <div class="field-pair row">\n                                        <div class="col-lg-3 col-md-4 col-sm-5 col-xs-12">\n                                            <label class="component-title">')
                __M_writer(unicode(_('Digest')))
                __M_writer(u'</label>\n                                        </div>\n                                        <div class="col-lg-9 col-md-8 col-sm-7 col-xs-12 component-desc">\n                                            <input type="text" name="')
                __M_writer(unicode(curTorrentProvider.get_id()))
                __M_writer(u'_digest"\n                                                   id="')
                __M_writer(unicode(curTorrentProvider.get_id()))
                __M_writer(u'_digest"\n                                                   value="')
                __M_writer(unicode(curTorrentProvider.digest))
                __M_writer(u'" class="form-control input-sm input350"\n                                                   autocapitalize="off"/>\n                                        </div>\n                                    </div>\n')
            __M_writer(u'\n')
            if hasattr(curTorrentProvider, 'hash'):
                __M_writer(u'                                    <div class="field-pair row">\n                                        <div class="col-lg-3 col-md-4 col-sm-5 col-xs-12">\n                                            <label class="component-title">')
                __M_writer(unicode(_('Hash')))
                __M_writer(u'</label>\n                                        </div>\n                                        <div class="col-lg-9 col-md-8 col-sm-7 col-xs-12 component-desc">\n                                            <input type="text" name="')
                __M_writer(unicode(curTorrentProvider.get_id()))
                __M_writer(u'_hash"\n                                                   id="')
                __M_writer(unicode(curTorrentProvider.get_id()))
                __M_writer(u'_hash" value="')
                __M_writer(unicode(curTorrentProvider.hash))
                __M_writer(u'"\n                                                   class="form-control input-sm input350" autocapitalize="off"/>\n                                        </div>\n                                    </div>\n')
            __M_writer(u'\n')
            if hasattr(curTorrentProvider, 'username'):
                __M_writer(u'                                    <div class="field-pair row">\n                                        <div class="col-lg-3 col-md-4 col-sm-5 col-xs-12">\n                                            <label class="component-title">')
                __M_writer(unicode(_('Username')))
                __M_writer(u'</label>\n                                        </div>\n                                        <div class="col-lg-9 col-md-8 col-sm-7 col-xs-12 component-desc">\n                                            <input type="text" name="')
                __M_writer(unicode(curTorrentProvider.get_id()))
                __M_writer(u'_username"\n                                                   id="')
                __M_writer(unicode(curTorrentProvider.get_id()))
                __M_writer(u'_username"\n                                                   value="')
                __M_writer(unicode(curTorrentProvider.username))
                __M_writer(u'" class="form-control input-sm input350"\n                                                   autocapitalize="off" autocomplete="no"/>\n                                        </div>\n                                    </div>\n')
            __M_writer(u'\n')
            if hasattr(curTorrentProvider, 'password'):
                __M_writer(u'                                    <div class="field-pair row">\n                                        <div class="col-lg-3 col-md-4 col-sm-5 col-xs-12">\n                                            <label class="component-title">')
                __M_writer(unicode(_('Password')))
                __M_writer(u'</label>\n                                        </div>\n                                        <div class="col-lg-9 col-md-8 col-sm-7 col-xs-12 component-desc">\n                                            <input type="password" name="')
                __M_writer(unicode(curTorrentProvider.get_id()))
                __M_writer(u'_password"\n                                                   id="')
                __M_writer(unicode(curTorrentProvider.get_id()))
                __M_writer(u'_password"\n                                                   value="')
                __M_writer(filters.html_escape(unicode(curTorrentProvider.password )))
                __M_writer(u'" class="form-control input-sm input350"\n                                                   autocomplete="no" autocapitalize="off"/>\n                                        </div>\n                                    </div>\n')
            __M_writer(u'\n')
            if hasattr(curTorrentProvider, 'passkey'):
                __M_writer(u'                                    <div class="field-pair row">\n                                        <div class="col-lg-3 col-md-4 col-sm-5 col-xs-12">\n                                            <label class="component-title">')
                __M_writer(unicode(_('Passkey')))
                __M_writer(u'</label>\n                                        </div>\n                                        <div class="col-lg-9 col-md-8 col-sm-7 col-xs-12 component-desc">\n                                            <input type="text" name="')
                __M_writer(unicode(curTorrentProvider.get_id()))
                __M_writer(u'_passkey"\n                                                   id="')
                __M_writer(unicode(curTorrentProvider.get_id()))
                __M_writer(u'_passkey"\n                                                   value="')
                __M_writer(unicode(curTorrentProvider.passkey))
                __M_writer(u'" class="form-control input-sm input350"\n                                                   autocapitalize="off"/>\n                                        </div>\n                                    </div>\n')
            __M_writer(u'\n')
            if curTorrentProvider.enable_cookies:
                __M_writer(u'                                    <div class="field-pair row">\n                                        <div class="col-lg-3 col-md-4 col-sm-5 col-xs-12">\n                                            <label class="component-title">')
                __M_writer(unicode(_('Cookies')))
                __M_writer(u'</label>\n                                        </div>\n                                        <div class="col-lg-9 col-md-8 col-sm-7 col-xs-12 component-desc">\n                                            <div class="row">\n                                                <div class="col-md-12">\n                                                    <input type="text" name="')
                __M_writer(unicode(curTorrentProvider.get_id()))
                __M_writer(u'_cookies"\n                                                           id="')
                __M_writer(unicode(curTorrentProvider.get_id()))
                __M_writer(u'_cookies"\n                                                           value="')
                __M_writer(unicode(curTorrentProvider.cookies))
                __M_writer(u'"\n                                                           class="form-control input-sm input350"\n                                                           autocapitalize="off" autocomplete="no" />\n                                                </div>\n                                            </div>\n                                            <div class="row">\n                                                <div class="col-md-12">\n                                                    <label for="')
                __M_writer(unicode(curTorrentProvider.get_id()))
                __M_writer(u'_cookies">\n                                                        ')
                __M_writer(unicode(_('example: uid=1234;pass=567845439634987<br>' +
                                                        'note: uid and pass are not your username/password.<br>' +
                                                        'use DevTools or Firebug to get these values after logging in on your browser.')))
                __M_writer(u'\n                                                    </label>\n                                                </div>\n                                            </div>\n                                        </div>\n                                    </div>\n')
            __M_writer(u'\n')
            if hasattr(curTorrentProvider, 'pin'):
                __M_writer(u'                                    <div class="field-pair row">\n                                        <div class="col-lg-3 col-md-4 col-sm-5 col-xs-12">\n                                            <label class="component-title">')
                __M_writer(unicode(_('Pin')))
                __M_writer(u'</label>\n                                        </div>\n                                        <div class="col-lg-9 col-md-8 col-sm-7 col-xs-12 component-desc">\n                                            <input type="password" name="')
                __M_writer(unicode(curTorrentProvider.get_id()))
                __M_writer(u'_pin"\n                                                   id="')
                __M_writer(unicode(curTorrentProvider.get_id()))
                __M_writer(u'_pin" value="')
                __M_writer(unicode(curTorrentProvider.pin))
                __M_writer(u'"\n                                                   class="form-control input-sm input100" autocomplete="no"\n                                                   autocapitalize="off"/>\n                                        </div>\n                                    </div>\n')
            __M_writer(u'\n')
            if hasattr(curTorrentProvider, 'ratio'):
                __M_writer(u'                                    <div class="field-pair row">\n                                        <div class="col-lg-3 col-md-4 col-sm-5 col-xs-12">\n                                            <label class="component-title" id="')
                __M_writer(unicode(curTorrentProvider.get_id()))
                __M_writer(u'_ratio_desc">')
                __M_writer(unicode(_('Seed ratio')))
                __M_writer(u'</label>\n                                        </div>\n                                        <div class="col-lg-9 col-md-8 col-sm-7 col-xs-12 component-desc">\n                                            <div class="row">\n                                                <div class="col-md-12">\n                                                    <input type="number" min="-1" step="0.1" name="')
                __M_writer(unicode(curTorrentProvider.get_id()))
                __M_writer(u'_ratio"\n                                                           id="')
                __M_writer(unicode(curTorrentProvider.get_id()))
                __M_writer(u'_ratio" value="')
                __M_writer(unicode(curTorrentProvider.ratio or ''))
                __M_writer(u'"\n                                                           class="form-control input-sm input75"/>\n                                                </div>\n                                            </div>\n                                            <div class="row">\n                                                <div class="col-md-12">\n                                                    <label for="')
                __M_writer(unicode(curTorrentProvider.get_id()))
                __M_writer(u'_ratio">')
                __M_writer(unicode(_('stop transfer when ratio is reached<br>(-1 SickRage default to seed forever, or leave blank for downloader default)')))
                __M_writer(u'</label>\n                                                </div>\n                                            </div>\n                                        </div>\n                                    </div>\n')
            __M_writer(u'\n')
            if hasattr(curTorrentProvider, 'minseed'):
                __M_writer(u'                                    <div class="field-pair row">\n                                        <div class="col-lg-3 col-md-4 col-sm-5 col-xs-12">\n                                            <label class="component-title" id="')
                __M_writer(unicode(curTorrentProvider.get_id()))
                __M_writer(u'_minseed_desc">')
                __M_writer(unicode(_('Minimum seeders')))
                __M_writer(u'</label>\n                                        </div>\n                                        <div class="col-lg-9 col-md-8 col-sm-7 col-xs-12 component-desc">\n                                            <input type="number" min="0" step="1" name="')
                __M_writer(unicode(curTorrentProvider.get_id()))
                __M_writer(u'_minseed"\n                                                   id="')
                __M_writer(unicode(curTorrentProvider.get_id()))
                __M_writer(u'_minseed"\n                                                    value="')
                __M_writer(unicode(curTorrentProvider.minseed))
                __M_writer(u'" class="form-control input-sm input75"/>\n                                        </div>\n                                    </div>\n')
            __M_writer(u'\n')
            if hasattr(curTorrentProvider, 'minleech'):
                __M_writer(u'                                    <div class="field-pair row">\n                                        <div class="col-lg-3 col-md-4 col-sm-5 col-xs-12">\n                                            <label class="component-title" id="')
                __M_writer(unicode(curTorrentProvider.get_id()))
                __M_writer(u'_minleech_desc">')
                __M_writer(unicode(_('Minimum leechers')))
                __M_writer(u'</label>\n                                        </div>\n                                        <div class="col-lg-9 col-md-8 col-sm-7 col-xs-12 component-desc">\n                                            <input type="number" min="0" step="1" name="')
                __M_writer(unicode(curTorrentProvider.get_id()))
                __M_writer(u'_minleech"\n                                                   id="')
                __M_writer(unicode(curTorrentProvider.get_id()))
                __M_writer(u'_minleech"\n                                                    value="')
                __M_writer(unicode(curTorrentProvider.minleech))
                __M_writer(u'"\n                                                   class="form-control input-sm input75"/>\n                                        </div>\n                                    </div>\n')
            __M_writer(u'\n')
            if hasattr(curTorrentProvider, 'confirmed'):
                __M_writer(u'                                    <div class="field-pair row">\n                                        <div class="col-lg-3 col-md-4 col-sm-5 col-xs-12">\n                                            <label class="component-title">')
                __M_writer(unicode(_('Confirmed download')))
                __M_writer(u'</label>\n                                        </div>\n                                        <div class="col-lg-9 col-md-8 col-sm-7 col-xs-12 component-desc">\n                                            <input type="checkbox" name="')
                __M_writer(unicode(curTorrentProvider.get_id()))
                __M_writer(u'_confirmed"\n                                                   id="')
                __M_writer(unicode(curTorrentProvider.get_id()))
                __M_writer(u'_confirmed" ')
                __M_writer(unicode(('', 'checked="checked"')[bool(curTorrentProvider.confirmed)]))
                __M_writer(u'/>\n                                            <label for="')
                __M_writer(unicode(curTorrentProvider.get_id()))
                __M_writer(u'_confirmed">')
                __M_writer(unicode(_('only download torrents from trusted or verified uploaders ?')))
                __M_writer(u'</label>\n                                        </div>\n                                    </div>\n')
            __M_writer(u'\n')
            if hasattr(curTorrentProvider, 'ranked'):
                __M_writer(u'                                    <div class="field-pair row">\n                                        <div class="col-lg-3 col-md-4 col-sm-5 col-xs-12">\n                                            <label class="component-title">')
                __M_writer(unicode(_('Ranked torrents')))
                __M_writer(u'</label>\n                                        </div>\n                                        <div class="col-lg-9 col-md-8 col-sm-7 col-xs-12 component-desc">\n                                            <input type="checkbox" name="')
                __M_writer(unicode(curTorrentProvider.get_id()))
                __M_writer(u'_ranked"\n                                                   id="')
                __M_writer(unicode(curTorrentProvider.get_id()))
                __M_writer(u'_ranked" ')
                __M_writer(unicode(('', 'checked="checked"')[bool(curTorrentProvider.ranked)]))
                __M_writer(u' />\n                                            <label for="')
                __M_writer(unicode(curTorrentProvider.get_id()))
                __M_writer(u'_ranked">')
                __M_writer(unicode(_('only download ranked torrents (trusted releases)')))
                __M_writer(u'</label>\n                                        </div>\n                                    </div>\n')
            __M_writer(u'\n')
            if hasattr(curTorrentProvider, 'engrelease'):
                __M_writer(u'                                    <div class="field-pair row">\n                                        <div class="col-lg-3 col-md-4 col-sm-5 col-xs-12">\n                                            <label class="component-title">')
                __M_writer(unicode(_('English torrents')))
                __M_writer(u'</label>\n                                        </div>\n                                        <div class="col-lg-9 col-md-8 col-sm-7 col-xs-12 component-desc">\n                                            <input type="checkbox" name="')
                __M_writer(unicode(curTorrentProvider.get_id()))
                __M_writer(u'_engrelease"\n                                                   id="')
                __M_writer(unicode(curTorrentProvider.get_id()))
                __M_writer(u'_engrelease" ')
                __M_writer(unicode(('', 'checked="checked"')[bool(curTorrentProvider.engrelease)]))
                __M_writer(u' />\n                                            <label for="')
                __M_writer(unicode(curTorrentProvider.get_id()))
                __M_writer(u'_engrelease">')
                __M_writer(unicode(_('only download english torrents, or torrents containing english subtitles')))
                __M_writer(u'</label>\n                                        </div>\n                                    </div>\n')
            __M_writer(u'\n')
            if hasattr(curTorrentProvider, 'onlyspasearch'):
                __M_writer(u'                                    <div class="field-pair row">\n                                        <div class="col-lg-3 col-md-4 col-sm-5 col-xs-12">\n                                            <label class="component-title">')
                __M_writer(unicode(_('For Spanish torrents')))
                __M_writer(u'</label>\n                                        </div>\n                                        <div class="col-lg-9 col-md-8 col-sm-7 col-xs-12 component-desc">\n                                            <input type="checkbox" name="')
                __M_writer(unicode(curTorrentProvider.get_id()))
                __M_writer(u'_onlyspasearch"\n                                                   id="')
                __M_writer(unicode(curTorrentProvider.get_id()))
                __M_writer(u'_onlyspasearch" ')
                __M_writer(unicode(('', 'checked="checked"')[bool(curTorrentProvider.onlyspasearch)]))
                __M_writer(u' />\n                                            <label for="')
                __M_writer(unicode(curTorrentProvider.get_id()))
                __M_writer(u'_onlyspasearch">')
                __M_writer(unicode(_('ONLY search on this provider if show info is defined as "Spanish" (avoid provider\'s use for VOS shows)')))
                __M_writer(u'</label>\n                                        </div>\n                                    </div>\n')
            __M_writer(u'\n')
            if hasattr(curTorrentProvider, 'sorting'):
                __M_writer(u'                                    <div class="field-pair row">\n                                        <div class="col-lg-3 col-md-4 col-sm-5 col-xs-12">\n                                            <label class="component-title">')
                __M_writer(unicode(_('Sorting results by')))
                __M_writer(u'</label>\n                                        </div>\n                                        <div class="col-lg-9 col-md-8 col-sm-7 col-xs-12 component-desc">\n                                            <select name="')
                __M_writer(unicode(curTorrentProvider.get_id()))
                __M_writer(u'_sorting" id="')
                __M_writer(unicode(curTorrentProvider.get_id()))
                __M_writer(u'_sorting" class="form-control input-sm input200">\n')
                for curAction in ('last', 'seeders', 'leechers'):
                    __M_writer(u'                                                    <option value="')
                    __M_writer(unicode(curAction))
                    __M_writer(u'" ')
                    __M_writer(unicode(('', 'selected="selected"')[curAction == curTorrentProvider.sorting]))
                    __M_writer(u'>')
                    __M_writer(unicode(curAction))
                    __M_writer(u'</option>\n')
                __M_writer(u'                                            </select>\n                                        </div>\n                                    </div>\n')
            __M_writer(u'\n')
            if hasattr(curTorrentProvider, 'freeleech'):
                __M_writer(u'                                    <div class="field-pair row">\n                                        <div class="col-lg-3 col-md-4 col-sm-5 col-xs-12">\n                                            <label class="component-title">')
                __M_writer(unicode(_('Freeleech')))
                __M_writer(u'</label>\n                                        </div>\n                                        <div class="col-lg-9 col-md-8 col-sm-7 col-xs-12 component-desc">\n                                            <input type="checkbox" name="')
                __M_writer(unicode(curTorrentProvider.get_id()))
                __M_writer(u'_freeleech"\n                                                   id="')
                __M_writer(unicode(curTorrentProvider.get_id()))
                __M_writer(u'_freeleech" ')
                __M_writer(unicode(('', 'checked="checked"')[bool(curTorrentProvider.freeleech)]))
                __M_writer(u'/>\n                                            <label for="')
                __M_writer(unicode(curTorrentProvider.get_id()))
                __M_writer(u'_freeleech">')
                __M_writer(unicode(_('only download <b>"FreeLeech"</b> torrents.')))
                __M_writer(u'</label>\n                                        </div>\n                                    </div>\n')
            __M_writer(u'\n')
            if hasattr(curTorrentProvider, 'enable_daily'):
                __M_writer(u'                                    <div class="field-pair row">\n                                        <div class="col-lg-3 col-md-4 col-sm-5 col-xs-12">\n                                            <label class="component-title">')
                __M_writer(unicode(_('Enable daily searches')))
                __M_writer(u'</label>\n                                        </div>\n                                        <div class="col-lg-9 col-md-8 col-sm-7 col-xs-12 component-desc">\n                                            <input type="checkbox" name="')
                __M_writer(unicode(curTorrentProvider.get_id()))
                __M_writer(u'_enable_daily"\n                                                   id="')
                __M_writer(unicode(curTorrentProvider.get_id()))
                __M_writer(u'_enable_daily" ')
                __M_writer(unicode(('', 'checked="checked"')[bool(curTorrentProvider.enable_daily)]))
                __M_writer(u'/>\n                                            <label for="')
                __M_writer(unicode(curTorrentProvider.get_id()))
                __M_writer(u'_enable_daily">')
                __M_writer(unicode(_('enable provider to perform daily searches.')))
                __M_writer(u'</label>\n                                        </div>\n                                    </div>\n')
            __M_writer(u'\n')
            if hasattr(curTorrentProvider, 'enable_backlog'):
                __M_writer(u'                                    <div class="field-pair row')
                __M_writer(unicode((' hidden', '')[curTorrentProvider.supports_backlog]))
                __M_writer(u'">\n                                        <div class="col-lg-3 col-md-4 col-sm-5 col-xs-12">\n                                            <label class="component-title">')
                __M_writer(unicode(_('Enable backlog searches')))
                __M_writer(u'</label>\n                                        </div>\n                                        <div class="col-lg-9 col-md-8 col-sm-7 col-xs-12 component-desc">\n                                            <input type="checkbox" name="')
                __M_writer(unicode(curTorrentProvider.get_id()))
                __M_writer(u'_enable_backlog"\n                                                   id="')
                __M_writer(unicode(curTorrentProvider.get_id()))
                __M_writer(u'_enable_backlog" ')
                __M_writer(unicode(('', 'checked="checked"')[bool(curTorrentProvider.enable_backlog and curTorrentProvider.supports_backlog)]))
                __M_writer(u'/>\n                                            <label for="')
                __M_writer(unicode(curTorrentProvider.get_id()))
                __M_writer(u'_enable_backlog">')
                __M_writer(unicode(_('enable provider to perform backlog searches.')))
                __M_writer(u'</label>\n                                        </div>\n                                    </div>\n')
            __M_writer(u'\n')
            if hasattr(curTorrentProvider, 'search_mode'):
                __M_writer(u'                                    <div class="field-pair row">\n                                        <div class="col-lg-3 col-md-4 col-sm-5 col-xs-12">\n                                            <label class="component-title">')
                __M_writer(unicode(_('Season search mode')))
                __M_writer(u'</label>\n                                        </div>\n                                        <div class="col-lg-9 col-md-8 col-sm-7 col-xs-12 component-desc">\n                                            <div class="row">\n                                                <div class="col-md-12">\n                                                    <label>')
                __M_writer(unicode(_('when searching for complete seasons you can choose to have it look for season packs only, or choose to have it build a complete season from just single episodes.')))
                __M_writer(u'</label>\n                                                </div>\n                                            </div>\n                                            <div class="row">\n                                                <div class="col-md-12">\n                                                    <input type="radio" name="')
                __M_writer(unicode(curTorrentProvider.get_id()))
                __M_writer(u'_search_mode"\n                                                           id="')
                __M_writer(unicode(curTorrentProvider.get_id()))
                __M_writer(u'_search_mode_sponly"\n                                                           value="sponly" ')
                __M_writer(unicode(('', 'checked="checked"')[curTorrentProvider.search_mode=="sponly"]))
                __M_writer(u'/>\n                                                    <label for="')
                __M_writer(unicode(curTorrentProvider.get_id()))
                __M_writer(u'_search_mode_sponly">season packs only.</label>\n                                                </div>\n                                            </div>\n                                            <div class="row">\n                                                <div class="col-md-12">\n                                                    <input type="radio" name="')
                __M_writer(unicode(curTorrentProvider.get_id()))
                __M_writer(u'_search_mode"\n                                                           id="')
                __M_writer(unicode(curTorrentProvider.get_id()))
                __M_writer(u'_search_mode_eponly"\n                                                           value="eponly" ')
                __M_writer(unicode(('', 'checked="checked"')[curTorrentProvider.search_mode=="eponly"]))
                __M_writer(u'/>\n                                                    <label for="')
                __M_writer(unicode(curTorrentProvider.get_id()))
                __M_writer(u'_search_mode_eponly">episodes only.</label>\n                                                </div>\n                                            </div>\n                                        </div>\n                                    </div>\n')
            __M_writer(u'\n')
            if hasattr(curTorrentProvider, 'search_fallback'):
                __M_writer(u'                                    <div class="field-pair row">\n                                        <div class="col-lg-3 col-md-4 col-sm-5 col-xs-12">\n                                            <label class="component-title">')
                __M_writer(unicode(_('Enable fallback')))
                __M_writer(u'</label>\n                                        </div>\n                                        <div class="col-lg-9 col-md-8 col-sm-7 col-xs-12 component-desc">\n                                            <input type="checkbox" name="')
                __M_writer(unicode(curTorrentProvider.get_id()))
                __M_writer(u'_search_fallback"\n                                                   id="')
                __M_writer(unicode(curTorrentProvider.get_id()))
                __M_writer(u'_search_fallback" ')
                __M_writer(unicode(('', 'checked="checked"')[bool(curTorrentProvider.search_fallback)]))
                __M_writer(u'/>\n                                            <label for="')
                __M_writer(unicode(curTorrentProvider.get_id()))
                __M_writer(u'_search_fallback">')
                __M_writer(unicode(_('when searching for a complete season depending on search mode you may return no results, this helps by restarting the search using the opposite search mode.')))
                __M_writer(u'</label>\n                                        </div>\n                                    </div>\n')
            __M_writer(u'\n')
            if hasattr(curTorrentProvider, 'cat') and curTorrentProvider.get_id() == 'tntvillage':
                __M_writer(u'                                    <div class="field-pair row">\n                                        <div class="col-lg-3 col-md-4 col-sm-5 col-xs-12">\n                                            <label class="component-title">')
                __M_writer(unicode(_('Category')))
                __M_writer(u'</label>\n                                        </div>\n                                        <div class="col-lg-9 col-md-8 col-sm-7 col-xs-12 component-desc">\n                                            <select name="')
                __M_writer(unicode(curTorrentProvider.get_id()))
                __M_writer(u'_cat"\n                                                    id="')
                __M_writer(unicode(curTorrentProvider.get_id()))
                __M_writer(u'_cat" class="form-control input-sm input200">\n')
                for i in curTorrentProvider.category_dict.keys():
                    __M_writer(u'                                                    <option value="')
                    __M_writer(unicode(curTorrentProvider.category_dict[i]))
                    __M_writer(u'" ')
                    __M_writer(unicode(('', 'selected="selected"')[curTorrentProvider.category_dict[i] == curTorrentProvider.cat]))
                    __M_writer(u'>')
                    __M_writer(unicode(i))
                    __M_writer(u'</option>\n')
                __M_writer(u'                                            </select>\n                                        </div>\n                                    </div>\n')
            __M_writer(u'\n')
            if hasattr(curTorrentProvider, 'subtitle') and curTorrentProvider.get_id() == 'tntvillage':
                __M_writer(u'                                    <div class="field-pair row">\n                                        <div class="col-lg-3 col-md-4 col-sm-5 col-xs-12">\n                                            <label class="component-title">')
                __M_writer(unicode(_('Subtitled')))
                __M_writer(u'</label>\n                                        </div>\n                                        <div class="col-lg-9 col-md-8 col-sm-7 col-xs-12 component-desc">\n                                            <input type="checkbox" name="')
                __M_writer(unicode(curTorrentProvider.get_id()))
                __M_writer(u'_subtitle"\n                                                   id="')
                __M_writer(unicode(curTorrentProvider.get_id()))
                __M_writer(u'_subtitle" ')
                __M_writer(unicode(('', 'checked="checked"')[bool(curTorrentProvider.subtitle)]))
                __M_writer(u'/>\n                                            <label for="')
                __M_writer(unicode(curTorrentProvider.get_id()))
                __M_writer(u'_subtitle">')
                __M_writer(unicode(_('select torrent with Italian subtitle')))
                __M_writer(u'</label>\n                                        </div>\n                                    </div>\n')
            __M_writer(u'\n                            </div>\n')
        __M_writer(u'\n                    </fieldset>\n                </div>\n            </div>\n        </div>\n\n')
        if sickbeard.USE_NZBS:
            __M_writer(u'            <div id="custom-newznab" class="component-group">\n                <div class="row">\n                    <div class="col-lg-3 col-md-4 col-sm-4 col-xs-12">\n                        <div class="component-group-desc">\n                            <h3>')
            __M_writer(unicode(_('Configure Custom<br>Newznab Providers')))
            __M_writer(u'</h3>\n                            <p>')
            __M_writer(unicode(_('Add and setup or remove custom Newznab providers.')))
            __M_writer(u'</p>\n                        </div>\n                    </div>\n                    <div class="col-lg-9 col-md-8 col-sm-8 col-xs-12">\n\n                        <fieldset class="component-group-list">\n\n                            <div class="field-pair row">\n                                <div class="col-lg-3 col-md-4 col-sm-5 col-xs-12">\n                                    <label class="component-title">')
            __M_writer(unicode(_('Select provider')))
            __M_writer(u'</label>\n                                </div>\n                                <div class="col-lg-9 col-md-8 col-sm-7 col-xs-12 component-desc">\n                                    <input type="hidden" name="newznab_string" id="newznab_string"/>\n                                    <select id="editANewznabProvider" class="form-control input-sm input200">\n                                        <option value="addNewznab">')
            __M_writer(unicode(_('-- add new provider --')))
            __M_writer(u'</option>\n                                    </select>\n                                </div>\n                            </div>\n\n                            <div class="newznabProviderDiv" id="addNewznab">\n\n                                <div class="field-pair row">\n                                    <div class="col-lg-3 col-md-4 col-sm-5 col-xs-12">\n                                        <label class="component-title">')
            __M_writer(unicode(_('Provider name')))
            __M_writer(u'</label>\n                                    </div>\n                                    <div class="col-lg-9 col-md-8 col-sm-7 col-xs-12 component-desc">\n                                        <input type="text" id="newznab_name" class="form-control input-sm input200"\n                                               autocapitalize="off" title="Provider name"/>\n                                    </div>\n                                </div>\n\n                                <div class="field-pair row">\n                                    <div class="col-lg-3 col-md-4 col-sm-5 col-xs-12">\n                                        <label class="component-title">')
            __M_writer(unicode(_('Site URL')))
            __M_writer(u'</label>\n                                    </div>\n                                    <div class="col-lg-9 col-md-8 col-sm-7 col-xs-12 component-desc">\n                                        <input type="text" id="newznab_url" class="form-control input-sm input350"\n                                               autocapitalize="off" title="Provider url"/>\n                                    </div>\n                                </div>\n                                <div class="field-pair row">\n                                    <div class="col-lg-3 col-md-4 col-sm-5 col-xs-12">\n                                        <span class="component-title">')
            __M_writer(unicode(_('API key')))
            __M_writer(u'</span>\n                                    </div>\n                                    <div class="col-lg-9 col-md-8 col-sm-7 col-xs-12 component-desc">\n                                        <div class="row">\n                                            <div class="col-md-12">\n                                                <input type="password" id="newznab_key"\n                                                       class="form-control input-sm input350" autocapitalize="off"/>\n                                            </div>\n                                        </div>\n                                        <div class="row">\n                                            <div class="col-md-12">\n                                                <label for="newznab_key" class="component-desc">(if not required, type 0)</label>\n                                            </div>\n                                        </div>\n                                    </div>\n                                </div>\n\n                                <div class="field-pair row" id="newznabcapdiv">\n                                    <div class="col-lg-3 col-md-4 col-sm-5 col-xs-12">\n                                        <span class="component-title">')
            __M_writer(unicode(_('Newznab search categories')))
            __M_writer(u'</span>\n                                    </div>\n                                    <div class="col-lg-9 col-md-8 col-sm-7 col-xs-12 component-desc">\n                                        <div class="row">\n                                            <div class="col-md-12">\n                                                <select id="newznab_cap" multiple="multiple" style="min-width:10em;"></select>\n                                                <select id="newznab_cat" multiple="multiple" style="min-width:10em;"></select>\n                                            </div>\n                                        </div>\n                                        <div class="row">\n                                            <div class="col-md-12">\n                                                <label><b>')
            __M_writer(unicode(_('select your Newznab categories on the left, and click the "update categories" button to use them for searching.) <b>don\'t forget to to save the form!')))
            __M_writer(u'</b></label>\n                                            </div>\n                                        </div>\n                                        <div class="row">\n                                            <div class="col-md-12">\n                                                <input class="btn newznab_cat_update" type="button" id="newznab_cat_update" value="')
            __M_writer(unicode(_('Update Categories')))
            __M_writer(u'" disabled="disabled" />\n                                            </div>\n                                        </div>\n                                    </div>\n                                </div>\n\n                                <div class="row">\n                                    <div class="col-md-12">\n                                        <div id="newznab_add_div">\n                                            <input class="btn newznab_save" type="button" id="newznab_add" value="')
            __M_writer(unicode(_('Add')))
            __M_writer(u'"/>\n                                        </div>\n                                        <div id="newznab_update_div" style="display: none;">\n                                            <input class="btn btn-danger newznab_delete" type="button" id="newznab_delete" value="')
            __M_writer(unicode(_('Delete')))
            __M_writer(u'"/>\n                                        </div>\n                                    </div>\n                                </div>\n\n                            </div>\n\n                        </fieldset>\n                    </div>\n                </div>\n            </div>\n')
        __M_writer(u'\n')
        if sickbeard.USE_TORRENTS:
            __M_writer(u'            <div id="custom-torrent" class="component-group">\n                <div class="row">\n                    <div class="col-lg-3 col-md-4 col-sm-4 col-xs-12">\n                        <div class="component-group-desc">\n                            <h3>')
            __M_writer(unicode(_('Configure Custom Torrent Providers')))
            __M_writer(u'</h3>\n                            <p>')
            __M_writer(unicode(_('Add and setup or remove custom RSS providers.')))
            __M_writer(u'</p>\n                        </div>\n                    </div>\n                    <div class="col-lg-9 col-md-8 col-sm-8 col-xs-12">\n\n                        <fieldset class="component-group-list">\n\n                            <div class="field-pair row">\n                                <div class="col-lg-3 col-md-4 col-sm-5 col-xs-12">\n                                    <label class="component-title">')
            __M_writer(unicode(_('Select provider')))
            __M_writer(u'</label>\n                                </div>\n                                <div class="col-lg-9 col-md-8 col-sm-7 col-xs-12 component-desc">\n                                    <input type="hidden" name="torrentrss_string" id="torrentrss_string"/>\n                                    <select id="editATorrentRssProvider" class="form-control input-sm input200">\n                                        <option value="addTorrentRss">')
            __M_writer(unicode(_('-- add new provider --')))
            __M_writer(u'</option>\n                                    </select>\n                                </div>\n                            </div>\n\n                            <div class="torrentRssProviderDiv" id="addTorrentRss">\n\n                                <div class="field-pair row">\n                                    <div class="col-lg-3 col-md-4 col-sm-5 col-xs-12">\n                                        <label class="component-title">')
            __M_writer(unicode(_('Provider name')))
            __M_writer(u'</label>\n                                    </div>\n                                    <div class="col-lg-9 col-md-8 col-sm-7 col-xs-12 component-desc">\n                                        <input type="text" id="torrentrss_name" class="form-control input-sm input200" autocapitalize="off"/>\n                                    </div>\n                                </div>\n                                <div class="field-pair row">\n                                    <div class="col-lg-3 col-md-4 col-sm-5 col-xs-12">\n                                        <label class="component-title">')
            __M_writer(unicode(_('RSS URL')))
            __M_writer(u'</label>\n                                    </div>\n                                    <div class="col-lg-9 col-md-8 col-sm-7 col-xs-12 component-desc">\n                                        <input type="text" id="torrentrss_url" class="form-control input-sm input350" autocapitalize="off"/>\n                                    </div>\n                                </div>\n                                <div class="field-pair row">\n                                    <div class="col-lg-3 col-md-4 col-sm-5 col-xs-12">\n                                        <label class="component-title">')
            __M_writer(unicode(_('Cookies')))
            __M_writer(u'</label>\n                                    </div>\n                                    <div class="col-lg-9 col-md-8 col-sm-7 col-xs-12 component-desc">\n                                        <div class="row">\n                                            <div class="col-md-12">\n                                                <input type="text" id="torrentrss_cookies" class="form-control input-sm input350" autocapitalize="off"/>\n                                            </div>\n                                        </div>\n                                        <div class="row">\n                                            <div class="col-md-12">\n                                                <label>eg. uid=xx;pass=yy</label>\n                                            </div>\n                                        </div>\n                                    </div>\n                                </div>\n                                <div class="field-pair row">\n                                    <div class="col-lg-3 col-md-4 col-sm-5 col-xs-12">\n                                        <label class="component-title">')
            __M_writer(unicode(_('Search element')))
            __M_writer(u'</label>\n                                    </div>\n                                    <div class="col-lg-9 col-md-8 col-sm-7 col-xs-12 component-desc">\n                                        <div class="row">\n                                            <div class="col-md-12">\n                                                <input type="text" id="torrentrss_titleTAG" class="form-control input-sm input200" value="title" autocapitalize="off"/>\n                                            </div>\n                                        </div>\n                                        <div class="row">\n                                            <div class="col-md-12">\n                                                <span class="component-desc">')
            __M_writer(unicode(_('eg: title')))
            __M_writer(u'</span>\n                                            </div>\n                                        </div>\n                                    </div>\n                                </div>\n\n                                <div class="row">\n                                    <div class="col-md-12">\n                                        <div id="torrentrss_add_div">\n                                            <input type="button" class="btn torrentrss_save" id="torrentrss_add" value="')
            __M_writer(unicode(_('Add')))
            __M_writer(u'"/>\n                                        </div>\n                                        <div id="torrentrss_update_div" style="display: none;">\n                                            <input type="button" class="btn btn-danger torrentrss_delete" id="torrentrss_delete" value="')
            __M_writer(unicode(_('Delete')))
            __M_writer(u'"/>\n                                        </div>\n                                    </div>\n                                </div>\n\n                            </div>\n                        </fieldset>\n                    </div>\n                </div>\n            </div>\n')
        __M_writer(u'\n    </form>\n')
        return ''
    finally:
        context.caller_stack._pop_frame()


def render_scripts(context,**pageargs):
    __M_caller = context.caller_stack._push_frame()
    try:
        int = context.get('int', UNDEFINED)
        static_url = context.get('static_url', UNDEFINED)
        def scripts():
            return render_scripts(context)
        __M_writer = context.writer()
        __M_writer(u'\n    <script type="text/javascript" src="')
        __M_writer(unicode(static_url('js/configProviders.js')))
        __M_writer(u'"></script>\n    <script type="text/javascript">\n        $(document).ready(function() {\n            $(\'#config-components\').tabs();\n')
        if sickbeard.USE_NZBS:
            for curNewznabProvider in sickbeard.newznabProviderList:
                __M_writer(u"                    $(this).addProvider('")
                __M_writer(unicode(curNewznabProvider.get_id()))
                __M_writer(u"', '")
                __M_writer(unicode(curNewznabProvider.name))
                __M_writer(u"', '")
                __M_writer(unicode(curNewznabProvider.url))
                __M_writer(u"', '")
                __M_writer(unicode(curNewznabProvider.key))
                __M_writer(u"', '")
                __M_writer(unicode(curNewznabProvider.catIDs))
                __M_writer(u"', ")
                __M_writer(unicode(int(curNewznabProvider.default)))
                __M_writer(u');\n')
        if sickbeard.USE_TORRENTS:
            for curTorrentRssProvider in sickbeard.torrentRssProviderList:
                __M_writer(u"                    $(this).addTorrentRssProvider('")
                __M_writer(unicode(curTorrentRssProvider.get_id()))
                __M_writer(u"', '")
                __M_writer(unicode(curTorrentRssProvider.name))
                __M_writer(u"', '")
                __M_writer(unicode(curTorrentRssProvider.url))
                __M_writer(u"', '")
                __M_writer(unicode(curTorrentRssProvider.cookies))
                __M_writer(u"', '")
                __M_writer(unicode(curTorrentRssProvider.titleTAG))
                __M_writer(u"');\n")
        __M_writer(u'        });\n    </script>\n')
        return ''
    finally:
        context.caller_stack._pop_frame()


"""
__M_BEGIN_METADATA
{"source_encoding": "ascii", "line_map": {"16": 2, "33": 0, "50": 1, "51": 6, "56": 25, "61": 38, "66": 936, "72": 27, "79": 27, "80": 28, "81": 28, "82": 29, "83": 29, "84": 31, "85": 32, "86": 32, "87": 32, "88": 34, "89": 35, "90": 36, "91": 36, "92": 36, "98": 40, "110": 40, "111": 47, "112": 47, "113": 48, "114": 48, "115": 49, "116": 49, "117": 51, "118": 52, "119": 52, "120": 52, "121": 54, "122": 55, "123": 57, "124": 59, "125": 59, "126": 60, "127": 60, "128": 69, "129": 70, "130": 70, "145": 83, "146": 84, "147": 84, "148": 84, "149": 84, "150": 85, "151": 85, "152": 85, "153": 85, "154": 86, "155": 86, "156": 88, "157": 88, "158": 89, "159": 89, "160": 89, "161": 89, "162": 92, "163": 92, "164": 92, "165": 92, "166": 93, "167": 93, "168": 94, "169": 94, "170": 96, "171": 96, "172": 99, "173": 101, "174": 101, "175": 112, "176": 112, "177": 113, "178": 113, "179": 114, "180": 114, "181": 124, "182": 124, "183": 127, "193": 135, "194": 136, "195": 137, "196": 138, "197": 139, "198": 139, "199": 139, "200": 139, "201": 139, "202": 141, "203": 142, "204": 143, "205": 143, "206": 143, "207": 145, "208": 150, "209": 151, "210": 151, "211": 151, "212": 152, "213": 153, "214": 156, "215": 156, "216": 159, "217": 159, "218": 160, "219": 160, "220": 167, "221": 167, "222": 170, "223": 170, "224": 171, "225": 171, "226": 172, "227": 172, "228": 177, "229": 178, "230": 179, "231": 181, "232": 181, "233": 184, "234": 184, "235": 185, "236": 185, "237": 185, "238": 185, "239": 186, "240": 186, "241": 186, "242": 186, "243": 190, "244": 191, "245": 192, "246": 192, "247": 192, "248": 194, "249": 194, "250": 197, "251": 197, "252": 198, "253": 198, "254": 198, "255": 198, "256": 199, "257": 199, "258": 199, "259": 199, "260": 203, "261": 204, "262": 205, "263": 207, "264": 207, "265": 212, "266": 212, "267": 217, "268": 217, "269": 218, "270": 218, "271": 219, "272": 219, "273": 220, "274": 220, "275": 220, "276": 220, "277": 225, "278": 225, "279": 226, "280": 226, "281": 227, "282": 227, "283": 228, "284": 228, "285": 228, "286": 228, "287": 234, "288": 235, "289": 236, "290": 238, "291": 238, "292": 241, "293": 241, "294": 242, "295": 242, "296": 242, "297": 242, "298": 243, "299": 243, "300": 243, "301": 243, "302": 247, "303": 250, "304": 251, "305": 252, "306": 252, "307": 252, "308": 253, "309": 254, "310": 256, "311": 256, "312": 259, "313": 259, "314": 260, "315": 260, "316": 265, "317": 266, "318": 267, "319": 269, "320": 269, "321": 272, "322": 272, "323": 273, "324": 273, "325": 278, "326": 279, "327": 280, "328": 282, "329": 282, "330": 285, "331": 285, "332": 286, "333": 286, "334": 286, "335": 286, "336": 287, "337": 287, "338": 287, "339": 287, "340": 291, "341": 292, "342": 293, "343": 293, "344": 293, "345": 295, "346": 295, "347": 298, "348": 298, "349": 299, "350": 299, "351": 299, "352": 299, "353": 300, "354": 300, "355": 300, "356": 300, "357": 304, "358": 305, "359": 306, "360": 308, "361": 308, "362": 313, "363": 313, "364": 318, "365": 318, "366": 319, "367": 319, "368": 320, "369": 320, "370": 321, "371": 321, "372": 326, "373": 326, "374": 327, "375": 327, "376": 328, "377": 328, "378": 329, "379": 329, "380": 335, "381": 336, "382": 337, "383": 339, "384": 339, "385": 342, "386": 342, "387": 343, "388": 343, "389": 343, "390": 343, "391": 344, "392": 344, "393": 344, "394": 344, "395": 348, "396": 351, "397": 352, "398": 353, "399": 353, "400": 353, "401": 355, "402": 356, "403": 358, "404": 358, "405": 361, "406": 361, "407": 362, "408": 362, "409": 363, "410": 363, "411": 365, "412": 365, "413": 365, "414": 365, "415": 369, "416": 370, "417": 371, "418": 373, "419": 373, "420": 376, "421": 376, "422": 377, "423": 377, "424": 378, "425": 378, "426": 383, "427": 384, "428": 385, "429": 387, "430": 387, "431": 390, "432": 390, "433": 391, "434": 391, "435": 392, "436": 392, "437": 397, "438": 398, "439": 399, "440": 401, "441": 401, "442": 404, "443": 404, "444": 405, "445": 405, "446": 405, "447": 405, "448": 410, "449": 411, "450": 412, "451": 414, "452": 414, "453": 417, "454": 417, "455": 418, "456": 418, "457": 419, "458": 419, "459": 424, "460": 425, "461": 426, "462": 428, "463": 428, "464": 431, "465": 431, "466": 432, "467": 432, "468": 433, "469": 433, "470": 438, "471": 439, "472": 440, "473": 442, "474": 442, "475": 445, "476": 445, "477": 446, "478": 446, "479": 447, "480": 447, "481": 452, "482": 453, "483": 454, "484": 456, "485": 456, "486": 461, "487": 461, "488": 462, "489": 462, "490": 463, "491": 463, "492": 470, "493": 470, "494": 471, "497": 473, "498": 480, "499": 481, "500": 482, "501": 484, "502": 484, "503": 487, "504": 487, "505": 488, "506": 488, "507": 488, "508": 488, "509": 494, "510": 495, "511": 496, "512": 498, "513": 498, "514": 498, "515": 498, "516": 503, "517": 503, "518": 504, "519": 504, "520": 504, "521": 504, "522": 510, "523": 510, "524": 510, "525": 510, "526": 516, "527": 517, "528": 518, "529": 520, "530": 520, "531": 520, "532": 520, "533": 523, "534": 523, "535": 524, "536": 524, "537": 525, "538": 525, "539": 529, "540": 530, "541": 531, "542": 533, "543": 533, "544": 533, "545": 533, "546": 536, "547": 536, "548": 537, "549": 537, "550": 538, "551": 538, "552": 543, "553": 544, "554": 545, "555": 547, "556": 547, "557": 550, "558": 550, "559": 551, "560": 551, "561": 551, "562": 551, "563": 552, "564": 552, "565": 552, "566": 552, "567": 556, "568": 557, "569": 558, "570": 560, "571": 560, "572": 563, "573": 563, "574": 564, "575": 564, "576": 564, "577": 564, "578": 565, "579": 565, "580": 565, "581": 565, "582": 569, "583": 570, "584": 571, "585": 573, "586": 573, "587": 576, "588": 576, "589": 577, "590": 577, "591": 577, "592": 577, "593": 578, "594": 578, "595": 578, "596": 578, "597": 582, "598": 583, "599": 584, "600": 586, "601": 586, "602": 589, "603": 589, "604": 590, "605": 590, "606": 590, "607": 590, "608": 591, "609": 591, "610": 591, "611": 591, "612": 595, "613": 596, "614": 597, "615": 599, "616": 599, "617": 602, "618": 602, "619": 602, "620": 602, "621": 603, "622": 604, "623": 604, "624": 604, "625": 604, "626": 604, "627": 604, "628": 604, "629": 606, "630": 610, "631": 611, "632": 612, "633": 614, "634": 614, "635": 617, "636": 617, "637": 618, "638": 618, "639": 618, "640": 618, "641": 619, "642": 619, "643": 619, "644": 619, "645": 623, "646": 624, "647": 625, "648": 627, "649": 627, "650": 630, "651": 630, "652": 631, "653": 631, "654": 631, "655": 631, "656": 632, "657": 632, "658": 632, "659": 632, "660": 636, "661": 637, "662": 638, "663": 638, "664": 638, "665": 640, "666": 640, "667": 643, "668": 643, "669": 644, "670": 644, "671": 644, "672": 644, "673": 645, "674": 645, "675": 645, "676": 645, "677": 649, "678": 650, "679": 651, "680": 653, "681": 653, "682": 658, "683": 658, "684": 663, "685": 663, "686": 664, "687": 664, "688": 665, "689": 665, "690": 666, "691": 666, "692": 671, "693": 671, "694": 672, "695": 672, "696": 673, "697": 673, "698": 674, "699": 674, "700": 680, "701": 681, "702": 682, "703": 684, "704": 684, "705": 687, "706": 687, "707": 688, "708": 688, "709": 688, "710": 688, "711": 689, "712": 689, "713": 689, "714": 689, "715": 693, "716": 694, "717": 695, "718": 697, "719": 697, "720": 700, "721": 700, "722": 701, "723": 701, "724": 702, "725": 703, "726": 703, "727": 703, "728": 703, "729": 703, "730": 703, "731": 703, "732": 705, "733": 709, "734": 710, "735": 711, "736": 713, "737": 713, "738": 716, "739": 716, "740": 717, "741": 717, "742": 717, "743": 717, "744": 718, "745": 718, "746": 718, "747": 718, "748": 722, "749": 725, "750": 731, "751": 732, "752": 736, "753": 736, "754": 737, "755": 737, "756": 746, "757": 746, "758": 751, "759": 751, "760": 760, "761": 760, "762": 770, "763": 770, "764": 779, "765": 779, "766": 798, "767": 798, "768": 809, "769": 809, "770": 814, "771": 814, "772": 823, "773": 823, "774": 826, "775": 826, "776": 838, "777": 839, "778": 840, "779": 844, "780": 844, "781": 845, "782": 845, "783": 854, "784": 854, "785": 859, "786": 859, "787": 868, "788": 868, "789": 876, "790": 876, "791": 884, "792": 884, "793": 901, "794": 901, "795": 911, "796": 911, "797": 920, "798": 920, "799": 923, "800": 923, "801": 934, "807": 8, "815": 8, "816": 9, "817": 9, "818": 13, "819": 14, "820": 15, "821": 15, "822": 15, "823": 15, "824": 15, "825": 15, "826": 15, "827": 15, "828": 15, "829": 15, "830": 15, "831": 15, "832": 15, "833": 18, "834": 19, "835": 20, "836": 20, "837": 20, "838": 20, "839": 20, "840": 20, "841": 20, "842": 20, "843": 20, "844": 20, "845": 20, "846": 23, "852": 846}, "uri": "config_providers.mako", "filename": "/app/sickrage/gui/slick/views/config_providers.mako"}
__M_END_METADATA
"""
